[2022-11-29 12:51:12] - Logging Provider: org.jboss.logging.Slf4jLoggerProvider
[2022-11-29 12:51:12] - HV000001: Hibernate Validator 6.0.21.Final
[2022-11-29 12:51:12] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 12:51:12] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 12:51:12] - Loaded expression factory via original TCCL
[2022-11-29 12:51:12] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2022-11-29 12:51:12] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2022-11-29 12:51:12] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2022-11-29 12:51:12] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 12:51:12] - Trying to load META-INF/validation.xml via user class loader
[2022-11-29 12:51:12] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 12:51:12] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 12:51:12] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 12:51:12] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 12:51:12] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 12:51:12] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 12:51:12] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 12:51:12] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 12:51:13] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 12:51:13] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 12:51:13] - Loaded expression factory via original TCCL
[2022-11-29 12:51:13] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2022-11-29 12:51:13] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2022-11-29 12:51:13] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2022-11-29 12:51:13] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 12:51:13] - Trying to load META-INF/validation.xml via user class loader
[2022-11-29 12:51:13] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 12:51:13] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 12:51:13] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 12:51:13] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 12:51:13] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 12:51:13] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 12:51:13] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 12:51:13] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 12:51:32] - Fail Logging. Invalid user or password for username kerbecs
[2022-11-29 12:51:41] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 12:51:41] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 12:51:41] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 12:51:41] - HHH000412: Hibernate Core {5.4.11.Final}
[2022-11-29 12:51:41] - HHH000206: hibernate.properties not found
[2022-11-29 12:51:41] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 12:51:41] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 12:51:41] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 12:51:42] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 12:51:42] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 12:51:42] - Building session factory using provided StandardServiceRegistry
[2022-11-29 12:51:42] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 12:51:42] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 12:51:42] - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[2022-11-29 12:51:42] - Adding type registration boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 12:51:42] - Adding type registration boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 12:51:42] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 12:51:42] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3eca9300
[2022-11-29 12:51:42] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1be88e3f
[2022-11-29 12:51:42] - Adding type registration yes_no -> org.hibernate.type.YesNoType@30a1690
[2022-11-29 12:51:42] - Adding type registration byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 12:51:42] - Adding type registration byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 12:51:42] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 12:51:42] - Adding type registration character -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 12:51:42] - Adding type registration char -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 12:51:42] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 12:51:42] - Adding type registration short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 12:51:42] - Adding type registration short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 12:51:42] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 12:51:42] - Adding type registration integer -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 12:51:42] - Adding type registration int -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 12:51:42] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 12:51:42] - Adding type registration long -> org.hibernate.type.LongType@789819ba
[2022-11-29 12:51:42] - Adding type registration long -> org.hibernate.type.LongType@789819ba
[2022-11-29 12:51:42] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@789819ba
[2022-11-29 12:51:42] - Adding type registration float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 12:51:42] - Adding type registration float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 12:51:42] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 12:51:42] - Adding type registration double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 12:51:42] - Adding type registration double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 12:51:42] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 12:51:42] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2148f6b8
[2022-11-29 12:51:42] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2148f6b8
[2022-11-29 12:51:42] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5408cd90
[2022-11-29 12:51:42] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5408cd90
[2022-11-29 12:51:42] - Adding type registration string -> org.hibernate.type.StringType@b077ab0
[2022-11-29 12:51:42] - Adding type registration java.lang.String -> org.hibernate.type.StringType@b077ab0
[2022-11-29 12:51:42] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@306ba15a
[2022-11-29 12:51:42] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@765565aa
[2022-11-29 12:51:42] - Adding type registration url -> org.hibernate.type.UrlType@4dd4472c
[2022-11-29 12:51:42] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dd4472c
[2022-11-29 12:51:42] - Adding type registration Duration -> org.hibernate.type.DurationType@7b12d977
[2022-11-29 12:51:42] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b12d977
[2022-11-29 12:51:42] - Adding type registration Instant -> org.hibernate.type.InstantType@51b6a435
[2022-11-29 12:51:42] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51b6a435
[2022-11-29 12:51:42] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@236c5b7
[2022-11-29 12:51:42] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@236c5b7
[2022-11-29 12:51:42] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@33717b2
[2022-11-29 12:51:42] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@33717b2
[2022-11-29 12:51:42] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4760cc47
[2022-11-29 12:51:42] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4760cc47
[2022-11-29 12:51:42] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35745fff
[2022-11-29 12:51:42] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35745fff
[2022-11-29 12:51:42] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1767dcd6
[2022-11-29 12:51:42] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1767dcd6
[2022-11-29 12:51:42] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5467a32c
[2022-11-29 12:51:42] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5467a32c
[2022-11-29 12:51:42] - Adding type registration date -> org.hibernate.type.DateType@7f99f269
[2022-11-29 12:51:42] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f99f269
[2022-11-29 12:51:42] - Adding type registration time -> org.hibernate.type.TimeType@29205f6
[2022-11-29 12:51:42] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29205f6
[2022-11-29 12:51:42] - Adding type registration timestamp -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 12:51:42] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 12:51:42] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 12:51:42] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a953b3
[2022-11-29 12:51:42] - Adding type registration calendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 12:51:42] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 12:51:42] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 12:51:42] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78c5a23a
[2022-11-29 12:51:42] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@21b45c41
[2022-11-29 12:51:42] - Adding type registration locale -> org.hibernate.type.LocaleType@6f913455
[2022-11-29 12:51:42] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6f913455
[2022-11-29 12:51:42] - Adding type registration currency -> org.hibernate.type.CurrencyType@7556c700
[2022-11-29 12:51:42] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7556c700
[2022-11-29 12:51:42] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44d787c3
[2022-11-29 12:51:42] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44d787c3
[2022-11-29 12:51:42] - Adding type registration class -> org.hibernate.type.ClassType@2f4e0036
[2022-11-29 12:51:42] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f4e0036
[2022-11-29 12:51:42] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c5214a0
[2022-11-29 12:51:42] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c5214a0
[2022-11-29 12:51:42] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@521c2db2
[2022-11-29 12:51:42] - Adding type registration binary -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 12:51:42] - Adding type registration byte[] -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 12:51:42] - Adding type registration [B -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 12:51:42] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 12:51:42] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 12:51:42] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 12:51:42] - Adding type registration row_version -> org.hibernate.type.RowVersionType@443d6a86
[2022-11-29 12:51:42] - Adding type registration image -> org.hibernate.type.ImageType@67f310c3
[2022-11-29 12:51:42] - Adding type registration characters -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 12:51:42] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 12:51:42] - Adding type registration [C -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 12:51:42] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 12:51:42] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 12:51:42] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 12:51:42] - Adding type registration text -> org.hibernate.type.TextType@3e77ca5c
[2022-11-29 12:51:42] - Adding type registration ntext -> org.hibernate.type.NTextType@41be4068
[2022-11-29 12:51:42] - Adding type registration blob -> org.hibernate.type.BlobType@138f3105
[2022-11-29 12:51:42] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@138f3105
[2022-11-29 12:51:42] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12c1cd07
[2022-11-29 12:51:42] - Adding type registration clob -> org.hibernate.type.ClobType@677aa299
[2022-11-29 12:51:42] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@677aa299
[2022-11-29 12:51:42] - Adding type registration nclob -> org.hibernate.type.NClobType@2289c197
[2022-11-29 12:51:42] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2289c197
[2022-11-29 12:51:42] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58f1161
[2022-11-29 12:51:42] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5c041df4
[2022-11-29 12:51:42] - Adding type registration serializable -> org.hibernate.type.SerializableType@68682650
[2022-11-29 12:51:42] - Adding type registration object -> org.hibernate.type.ObjectType@6891e8f
[2022-11-29 12:51:42] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6891e8f
[2022-11-29 12:51:42] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2aa725e0
[2022-11-29 12:51:42] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71d2be9f
[2022-11-29 12:51:42] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38872af4
[2022-11-29 12:51:42] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7dc24715
[2022-11-29 12:51:42] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e59f568
[2022-11-29 12:51:42] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@a9b887a
[2022-11-29 12:51:42] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@bcad357
[2022-11-29 12:51:42] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64dfd7d4
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 12:51:42] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 12:51:42] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 12:51:42] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 12:51:42] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 12:51:42] - HHH10001003: Autocommit mode: false
[2022-11-29 12:51:42] - Initializing Connection pool with 1 Connections
[2022-11-29 12:51:42] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 12:51:42] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 12:51:42] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 12:51:42] - JDBC version : 4.2
[2022-11-29 12:51:42] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 12:51:42] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 12:51:43] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 12:51:43] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 12:51:43] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47f7c356] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@238de255]
[2022-11-29 12:51:43] - Binding entity from annotated class: com.app.code.User
[2022-11-29 12:51:43] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 12:51:43] - Import with entity name User
[2022-11-29 12:51:43] - Bind entity com.app.code.User on table user_detail
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 12:51:43] - building SimpleValue for user_id
[2022-11-29 12:51:43] - Building property user_id
[2022-11-29 12:51:43] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 12:51:43] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - Building property customer
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 12:51:43] - building SimpleValue for password
[2022-11-29 12:51:43] - Building property password
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 12:51:43] - building SimpleValue for username
[2022-11-29 12:51:43] - Building property username
[2022-11-29 12:51:43] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 12:51:43] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 12:51:43] - Import with entity name Customer
[2022-11-29 12:51:43] - Bind entity com.app.code.Customer on table customer
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 12:51:43] - building SimpleValue for id
[2022-11-29 12:51:43] - Building property id
[2022-11-29 12:51:43] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 12:51:43] - building SimpleValue for address
[2022-11-29 12:51:43] - Building property address
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 12:51:43] - building SimpleValue for email
[2022-11-29 12:51:43] - Building property email
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 12:51:43] - building SimpleValue for firstName
[2022-11-29 12:51:43] - Building property firstName
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 12:51:43] - building SimpleValue for job
[2022-11-29 12:51:43] - Building property job
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 12:51:43] - building SimpleValue for lastName
[2022-11-29 12:51:43] - Building property lastName
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 12:51:43] - building SimpleValue for location
[2022-11-29 12:51:43] - Building property location
[2022-11-29 12:51:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 12:51:43] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 12:51:43] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 12:51:43] - building SimpleValue for orders
[2022-11-29 12:51:43] - Building property orders
[2022-11-29 12:51:43] - Starting fillSimpleValue for user_id
[2022-11-29 12:51:43] - Starting fillSimpleValue for password
[2022-11-29 12:51:43] - Starting fillSimpleValue for username
[2022-11-29 12:51:43] - Starting fillSimpleValue for id
[2022-11-29 12:51:43] - Starting fillSimpleValue for address
[2022-11-29 12:51:43] - Starting fillSimpleValue for email
[2022-11-29 12:51:43] - Starting fillSimpleValue for firstName
[2022-11-29 12:51:43] - Starting fillSimpleValue for job
[2022-11-29 12:51:43] - Starting fillSimpleValue for lastName
[2022-11-29 12:51:43] - Starting fillSimpleValue for location
[2022-11-29 12:51:43] - Starting fillSimpleValue for orders
[2022-11-29 12:51:43] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 12:51:43] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 12:51:43] - Resolving reference to class: com.app.code.Customer
[2022-11-29 12:51:43] - Resolving reference to class: com.app.code.Customer
[2022-11-29 12:51:43] - Building session factory
[2022-11-29 12:51:43] - SessionFactory name : null
[2022-11-29 12:51:43] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 12:51:43] - Automatic session close at end of transaction: disabled
[2022-11-29 12:51:43] - Statistics: disabled
[2022-11-29 12:51:43] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 12:51:43] - Default entity-mode: pojo
[2022-11-29 12:51:43] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 12:51:43] - Allow initialization of lazy state outside session : disabled
[2022-11-29 12:51:43] - Using BatchFetchStyle : LEGACY
[2022-11-29 12:51:43] - Default batch fetch size: -1
[2022-11-29 12:51:43] - Maximum outer join fetch depth: 2
[2022-11-29 12:51:43] - Default null ordering: NONE
[2022-11-29 12:51:43] - Order SQL updates by primary key: disabled
[2022-11-29 12:51:43] - Order SQL inserts for batching: disabled
[2022-11-29 12:51:43] - multi-tenancy strategy : NONE
[2022-11-29 12:51:43] - JTA Track by Thread: enabled
[2022-11-29 12:51:43] - Query language substitutions: {}
[2022-11-29 12:51:43] - Named query checking : enabled
[2022-11-29 12:51:43] - Second-level cache: disabled
[2022-11-29 12:51:43] - Second-level query cache: disabled
[2022-11-29 12:51:43] - Second-level query cache factory: null
[2022-11-29 12:51:43] - Second-level cache region prefix: null
[2022-11-29 12:51:43] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 12:51:43] - Structured second-level cache entries: disabled
[2022-11-29 12:51:43] - Second-level cache direct-reference entries: disabled
[2022-11-29 12:51:43] - Automatic eviction of collection cache: disabled
[2022-11-29 12:51:43] - JDBC batch size: 15
[2022-11-29 12:51:43] - JDBC batch updates for versioned data: enabled
[2022-11-29 12:51:43] - Scrollable result sets: enabled
[2022-11-29 12:51:43] - Wrap result sets: disabled
[2022-11-29 12:51:43] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 12:51:43] - JDBC result set fetch size: null
[2022-11-29 12:51:43] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 12:51:43] - Generate SQL with comments: disabled
[2022-11-29 12:51:43] - JPA compliance - query : disabled
[2022-11-29 12:51:43] - JPA compliance - closed-handling : disabled
[2022-11-29 12:51:43] - JPA compliance - lists : disabled
[2022-11-29 12:51:43] - JPA compliance - transactions : disabled
[2022-11-29 12:51:43] - Session factory constructed with filter configurations : {}
[2022-11-29 12:51:43] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@58a59558, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 12:51:43] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 12:51:43] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 12:51:43] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 12:51:43] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 12:51:43] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 12:51:43] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 12:51:43] - Loaded expression factory via original TCCL
[2022-11-29 12:51:43] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 12:51:43] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 12:51:43] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 12:51:43] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 12:51:43] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 12:51:43] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 12:51:43] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 12:51:43] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 12:51:43] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 12:51:43] - Skipping JACC integration as it was not enabled
[2022-11-29 12:51:43] - Instantiated session factory
[2022-11-29 12:51:43] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47f7c356] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@30b6df3c]
[2022-11-29 12:51:43] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 12:51:43] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 12:51:43] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 12:51:43] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 12:51:44] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 12:51:44] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 12:51:44] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 12:51:44] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 12:51:44] - Static SQL for entity: com.app.code.Customer
[2022-11-29 12:51:44] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 12:51:44] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 12:51:44] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 12:51:44] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 12:51:44] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 12:51:44] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 12:51:44] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23c13577]
[2022-11-29 12:51:44] - Visiting attribute path : address
[2022-11-29 12:51:44] - Visiting attribute path : email
[2022-11-29 12:51:44] - Visiting attribute path : firstName
[2022-11-29 12:51:44] - Visiting attribute path : job
[2022-11-29 12:51:44] - Visiting attribute path : lastName
[2022-11-29 12:51:44] - Visiting attribute path : location
[2022-11-29 12:51:44] - Visiting attribute path : orders
[2022-11-29 12:51:44] - Building LoadPlan...
[2022-11-29 12:51:44] - processing queryspace <gen:0>
[2022-11-29 12:51:44] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 12:51:44] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:51:44] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13a7cd0]
[2022-11-29 12:51:44] - Visiting attribute path : address
[2022-11-29 12:51:44] - Visiting attribute path : email
[2022-11-29 12:51:44] - Visiting attribute path : firstName
[2022-11-29 12:51:44] - Visiting attribute path : job
[2022-11-29 12:51:44] - Visiting attribute path : lastName
[2022-11-29 12:51:44] - Visiting attribute path : location
[2022-11-29 12:51:44] - Visiting attribute path : orders
[2022-11-29 12:51:44] - Building LoadPlan...
[2022-11-29 12:51:44] - processing queryspace <gen:0>
[2022-11-29 12:51:44] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 12:51:44] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:51:44] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:51:44] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:51:44] - Static SQL for entity: com.app.code.User
[2022-11-29 12:51:44] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 12:51:44] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 12:51:44] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 12:51:44] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 12:51:44] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 12:51:44] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 12:51:44] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bdd816]
[2022-11-29 12:51:44] - Visiting attribute path : customer
[2022-11-29 12:51:44] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3845b1bb]
[2022-11-29 12:51:44] - Visiting attribute path : customer.address
[2022-11-29 12:51:44] - Visiting attribute path : customer.email
[2022-11-29 12:51:44] - Visiting attribute path : customer.firstName
[2022-11-29 12:51:44] - Visiting attribute path : customer.job
[2022-11-29 12:51:44] - Visiting attribute path : customer.lastName
[2022-11-29 12:51:44] - Visiting attribute path : customer.location
[2022-11-29 12:51:44] - Visiting attribute path : customer.orders
[2022-11-29 12:51:44] - Visiting attribute path : password
[2022-11-29 12:51:44] - Visiting attribute path : username
[2022-11-29 12:51:44] - Building LoadPlan...
[2022-11-29 12:51:44] - processing queryspace <gen:0>
[2022-11-29 12:51:44] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 12:51:44] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:51:44] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ced145]
[2022-11-29 12:51:44] - Visiting attribute path : customer
[2022-11-29 12:51:44] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@670f9406]
[2022-11-29 12:51:44] - Visiting attribute path : customer.address
[2022-11-29 12:51:44] - Visiting attribute path : customer.email
[2022-11-29 12:51:44] - Visiting attribute path : customer.firstName
[2022-11-29 12:51:44] - Visiting attribute path : customer.job
[2022-11-29 12:51:44] - Visiting attribute path : customer.lastName
[2022-11-29 12:51:44] - Visiting attribute path : customer.location
[2022-11-29 12:51:44] - Visiting attribute path : customer.orders
[2022-11-29 12:51:44] - Visiting attribute path : password
[2022-11-29 12:51:44] - Visiting attribute path : username
[2022-11-29 12:51:44] - Building LoadPlan...
[2022-11-29 12:51:44] - processing queryspace <gen:0>
[2022-11-29 12:51:44] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 12:51:44] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:51:44] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:51:44] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:51:44] - No actions specified; doing nothing
[2022-11-29 12:51:44] - Checking 0 named HQL queries
[2022-11-29 12:51:44] - Checking 0 named SQL queries
[2022-11-29 12:51:44] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36c517f9
[2022-11-29 12:51:44] - Registering SessionFactory: 4739fd9e-fdce-40f2-a1e8-5f293d42f22b (<unnamed>)
[2022-11-29 12:51:44] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 12:51:44] - A sessionFactory was successfully created.
[2022-11-29 12:51:44] - Statistics initialized [enabled=false]
[2022-11-29 12:51:44] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 12:51:44] - Session  was successfully created.
[2022-11-29 12:51:44] - begin
[2022-11-29 12:51:44] - Transaction for session with tenant id null was successfully started
[2022-11-29 12:51:44] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5619529c
[2022-11-29 12:51:44] - parse() - HQL: FROM com.app.code.User WHERE username = ?0 AND password = ?1
[2022-11-29 12:51:44] - throwQueryException() : no errors
[2022-11-29 12:51:44] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '1'

[2022-11-29 12:51:44] - select << begin [level=1, statement=select]
[2022-11-29 12:51:44] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 12:51:44] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 12:51:44] - getDataType() : username -> org.hibernate.type.StringType@b077ab0
[2022-11-29 12:51:44] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 12:51:44] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 12:51:44] - getDataType() : password -> org.hibernate.type.StringType@b077ab0
[2022-11-29 12:51:44] - Resolved : {synthetic-alias}.password -> user0_.password
[2022-11-29 12:51:44] - select : finishing up [level=1, statement=select]
[2022-11-29 12:51:44] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( AND ( = ( user0_.username {synthetic-alias} username ) ? ) ( = ( user0_.password {synthetic-alias} password ) ? ) ) ) )
[2022-11-29 12:51:44] - Derived SELECT clause created.
[2022-11-29 12:51:44] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | path: {synthetic-alias}.username
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  |  | originalText: {synthetic-alias}
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: username
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.app.code.User)
             | path: {synthetic-alias}.password
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.app.code.User)
             |  | originalText: {synthetic-alias}
             |  \-IdentNode
             |    persister: null
             |    originalText: password
             \-ParameterNode

[2022-11-29 12:51:44] - Using FROM fragment [user_detail user0_]
[2022-11-29 12:51:44] - select >> end [level=1, statement=select]
[2022-11-29 12:51:44] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@b077ab0}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=user0_,className=com.app.code.User,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@b077ab0}

[2022-11-29 12:51:44] - throwQueryException() : no errors
[2022-11-29 12:51:45] - HQL: FROM com.app.code.User WHERE username = ?0 AND password = ?1
[2022-11-29 12:51:45] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=? and user0_.password=?
[2022-11-29 12:51:45] - throwQueryException() : no errors
[2022-11-29 12:51:45] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=? and user0_.password=?
[2022-11-29 12:51:45] - Result set row: 0
[2022-11-29 12:51:45] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 12:51:45] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 12:51:45] - Processing attribute `customer` : value = 50
[2022-11-29 12:51:45] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 12:51:45] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:51:45] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 12:51:45] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 12:51:45] - Processing attribute `address` : value = Asachi 2A
[2022-11-29 12:51:45] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 12:51:45] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 12:51:45] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 12:51:45] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 12:51:45] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 12:51:45] - Processing attribute `job` : value = NONE
[2022-11-29 12:51:45] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 12:51:45] - Processing attribute `lastName` : value = eduard
[2022-11-29 12:51:45] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 12:51:45] - Processing attribute `location` : value = Chisinau
[2022-11-29 12:51:45] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 12:51:45] - Processing attribute `orders` : value = 3
[2022-11-29 12:51:45] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 12:51:45] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 12:51:45] - Done entity load : com.app.code.Customer#50
[2022-11-29 12:51:45] - Processing attribute `password` : value = test123
[2022-11-29 12:51:45] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 12:51:45] - Processing attribute `username` : value = kerbecs
[2022-11-29 12:51:45] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 12:51:45] - Done materializing entity [com.app.code.User#28]
[2022-11-29 12:51:45] - committing
[2022-11-29 12:51:45] - Processing flush-time cascades
[2022-11-29 12:51:45] - Dirty checking collections
[2022-11-29 12:51:45] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 12:51:45] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 12:51:45] - Listing entities:
[2022-11-29 12:51:45] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=3, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 12:51:45] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 12:51:45] - Initiating JDBC connection release from afterTransaction
[2022-11-29 12:51:45] - Clearing local Synchronizations
[2022-11-29 12:51:45] - Initiating JDBC connection release from afterTransaction
[2022-11-29 12:51:45] - Session with tenant id null was successfully committed
[2022-11-29 12:51:45] - Transaction for session with tenant id null was successfully closed
[2022-11-29 12:51:45] - User with id 0 was successfully logged.
[2022-11-29 12:52:12] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 12:53:00] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 12:53:00] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 12:53:00] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 12:53:00] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 12:53:00] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 12:53:00] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 12:53:00] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 12:53:00] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 12:53:00] - Building session factory using provided StandardServiceRegistry
[2022-11-29 12:53:00] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 12:53:00] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 12:53:00] - Adding type registration boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 12:53:00] - Adding type registration boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 12:53:00] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 12:53:00] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3eca9300
[2022-11-29 12:53:00] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1be88e3f
[2022-11-29 12:53:00] - Adding type registration yes_no -> org.hibernate.type.YesNoType@30a1690
[2022-11-29 12:53:00] - Adding type registration byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 12:53:00] - Adding type registration byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 12:53:00] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 12:53:00] - Adding type registration character -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 12:53:00] - Adding type registration char -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 12:53:00] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 12:53:00] - Adding type registration short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 12:53:00] - Adding type registration short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 12:53:00] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 12:53:00] - Adding type registration integer -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 12:53:00] - Adding type registration int -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 12:53:00] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 12:53:00] - Adding type registration long -> org.hibernate.type.LongType@789819ba
[2022-11-29 12:53:00] - Adding type registration long -> org.hibernate.type.LongType@789819ba
[2022-11-29 12:53:00] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@789819ba
[2022-11-29 12:53:00] - Adding type registration float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 12:53:00] - Adding type registration float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 12:53:00] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 12:53:00] - Adding type registration double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 12:53:00] - Adding type registration double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 12:53:00] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 12:53:00] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2148f6b8
[2022-11-29 12:53:00] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2148f6b8
[2022-11-29 12:53:00] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5408cd90
[2022-11-29 12:53:00] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5408cd90
[2022-11-29 12:53:00] - Adding type registration string -> org.hibernate.type.StringType@b077ab0
[2022-11-29 12:53:00] - Adding type registration java.lang.String -> org.hibernate.type.StringType@b077ab0
[2022-11-29 12:53:00] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@306ba15a
[2022-11-29 12:53:00] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@765565aa
[2022-11-29 12:53:00] - Adding type registration url -> org.hibernate.type.UrlType@4dd4472c
[2022-11-29 12:53:00] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dd4472c
[2022-11-29 12:53:00] - Adding type registration Duration -> org.hibernate.type.DurationType@7b12d977
[2022-11-29 12:53:00] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b12d977
[2022-11-29 12:53:00] - Adding type registration Instant -> org.hibernate.type.InstantType@51b6a435
[2022-11-29 12:53:00] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51b6a435
[2022-11-29 12:53:00] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@236c5b7
[2022-11-29 12:53:00] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@236c5b7
[2022-11-29 12:53:00] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@33717b2
[2022-11-29 12:53:00] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@33717b2
[2022-11-29 12:53:00] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4760cc47
[2022-11-29 12:53:00] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4760cc47
[2022-11-29 12:53:00] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35745fff
[2022-11-29 12:53:00] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35745fff
[2022-11-29 12:53:00] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1767dcd6
[2022-11-29 12:53:00] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1767dcd6
[2022-11-29 12:53:00] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5467a32c
[2022-11-29 12:53:00] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5467a32c
[2022-11-29 12:53:00] - Adding type registration date -> org.hibernate.type.DateType@7f99f269
[2022-11-29 12:53:00] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f99f269
[2022-11-29 12:53:00] - Adding type registration time -> org.hibernate.type.TimeType@29205f6
[2022-11-29 12:53:00] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29205f6
[2022-11-29 12:53:00] - Adding type registration timestamp -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 12:53:00] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 12:53:00] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 12:53:00] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a953b3
[2022-11-29 12:53:00] - Adding type registration calendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 12:53:00] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 12:53:00] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 12:53:00] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78c5a23a
[2022-11-29 12:53:00] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@21b45c41
[2022-11-29 12:53:00] - Adding type registration locale -> org.hibernate.type.LocaleType@6f913455
[2022-11-29 12:53:00] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6f913455
[2022-11-29 12:53:00] - Adding type registration currency -> org.hibernate.type.CurrencyType@7556c700
[2022-11-29 12:53:00] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7556c700
[2022-11-29 12:53:00] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44d787c3
[2022-11-29 12:53:00] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44d787c3
[2022-11-29 12:53:00] - Adding type registration class -> org.hibernate.type.ClassType@2f4e0036
[2022-11-29 12:53:00] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f4e0036
[2022-11-29 12:53:00] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c5214a0
[2022-11-29 12:53:00] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c5214a0
[2022-11-29 12:53:00] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@521c2db2
[2022-11-29 12:53:00] - Adding type registration binary -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 12:53:00] - Adding type registration byte[] -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 12:53:00] - Adding type registration [B -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 12:53:00] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 12:53:00] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 12:53:00] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 12:53:00] - Adding type registration row_version -> org.hibernate.type.RowVersionType@443d6a86
[2022-11-29 12:53:00] - Adding type registration image -> org.hibernate.type.ImageType@67f310c3
[2022-11-29 12:53:00] - Adding type registration characters -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 12:53:00] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 12:53:00] - Adding type registration [C -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 12:53:00] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 12:53:00] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 12:53:00] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 12:53:00] - Adding type registration text -> org.hibernate.type.TextType@3e77ca5c
[2022-11-29 12:53:00] - Adding type registration ntext -> org.hibernate.type.NTextType@41be4068
[2022-11-29 12:53:00] - Adding type registration blob -> org.hibernate.type.BlobType@138f3105
[2022-11-29 12:53:00] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@138f3105
[2022-11-29 12:53:00] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12c1cd07
[2022-11-29 12:53:00] - Adding type registration clob -> org.hibernate.type.ClobType@677aa299
[2022-11-29 12:53:00] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@677aa299
[2022-11-29 12:53:00] - Adding type registration nclob -> org.hibernate.type.NClobType@2289c197
[2022-11-29 12:53:00] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2289c197
[2022-11-29 12:53:00] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58f1161
[2022-11-29 12:53:00] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5c041df4
[2022-11-29 12:53:00] - Adding type registration serializable -> org.hibernate.type.SerializableType@68682650
[2022-11-29 12:53:00] - Adding type registration object -> org.hibernate.type.ObjectType@6891e8f
[2022-11-29 12:53:00] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6891e8f
[2022-11-29 12:53:00] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3315869b
[2022-11-29 12:53:00] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@67e510c4
[2022-11-29 12:53:00] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5785dcaf
[2022-11-29 12:53:00] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5f669c68
[2022-11-29 12:53:00] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40d8f841
[2022-11-29 12:53:00] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ff4a3ae
[2022-11-29 12:53:00] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@766d665b
[2022-11-29 12:53:00] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d032122
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 12:53:00] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 12:53:00] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 12:53:00] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 12:53:00] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 12:53:00] - HHH10001003: Autocommit mode: false
[2022-11-29 12:53:00] - Initializing Connection pool with 1 Connections
[2022-11-29 12:53:00] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 12:53:00] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 12:53:00] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 12:53:00] - JDBC version : 4.2
[2022-11-29 12:53:00] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 12:53:00] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 12:53:00] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 12:53:00] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 12:53:00] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ce2fe4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46a77d09]
[2022-11-29 12:53:00] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 12:53:00] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 12:53:00] - Import with entity name Customer
[2022-11-29 12:53:00] - Bind entity com.app.code.Customer on table customer
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 12:53:00] - building SimpleValue for id
[2022-11-29 12:53:00] - Building property id
[2022-11-29 12:53:00] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 12:53:00] - building SimpleValue for address
[2022-11-29 12:53:00] - Building property address
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 12:53:00] - building SimpleValue for email
[2022-11-29 12:53:00] - Building property email
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 12:53:00] - building SimpleValue for firstName
[2022-11-29 12:53:00] - Building property firstName
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 12:53:00] - building SimpleValue for job
[2022-11-29 12:53:00] - Building property job
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 12:53:00] - building SimpleValue for lastName
[2022-11-29 12:53:00] - Building property lastName
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 12:53:00] - building SimpleValue for location
[2022-11-29 12:53:00] - Building property location
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 12:53:00] - building SimpleValue for orders
[2022-11-29 12:53:00] - Building property orders
[2022-11-29 12:53:00] - Binding entity from annotated class: com.app.code.User
[2022-11-29 12:53:00] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 12:53:00] - Import with entity name User
[2022-11-29 12:53:00] - Bind entity com.app.code.User on table user_detail
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 12:53:00] - building SimpleValue for user_id
[2022-11-29 12:53:00] - Building property user_id
[2022-11-29 12:53:00] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 12:53:00] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - Building property customer
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 12:53:00] - building SimpleValue for password
[2022-11-29 12:53:00] - Building property password
[2022-11-29 12:53:00] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:00] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 12:53:00] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 12:53:00] - building SimpleValue for username
[2022-11-29 12:53:00] - Building property username
[2022-11-29 12:53:00] - Starting fillSimpleValue for id
[2022-11-29 12:53:00] - Starting fillSimpleValue for address
[2022-11-29 12:53:00] - Starting fillSimpleValue for email
[2022-11-29 12:53:00] - Starting fillSimpleValue for firstName
[2022-11-29 12:53:00] - Starting fillSimpleValue for job
[2022-11-29 12:53:00] - Starting fillSimpleValue for lastName
[2022-11-29 12:53:00] - Starting fillSimpleValue for location
[2022-11-29 12:53:00] - Starting fillSimpleValue for orders
[2022-11-29 12:53:00] - Starting fillSimpleValue for user_id
[2022-11-29 12:53:00] - Starting fillSimpleValue for password
[2022-11-29 12:53:00] - Starting fillSimpleValue for username
[2022-11-29 12:53:00] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 12:53:00] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 12:53:00] - Resolving reference to class: com.app.code.Customer
[2022-11-29 12:53:00] - Resolving reference to class: com.app.code.Customer
[2022-11-29 12:53:00] - Building session factory
[2022-11-29 12:53:00] - SessionFactory name : null
[2022-11-29 12:53:00] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 12:53:00] - Automatic session close at end of transaction: disabled
[2022-11-29 12:53:00] - Statistics: disabled
[2022-11-29 12:53:00] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 12:53:00] - Default entity-mode: pojo
[2022-11-29 12:53:00] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 12:53:00] - Allow initialization of lazy state outside session : disabled
[2022-11-29 12:53:00] - Using BatchFetchStyle : LEGACY
[2022-11-29 12:53:00] - Default batch fetch size: -1
[2022-11-29 12:53:00] - Maximum outer join fetch depth: 2
[2022-11-29 12:53:00] - Default null ordering: NONE
[2022-11-29 12:53:00] - Order SQL updates by primary key: disabled
[2022-11-29 12:53:00] - Order SQL inserts for batching: disabled
[2022-11-29 12:53:00] - multi-tenancy strategy : NONE
[2022-11-29 12:53:00] - JTA Track by Thread: enabled
[2022-11-29 12:53:00] - Query language substitutions: {}
[2022-11-29 12:53:00] - Named query checking : enabled
[2022-11-29 12:53:00] - Second-level cache: disabled
[2022-11-29 12:53:00] - Second-level query cache: disabled
[2022-11-29 12:53:00] - Second-level query cache factory: null
[2022-11-29 12:53:00] - Second-level cache region prefix: null
[2022-11-29 12:53:00] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 12:53:00] - Structured second-level cache entries: disabled
[2022-11-29 12:53:00] - Second-level cache direct-reference entries: disabled
[2022-11-29 12:53:00] - Automatic eviction of collection cache: disabled
[2022-11-29 12:53:00] - JDBC batch size: 15
[2022-11-29 12:53:00] - JDBC batch updates for versioned data: enabled
[2022-11-29 12:53:00] - Scrollable result sets: enabled
[2022-11-29 12:53:00] - Wrap result sets: disabled
[2022-11-29 12:53:00] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 12:53:00] - JDBC result set fetch size: null
[2022-11-29 12:53:00] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 12:53:00] - Generate SQL with comments: disabled
[2022-11-29 12:53:00] - JPA compliance - query : disabled
[2022-11-29 12:53:00] - JPA compliance - closed-handling : disabled
[2022-11-29 12:53:00] - JPA compliance - lists : disabled
[2022-11-29 12:53:00] - JPA compliance - transactions : disabled
[2022-11-29 12:53:00] - Session factory constructed with filter configurations : {}
[2022-11-29 12:53:00] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@60495b4, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 12:53:00] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 12:53:00] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 12:53:00] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 12:53:00] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 12:53:00] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 12:53:00] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 12:53:00] - Loaded expression factory via original TCCL
[2022-11-29 12:53:00] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 12:53:00] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 12:53:00] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 12:53:00] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 12:53:00] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 12:53:00] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 12:53:00] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 12:53:00] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 12:53:00] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 12:53:00] - Skipping JACC integration as it was not enabled
[2022-11-29 12:53:00] - Instantiated session factory
[2022-11-29 12:53:00] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ce2fe4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6d9a8263]
[2022-11-29 12:53:00] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 12:53:00] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 12:53:00] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 12:53:00] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 12:53:00] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 12:53:00] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 12:53:00] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 12:53:00] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 12:53:00] - Static SQL for entity: com.app.code.Customer
[2022-11-29 12:53:00] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 12:53:00] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 12:53:00] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 12:53:00] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 12:53:00] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 12:53:00] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 12:53:00] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fb198f]
[2022-11-29 12:53:00] - Visiting attribute path : address
[2022-11-29 12:53:00] - Visiting attribute path : email
[2022-11-29 12:53:00] - Visiting attribute path : firstName
[2022-11-29 12:53:00] - Visiting attribute path : job
[2022-11-29 12:53:00] - Visiting attribute path : lastName
[2022-11-29 12:53:00] - Visiting attribute path : location
[2022-11-29 12:53:00] - Visiting attribute path : orders
[2022-11-29 12:53:00] - Building LoadPlan...
[2022-11-29 12:53:00] - processing queryspace <gen:0>
[2022-11-29 12:53:00] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 12:53:00] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:00] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@783bc7b6]
[2022-11-29 12:53:00] - Visiting attribute path : address
[2022-11-29 12:53:00] - Visiting attribute path : email
[2022-11-29 12:53:00] - Visiting attribute path : firstName
[2022-11-29 12:53:00] - Visiting attribute path : job
[2022-11-29 12:53:00] - Visiting attribute path : lastName
[2022-11-29 12:53:00] - Visiting attribute path : location
[2022-11-29 12:53:00] - Visiting attribute path : orders
[2022-11-29 12:53:00] - Building LoadPlan...
[2022-11-29 12:53:00] - processing queryspace <gen:0>
[2022-11-29 12:53:00] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 12:53:00] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:00] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:00] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:00] - Static SQL for entity: com.app.code.User
[2022-11-29 12:53:00] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 12:53:00] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 12:53:00] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 12:53:00] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 12:53:00] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 12:53:00] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 12:53:00] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5846003e]
[2022-11-29 12:53:00] - Visiting attribute path : customer
[2022-11-29 12:53:00] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b5792fe]
[2022-11-29 12:53:00] - Visiting attribute path : customer.address
[2022-11-29 12:53:00] - Visiting attribute path : customer.email
[2022-11-29 12:53:00] - Visiting attribute path : customer.firstName
[2022-11-29 12:53:00] - Visiting attribute path : customer.job
[2022-11-29 12:53:00] - Visiting attribute path : customer.lastName
[2022-11-29 12:53:00] - Visiting attribute path : customer.location
[2022-11-29 12:53:00] - Visiting attribute path : customer.orders
[2022-11-29 12:53:00] - Visiting attribute path : password
[2022-11-29 12:53:00] - Visiting attribute path : username
[2022-11-29 12:53:00] - Building LoadPlan...
[2022-11-29 12:53:00] - processing queryspace <gen:0>
[2022-11-29 12:53:00] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 12:53:00] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:53:00] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b58d9a]
[2022-11-29 12:53:00] - Visiting attribute path : customer
[2022-11-29 12:53:00] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5453502b]
[2022-11-29 12:53:00] - Visiting attribute path : customer.address
[2022-11-29 12:53:00] - Visiting attribute path : customer.email
[2022-11-29 12:53:00] - Visiting attribute path : customer.firstName
[2022-11-29 12:53:00] - Visiting attribute path : customer.job
[2022-11-29 12:53:00] - Visiting attribute path : customer.lastName
[2022-11-29 12:53:00] - Visiting attribute path : customer.location
[2022-11-29 12:53:00] - Visiting attribute path : customer.orders
[2022-11-29 12:53:00] - Visiting attribute path : password
[2022-11-29 12:53:00] - Visiting attribute path : username
[2022-11-29 12:53:00] - Building LoadPlan...
[2022-11-29 12:53:00] - processing queryspace <gen:0>
[2022-11-29 12:53:00] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 12:53:00] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:53:00] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:53:00] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:53:00] - No actions specified; doing nothing
[2022-11-29 12:53:00] - Checking 0 named HQL queries
[2022-11-29 12:53:00] - Checking 0 named SQL queries
[2022-11-29 12:53:00] - Registering SessionFactory: c4500348-8dfe-45d7-ba7c-d627cde46e7a (<unnamed>)
[2022-11-29 12:53:00] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 12:53:00] - A sessionFactory was successfully created.
[2022-11-29 12:53:00] - Statistics initialized [enabled=false]
[2022-11-29 12:53:00] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 12:53:00] - Session with tenant id null was successfully created.
[2022-11-29 12:53:00] - begin
[2022-11-29 12:53:00] - Transaction for session with tenant id null was successfully started
[2022-11-29 12:53:00] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5619529c
[2022-11-29 12:53:00] - parse() - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 12:53:00] - throwQueryException() : no errors
[2022-11-29 12:53:00] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 12:53:00] - select << begin [level=1, statement=select]
[2022-11-29 12:53:00] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 12:53:00] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 12:53:00] - getDataType() : username -> org.hibernate.type.StringType@b077ab0
[2022-11-29 12:53:00] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 12:53:00] - select : finishing up [level=1, statement=select]
[2022-11-29 12:53:00] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
[2022-11-29 12:53:00] - Derived SELECT clause created.
[2022-11-29 12:53:00] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.User)
          | path: {synthetic-alias}.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

[2022-11-29 12:53:00] - Using FROM fragment [user_detail user0_]
[2022-11-29 12:53:00] - select >> end [level=1, statement=select]
[2022-11-29 12:53:00] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@b077ab0}

[2022-11-29 12:53:00] - throwQueryException() : no errors
[2022-11-29 12:53:00] - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 12:53:00] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 12:53:00] - throwQueryException() : no errors
[2022-11-29 12:53:00] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 12:53:00] - Result set row: 0
[2022-11-29 12:53:00] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 12:53:00] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 12:53:00] - Processing attribute `customer` : value = 50
[2022-11-29 12:53:00] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:00] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:00] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 12:53:00] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 12:53:00] - Processing attribute `address` : value = Asachi 2A
[2022-11-29 12:53:00] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:00] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 12:53:00] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:00] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 12:53:00] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:00] - Processing attribute `job` : value = NONE
[2022-11-29 12:53:00] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:00] - Processing attribute `lastName` : value = eduard
[2022-11-29 12:53:00] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:00] - Processing attribute `location` : value = Chisinau
[2022-11-29 12:53:00] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:00] - Processing attribute `orders` : value = 3
[2022-11-29 12:53:00] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:00] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 12:53:00] - Done entity load : com.app.code.Customer#50
[2022-11-29 12:53:00] - Processing attribute `password` : value = test123
[2022-11-29 12:53:00] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:00] - Processing attribute `username` : value = kerbecs
[2022-11-29 12:53:00] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:00] - Done materializing entity [com.app.code.User#28]
[2022-11-29 12:53:00] - parse() - HQL: FROM com.app.code.Customer WHERE id=?0
[2022-11-29 12:53:00] - throwQueryException() : no errors
[2022-11-29 12:53:00] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'Customer'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 12:53:00] - select << begin [level=1, statement=select]
[2022-11-29 12:53:00] - FromClause{level=1} : com.app.code.Customer (<no alias>) -> customer0_
[2022-11-29 12:53:00] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 12:53:00] - getDataType() : id -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 12:53:00] - Resolved : {synthetic-alias}.id -> customer0_.customer_id
[2022-11-29 12:53:00] - select : finishing up [level=1, statement=select]
[2022-11-29 12:53:00] - processQuery() :  ( SELECT ( FromClause{level=1} customer customer0_ ) ( WHERE ( = ( customer0_.customer_id {synthetic-alias} id ) ? ) ) )
[2022-11-29 12:53:00] - Derived SELECT clause created.
[2022-11-29 12:53:00] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Customer): [customer]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.Customer)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.Customer)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

[2022-11-29 12:53:00] - Using FROM fragment [customer customer0_]
[2022-11-29 12:53:00] - select >> end [level=1, statement=select]
[2022-11-29 12:53:00] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_.customer_id as customer1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.customer_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.IntegerType@5707b38}

[2022-11-29 12:53:00] - throwQueryException() : no errors
[2022-11-29 12:53:00] - HQL: FROM com.app.code.Customer WHERE id=?0
[2022-11-29 12:53:00] - SQL: select customer0_.customer_id as customer1_0_, customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:00] - throwQueryException() : no errors
[2022-11-29 12:53:00] - Processing flush-time cascades
[2022-11-29 12:53:00] - Dirty checking collections
[2022-11-29 12:53:00] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 12:53:00] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 12:53:00] - Listing entities:
[2022-11-29 12:53:00] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=3, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 12:53:00] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 12:53:00] - select customer0_.customer_id as customer1_0_, customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:00] - Result set row: 0
[2022-11-29 12:53:00] - Result row: EntityKey[com.app.code.Customer#50]
[2022-11-29 12:53:00] - committing
[2022-11-29 12:53:00] - Processing flush-time cascades
[2022-11-29 12:53:00] - Dirty checking collections
[2022-11-29 12:53:00] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 12:53:00] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 12:53:00] - Listing entities:
[2022-11-29 12:53:00] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=3, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 12:53:00] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 12:53:00] - Initiating JDBC connection release from afterTransaction
[2022-11-29 12:53:00] - Clearing local Synchronizations
[2022-11-29 12:53:00] - Initiating JDBC connection release from afterTransaction
[2022-11-29 12:53:00] - Session with tenant id null was successfully committed
[2022-11-29 12:53:00] - Transaction for session with tenant id null was successfully closed
[2022-11-29 12:53:04] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 12:53:04] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 12:53:04] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 12:53:04] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 12:53:04] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 12:53:04] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 12:53:04] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 12:53:04] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 12:53:04] - Building session factory using provided StandardServiceRegistry
[2022-11-29 12:53:04] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 12:53:04] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 12:53:04] - Adding type registration boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 12:53:04] - Adding type registration boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 12:53:04] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 12:53:04] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3eca9300
[2022-11-29 12:53:04] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1be88e3f
[2022-11-29 12:53:04] - Adding type registration yes_no -> org.hibernate.type.YesNoType@30a1690
[2022-11-29 12:53:04] - Adding type registration byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 12:53:04] - Adding type registration byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 12:53:04] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 12:53:04] - Adding type registration character -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 12:53:04] - Adding type registration char -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 12:53:04] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 12:53:04] - Adding type registration short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 12:53:04] - Adding type registration short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 12:53:04] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 12:53:04] - Adding type registration integer -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 12:53:04] - Adding type registration int -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 12:53:04] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 12:53:04] - Adding type registration long -> org.hibernate.type.LongType@789819ba
[2022-11-29 12:53:04] - Adding type registration long -> org.hibernate.type.LongType@789819ba
[2022-11-29 12:53:04] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@789819ba
[2022-11-29 12:53:04] - Adding type registration float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 12:53:04] - Adding type registration float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 12:53:04] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 12:53:04] - Adding type registration double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 12:53:04] - Adding type registration double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 12:53:04] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 12:53:04] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2148f6b8
[2022-11-29 12:53:04] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2148f6b8
[2022-11-29 12:53:04] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5408cd90
[2022-11-29 12:53:04] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5408cd90
[2022-11-29 12:53:04] - Adding type registration string -> org.hibernate.type.StringType@b077ab0
[2022-11-29 12:53:04] - Adding type registration java.lang.String -> org.hibernate.type.StringType@b077ab0
[2022-11-29 12:53:04] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@306ba15a
[2022-11-29 12:53:04] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@765565aa
[2022-11-29 12:53:04] - Adding type registration url -> org.hibernate.type.UrlType@4dd4472c
[2022-11-29 12:53:04] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dd4472c
[2022-11-29 12:53:04] - Adding type registration Duration -> org.hibernate.type.DurationType@7b12d977
[2022-11-29 12:53:04] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b12d977
[2022-11-29 12:53:04] - Adding type registration Instant -> org.hibernate.type.InstantType@51b6a435
[2022-11-29 12:53:04] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51b6a435
[2022-11-29 12:53:04] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@236c5b7
[2022-11-29 12:53:04] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@236c5b7
[2022-11-29 12:53:04] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@33717b2
[2022-11-29 12:53:04] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@33717b2
[2022-11-29 12:53:04] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4760cc47
[2022-11-29 12:53:04] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4760cc47
[2022-11-29 12:53:04] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35745fff
[2022-11-29 12:53:04] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35745fff
[2022-11-29 12:53:04] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1767dcd6
[2022-11-29 12:53:04] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1767dcd6
[2022-11-29 12:53:04] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5467a32c
[2022-11-29 12:53:04] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5467a32c
[2022-11-29 12:53:04] - Adding type registration date -> org.hibernate.type.DateType@7f99f269
[2022-11-29 12:53:04] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f99f269
[2022-11-29 12:53:04] - Adding type registration time -> org.hibernate.type.TimeType@29205f6
[2022-11-29 12:53:04] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29205f6
[2022-11-29 12:53:04] - Adding type registration timestamp -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 12:53:04] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 12:53:04] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 12:53:04] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a953b3
[2022-11-29 12:53:04] - Adding type registration calendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 12:53:04] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 12:53:04] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 12:53:04] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78c5a23a
[2022-11-29 12:53:04] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@21b45c41
[2022-11-29 12:53:04] - Adding type registration locale -> org.hibernate.type.LocaleType@6f913455
[2022-11-29 12:53:04] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6f913455
[2022-11-29 12:53:04] - Adding type registration currency -> org.hibernate.type.CurrencyType@7556c700
[2022-11-29 12:53:04] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7556c700
[2022-11-29 12:53:04] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44d787c3
[2022-11-29 12:53:04] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44d787c3
[2022-11-29 12:53:04] - Adding type registration class -> org.hibernate.type.ClassType@2f4e0036
[2022-11-29 12:53:04] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f4e0036
[2022-11-29 12:53:04] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c5214a0
[2022-11-29 12:53:04] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c5214a0
[2022-11-29 12:53:04] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@521c2db2
[2022-11-29 12:53:04] - Adding type registration binary -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 12:53:04] - Adding type registration byte[] -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 12:53:04] - Adding type registration [B -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 12:53:04] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 12:53:04] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 12:53:04] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 12:53:04] - Adding type registration row_version -> org.hibernate.type.RowVersionType@443d6a86
[2022-11-29 12:53:04] - Adding type registration image -> org.hibernate.type.ImageType@67f310c3
[2022-11-29 12:53:04] - Adding type registration characters -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 12:53:04] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 12:53:04] - Adding type registration [C -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 12:53:04] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 12:53:04] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 12:53:04] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 12:53:04] - Adding type registration text -> org.hibernate.type.TextType@3e77ca5c
[2022-11-29 12:53:04] - Adding type registration ntext -> org.hibernate.type.NTextType@41be4068
[2022-11-29 12:53:04] - Adding type registration blob -> org.hibernate.type.BlobType@138f3105
[2022-11-29 12:53:04] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@138f3105
[2022-11-29 12:53:04] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12c1cd07
[2022-11-29 12:53:04] - Adding type registration clob -> org.hibernate.type.ClobType@677aa299
[2022-11-29 12:53:04] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@677aa299
[2022-11-29 12:53:04] - Adding type registration nclob -> org.hibernate.type.NClobType@2289c197
[2022-11-29 12:53:04] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2289c197
[2022-11-29 12:53:04] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58f1161
[2022-11-29 12:53:04] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5c041df4
[2022-11-29 12:53:04] - Adding type registration serializable -> org.hibernate.type.SerializableType@68682650
[2022-11-29 12:53:04] - Adding type registration object -> org.hibernate.type.ObjectType@6891e8f
[2022-11-29 12:53:04] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6891e8f
[2022-11-29 12:53:04] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@23a7ed21
[2022-11-29 12:53:04] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@44527622
[2022-11-29 12:53:04] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@744426ff
[2022-11-29 12:53:04] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@191ae1fe
[2022-11-29 12:53:04] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@548c919
[2022-11-29 12:53:04] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@527c5cf4
[2022-11-29 12:53:04] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@75afb9a
[2022-11-29 12:53:04] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4981ff9e
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 12:53:04] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 12:53:04] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 12:53:04] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 12:53:04] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 12:53:04] - HHH10001003: Autocommit mode: false
[2022-11-29 12:53:04] - Initializing Connection pool with 1 Connections
[2022-11-29 12:53:04] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 12:53:04] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 12:53:04] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 12:53:04] - JDBC version : 4.2
[2022-11-29 12:53:04] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 12:53:04] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 12:53:04] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 12:53:04] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 12:53:04] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e4aa165] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@33b7bd48]
[2022-11-29 12:53:04] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 12:53:04] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 12:53:04] - Import with entity name Customer
[2022-11-29 12:53:04] - Bind entity com.app.code.Customer on table customer
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 12:53:04] - building SimpleValue for id
[2022-11-29 12:53:04] - Building property id
[2022-11-29 12:53:04] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 12:53:04] - building SimpleValue for address
[2022-11-29 12:53:04] - Building property address
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 12:53:04] - building SimpleValue for email
[2022-11-29 12:53:04] - Building property email
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 12:53:04] - building SimpleValue for firstName
[2022-11-29 12:53:04] - Building property firstName
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 12:53:04] - building SimpleValue for job
[2022-11-29 12:53:04] - Building property job
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 12:53:04] - building SimpleValue for lastName
[2022-11-29 12:53:04] - Building property lastName
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 12:53:04] - building SimpleValue for location
[2022-11-29 12:53:04] - Building property location
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 12:53:04] - building SimpleValue for orders
[2022-11-29 12:53:04] - Building property orders
[2022-11-29 12:53:04] - Binding entity from annotated class: com.app.code.User
[2022-11-29 12:53:04] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 12:53:04] - Import with entity name User
[2022-11-29 12:53:04] - Bind entity com.app.code.User on table user_detail
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 12:53:04] - building SimpleValue for user_id
[2022-11-29 12:53:04] - Building property user_id
[2022-11-29 12:53:04] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 12:53:04] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - Building property customer
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 12:53:04] - building SimpleValue for password
[2022-11-29 12:53:04] - Building property password
[2022-11-29 12:53:04] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 12:53:04] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 12:53:04] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 12:53:04] - building SimpleValue for username
[2022-11-29 12:53:04] - Building property username
[2022-11-29 12:53:04] - Starting fillSimpleValue for id
[2022-11-29 12:53:04] - Starting fillSimpleValue for address
[2022-11-29 12:53:04] - Starting fillSimpleValue for email
[2022-11-29 12:53:04] - Starting fillSimpleValue for firstName
[2022-11-29 12:53:04] - Starting fillSimpleValue for job
[2022-11-29 12:53:04] - Starting fillSimpleValue for lastName
[2022-11-29 12:53:04] - Starting fillSimpleValue for location
[2022-11-29 12:53:04] - Starting fillSimpleValue for orders
[2022-11-29 12:53:04] - Starting fillSimpleValue for user_id
[2022-11-29 12:53:04] - Starting fillSimpleValue for password
[2022-11-29 12:53:04] - Starting fillSimpleValue for username
[2022-11-29 12:53:04] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 12:53:04] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 12:53:04] - Resolving reference to class: com.app.code.Customer
[2022-11-29 12:53:04] - Resolving reference to class: com.app.code.Customer
[2022-11-29 12:53:04] - Building session factory
[2022-11-29 12:53:04] - SessionFactory name : null
[2022-11-29 12:53:04] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 12:53:04] - Automatic session close at end of transaction: disabled
[2022-11-29 12:53:04] - Statistics: disabled
[2022-11-29 12:53:04] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 12:53:04] - Default entity-mode: pojo
[2022-11-29 12:53:04] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 12:53:04] - Allow initialization of lazy state outside session : disabled
[2022-11-29 12:53:04] - Using BatchFetchStyle : LEGACY
[2022-11-29 12:53:04] - Default batch fetch size: -1
[2022-11-29 12:53:04] - Maximum outer join fetch depth: 2
[2022-11-29 12:53:04] - Default null ordering: NONE
[2022-11-29 12:53:04] - Order SQL updates by primary key: disabled
[2022-11-29 12:53:04] - Order SQL inserts for batching: disabled
[2022-11-29 12:53:04] - multi-tenancy strategy : NONE
[2022-11-29 12:53:04] - JTA Track by Thread: enabled
[2022-11-29 12:53:04] - Query language substitutions: {}
[2022-11-29 12:53:04] - Named query checking : enabled
[2022-11-29 12:53:04] - Second-level cache: disabled
[2022-11-29 12:53:04] - Second-level query cache: disabled
[2022-11-29 12:53:04] - Second-level query cache factory: null
[2022-11-29 12:53:04] - Second-level cache region prefix: null
[2022-11-29 12:53:04] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 12:53:04] - Structured second-level cache entries: disabled
[2022-11-29 12:53:04] - Second-level cache direct-reference entries: disabled
[2022-11-29 12:53:04] - Automatic eviction of collection cache: disabled
[2022-11-29 12:53:04] - JDBC batch size: 15
[2022-11-29 12:53:04] - JDBC batch updates for versioned data: enabled
[2022-11-29 12:53:04] - Scrollable result sets: enabled
[2022-11-29 12:53:04] - Wrap result sets: disabled
[2022-11-29 12:53:04] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 12:53:04] - JDBC result set fetch size: null
[2022-11-29 12:53:04] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 12:53:04] - Generate SQL with comments: disabled
[2022-11-29 12:53:04] - JPA compliance - query : disabled
[2022-11-29 12:53:04] - JPA compliance - closed-handling : disabled
[2022-11-29 12:53:04] - JPA compliance - lists : disabled
[2022-11-29 12:53:04] - JPA compliance - transactions : disabled
[2022-11-29 12:53:04] - Session factory constructed with filter configurations : {}
[2022-11-29 12:53:04] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4ad19610, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 12:53:04] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 12:53:04] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 12:53:04] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 12:53:04] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 12:53:04] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 12:53:04] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 12:53:04] - Loaded expression factory via original TCCL
[2022-11-29 12:53:04] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 12:53:04] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 12:53:04] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 12:53:04] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 12:53:04] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 12:53:04] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 12:53:04] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 12:53:04] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 12:53:04] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 12:53:04] - Skipping JACC integration as it was not enabled
[2022-11-29 12:53:04] - Instantiated session factory
[2022-11-29 12:53:04] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e4aa165] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4963fc49]
[2022-11-29 12:53:04] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 12:53:04] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 12:53:04] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 12:53:04] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 12:53:04] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 12:53:04] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 12:53:04] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 12:53:04] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 12:53:04] - Static SQL for entity: com.app.code.Customer
[2022-11-29 12:53:04] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 12:53:04] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 12:53:04] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 12:53:04] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 12:53:04] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 12:53:04] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 12:53:04] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a99ab8]
[2022-11-29 12:53:04] - Visiting attribute path : address
[2022-11-29 12:53:04] - Visiting attribute path : email
[2022-11-29 12:53:04] - Visiting attribute path : firstName
[2022-11-29 12:53:04] - Visiting attribute path : job
[2022-11-29 12:53:04] - Visiting attribute path : lastName
[2022-11-29 12:53:04] - Visiting attribute path : location
[2022-11-29 12:53:04] - Visiting attribute path : orders
[2022-11-29 12:53:04] - Building LoadPlan...
[2022-11-29 12:53:04] - processing queryspace <gen:0>
[2022-11-29 12:53:04] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 12:53:04] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:04] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec8cd7d]
[2022-11-29 12:53:04] - Visiting attribute path : address
[2022-11-29 12:53:04] - Visiting attribute path : email
[2022-11-29 12:53:04] - Visiting attribute path : firstName
[2022-11-29 12:53:04] - Visiting attribute path : job
[2022-11-29 12:53:04] - Visiting attribute path : lastName
[2022-11-29 12:53:04] - Visiting attribute path : location
[2022-11-29 12:53:04] - Visiting attribute path : orders
[2022-11-29 12:53:04] - Building LoadPlan...
[2022-11-29 12:53:04] - processing queryspace <gen:0>
[2022-11-29 12:53:04] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 12:53:04] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:04] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:04] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:04] - Static SQL for entity: com.app.code.User
[2022-11-29 12:53:04] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 12:53:04] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 12:53:04] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 12:53:04] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 12:53:04] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 12:53:04] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 12:53:04] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b963e2d]
[2022-11-29 12:53:04] - Visiting attribute path : customer
[2022-11-29 12:53:04] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40a460e4]
[2022-11-29 12:53:04] - Visiting attribute path : customer.address
[2022-11-29 12:53:04] - Visiting attribute path : customer.email
[2022-11-29 12:53:04] - Visiting attribute path : customer.firstName
[2022-11-29 12:53:04] - Visiting attribute path : customer.job
[2022-11-29 12:53:04] - Visiting attribute path : customer.lastName
[2022-11-29 12:53:04] - Visiting attribute path : customer.location
[2022-11-29 12:53:04] - Visiting attribute path : customer.orders
[2022-11-29 12:53:04] - Visiting attribute path : password
[2022-11-29 12:53:04] - Visiting attribute path : username
[2022-11-29 12:53:04] - Building LoadPlan...
[2022-11-29 12:53:04] - processing queryspace <gen:0>
[2022-11-29 12:53:04] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 12:53:04] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:53:04] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d0900d2]
[2022-11-29 12:53:04] - Visiting attribute path : customer
[2022-11-29 12:53:04] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@393cb082]
[2022-11-29 12:53:04] - Visiting attribute path : customer.address
[2022-11-29 12:53:04] - Visiting attribute path : customer.email
[2022-11-29 12:53:04] - Visiting attribute path : customer.firstName
[2022-11-29 12:53:04] - Visiting attribute path : customer.job
[2022-11-29 12:53:04] - Visiting attribute path : customer.lastName
[2022-11-29 12:53:04] - Visiting attribute path : customer.location
[2022-11-29 12:53:04] - Visiting attribute path : customer.orders
[2022-11-29 12:53:04] - Visiting attribute path : password
[2022-11-29 12:53:04] - Visiting attribute path : username
[2022-11-29 12:53:04] - Building LoadPlan...
[2022-11-29 12:53:04] - processing queryspace <gen:0>
[2022-11-29 12:53:04] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 12:53:04] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:53:04] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:53:04] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 12:53:04] - No actions specified; doing nothing
[2022-11-29 12:53:04] - Checking 0 named HQL queries
[2022-11-29 12:53:04] - Checking 0 named SQL queries
[2022-11-29 12:53:04] - Registering SessionFactory: 46446250-13e6-4b5b-95ab-384211cb5756 (<unnamed>)
[2022-11-29 12:53:04] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 12:53:04] - A sessionFactory was successfully created.
[2022-11-29 12:53:04] - Statistics initialized [enabled=false]
[2022-11-29 12:53:04] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 12:53:04] - Session with tenant id null was successfully created.
[2022-11-29 12:53:04] - begin
[2022-11-29 12:53:04] - Transaction for session with tenant id null was successfully started
[2022-11-29 12:53:04] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5619529c
[2022-11-29 12:53:04] - parse() - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 12:53:04] - throwQueryException() : no errors
[2022-11-29 12:53:04] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 12:53:04] - select << begin [level=1, statement=select]
[2022-11-29 12:53:04] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 12:53:04] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 12:53:04] - getDataType() : username -> org.hibernate.type.StringType@b077ab0
[2022-11-29 12:53:04] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 12:53:04] - select : finishing up [level=1, statement=select]
[2022-11-29 12:53:04] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
[2022-11-29 12:53:04] - Derived SELECT clause created.
[2022-11-29 12:53:04] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.User)
          | path: {synthetic-alias}.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

[2022-11-29 12:53:04] - Using FROM fragment [user_detail user0_]
[2022-11-29 12:53:04] - select >> end [level=1, statement=select]
[2022-11-29 12:53:04] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@b077ab0}

[2022-11-29 12:53:04] - throwQueryException() : no errors
[2022-11-29 12:53:04] - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 12:53:04] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 12:53:04] - throwQueryException() : no errors
[2022-11-29 12:53:04] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 12:53:04] - Result set row: 0
[2022-11-29 12:53:04] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 12:53:04] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 12:53:04] - Processing attribute `customer` : value = 50
[2022-11-29 12:53:04] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:04] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 12:53:04] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 12:53:04] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 12:53:04] - Processing attribute `address` : value = Asachi 2A
[2022-11-29 12:53:04] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:04] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 12:53:04] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:04] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 12:53:04] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:04] - Processing attribute `job` : value = NONE
[2022-11-29 12:53:04] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:04] - Processing attribute `lastName` : value = eduard
[2022-11-29 12:53:04] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:04] - Processing attribute `location` : value = Chisinau
[2022-11-29 12:53:04] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:04] - Processing attribute `orders` : value = 3
[2022-11-29 12:53:04] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:04] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 12:53:04] - Done entity load : com.app.code.Customer#50
[2022-11-29 12:53:04] - Processing attribute `password` : value = test123
[2022-11-29 12:53:04] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:04] - Processing attribute `username` : value = kerbecs
[2022-11-29 12:53:04] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 12:53:04] - Done materializing entity [com.app.code.User#28]
[2022-11-29 12:53:04] - committing
[2022-11-29 12:53:04] - Processing flush-time cascades
[2022-11-29 12:53:04] - Dirty checking collections
[2022-11-29 12:53:04] - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
[2022-11-29 12:53:04] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 12:53:04] - Listing entities:
[2022-11-29 12:53:04] - com.app.code.Customer{firstName=, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=3, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 12:53:04] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 12:53:04] - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:393)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1360)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:447)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3233)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2401)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.app.code.HibernateClass.updateProfile(HibernateClass.java:204)
	at com.app.code.ControllerConfig.updateProfile(ControllerConfig.java:114)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
[2022-11-29 12:53:04] - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.app.code.HibernateClass.updateProfile(HibernateClass.java:204)
	at com.app.code.ControllerConfig.updateProfile(ControllerConfig.java:114)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
[2022-11-29 12:53:04] - Initiating JDBC connection release from afterTransaction
[2022-11-29 12:53:04] - Clearing local Synchronizations
[2022-11-29 12:53:04] - Initiating JDBC connection release from afterTransaction
[2022-11-29 12:53:04] - Validation failed for classes [com.app.code.Customer] during update time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='Enter a first name between 2 and 20', propertyPath=firstName, rootBeanClass=class com.app.code.Customer, messageTemplate='Enter a first name between 2 and 20'}
]
[2022-11-29 12:53:04] - Transaction for session with tenant id null was successfully closed
[2022-11-29 12:53:04] - Can't modify profile of user with id 0
[2022-11-29 12:53:30] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 12:53:34] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 13:00:26] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 13:00:26] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 13:00:26] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 13:00:26] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 13:00:26] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 13:00:26] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 13:00:26] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 13:00:26] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 13:00:26] - Building session factory using provided StandardServiceRegistry
[2022-11-29 13:00:26] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 13:00:26] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 13:00:26] - Adding type registration boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 13:00:26] - Adding type registration boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 13:00:26] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 13:00:26] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3eca9300
[2022-11-29 13:00:26] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1be88e3f
[2022-11-29 13:00:26] - Adding type registration yes_no -> org.hibernate.type.YesNoType@30a1690
[2022-11-29 13:00:26] - Adding type registration byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 13:00:26] - Adding type registration byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 13:00:26] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 13:00:26] - Adding type registration character -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 13:00:26] - Adding type registration char -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 13:00:26] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 13:00:26] - Adding type registration short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 13:00:26] - Adding type registration short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 13:00:26] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 13:00:26] - Adding type registration integer -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 13:00:26] - Adding type registration int -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 13:00:26] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 13:00:26] - Adding type registration long -> org.hibernate.type.LongType@789819ba
[2022-11-29 13:00:26] - Adding type registration long -> org.hibernate.type.LongType@789819ba
[2022-11-29 13:00:26] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@789819ba
[2022-11-29 13:00:26] - Adding type registration float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 13:00:26] - Adding type registration float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 13:00:26] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 13:00:26] - Adding type registration double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 13:00:26] - Adding type registration double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 13:00:26] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 13:00:26] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2148f6b8
[2022-11-29 13:00:26] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2148f6b8
[2022-11-29 13:00:26] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5408cd90
[2022-11-29 13:00:26] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5408cd90
[2022-11-29 13:00:26] - Adding type registration string -> org.hibernate.type.StringType@b077ab0
[2022-11-29 13:00:26] - Adding type registration java.lang.String -> org.hibernate.type.StringType@b077ab0
[2022-11-29 13:00:26] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@306ba15a
[2022-11-29 13:00:26] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@765565aa
[2022-11-29 13:00:26] - Adding type registration url -> org.hibernate.type.UrlType@4dd4472c
[2022-11-29 13:00:26] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dd4472c
[2022-11-29 13:00:26] - Adding type registration Duration -> org.hibernate.type.DurationType@7b12d977
[2022-11-29 13:00:26] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b12d977
[2022-11-29 13:00:26] - Adding type registration Instant -> org.hibernate.type.InstantType@51b6a435
[2022-11-29 13:00:26] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51b6a435
[2022-11-29 13:00:26] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@236c5b7
[2022-11-29 13:00:26] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@236c5b7
[2022-11-29 13:00:26] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@33717b2
[2022-11-29 13:00:26] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@33717b2
[2022-11-29 13:00:26] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4760cc47
[2022-11-29 13:00:26] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4760cc47
[2022-11-29 13:00:26] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35745fff
[2022-11-29 13:00:26] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35745fff
[2022-11-29 13:00:26] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1767dcd6
[2022-11-29 13:00:26] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1767dcd6
[2022-11-29 13:00:26] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5467a32c
[2022-11-29 13:00:26] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5467a32c
[2022-11-29 13:00:26] - Adding type registration date -> org.hibernate.type.DateType@7f99f269
[2022-11-29 13:00:26] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f99f269
[2022-11-29 13:00:26] - Adding type registration time -> org.hibernate.type.TimeType@29205f6
[2022-11-29 13:00:26] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29205f6
[2022-11-29 13:00:26] - Adding type registration timestamp -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 13:00:26] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 13:00:26] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 13:00:26] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a953b3
[2022-11-29 13:00:26] - Adding type registration calendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 13:00:26] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 13:00:26] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 13:00:26] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78c5a23a
[2022-11-29 13:00:26] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@21b45c41
[2022-11-29 13:00:26] - Adding type registration locale -> org.hibernate.type.LocaleType@6f913455
[2022-11-29 13:00:26] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6f913455
[2022-11-29 13:00:26] - Adding type registration currency -> org.hibernate.type.CurrencyType@7556c700
[2022-11-29 13:00:26] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7556c700
[2022-11-29 13:00:26] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44d787c3
[2022-11-29 13:00:26] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44d787c3
[2022-11-29 13:00:26] - Adding type registration class -> org.hibernate.type.ClassType@2f4e0036
[2022-11-29 13:00:26] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f4e0036
[2022-11-29 13:00:26] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c5214a0
[2022-11-29 13:00:26] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c5214a0
[2022-11-29 13:00:26] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@521c2db2
[2022-11-29 13:00:26] - Adding type registration binary -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 13:00:26] - Adding type registration byte[] -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 13:00:26] - Adding type registration [B -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 13:00:26] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 13:00:26] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 13:00:26] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 13:00:26] - Adding type registration row_version -> org.hibernate.type.RowVersionType@443d6a86
[2022-11-29 13:00:26] - Adding type registration image -> org.hibernate.type.ImageType@67f310c3
[2022-11-29 13:00:26] - Adding type registration characters -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 13:00:26] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 13:00:26] - Adding type registration [C -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 13:00:26] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 13:00:26] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 13:00:26] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 13:00:26] - Adding type registration text -> org.hibernate.type.TextType@3e77ca5c
[2022-11-29 13:00:26] - Adding type registration ntext -> org.hibernate.type.NTextType@41be4068
[2022-11-29 13:00:26] - Adding type registration blob -> org.hibernate.type.BlobType@138f3105
[2022-11-29 13:00:26] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@138f3105
[2022-11-29 13:00:26] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12c1cd07
[2022-11-29 13:00:26] - Adding type registration clob -> org.hibernate.type.ClobType@677aa299
[2022-11-29 13:00:26] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@677aa299
[2022-11-29 13:00:26] - Adding type registration nclob -> org.hibernate.type.NClobType@2289c197
[2022-11-29 13:00:26] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2289c197
[2022-11-29 13:00:26] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58f1161
[2022-11-29 13:00:26] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5c041df4
[2022-11-29 13:00:26] - Adding type registration serializable -> org.hibernate.type.SerializableType@68682650
[2022-11-29 13:00:26] - Adding type registration object -> org.hibernate.type.ObjectType@6891e8f
[2022-11-29 13:00:26] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6891e8f
[2022-11-29 13:00:26] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ef662c9
[2022-11-29 13:00:26] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3dc033aa
[2022-11-29 13:00:26] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22127e8
[2022-11-29 13:00:26] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@b2b3e8
[2022-11-29 13:00:26] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6dbf791d
[2022-11-29 13:00:26] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@515e5a63
[2022-11-29 13:00:26] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5acb29c7
[2022-11-29 13:00:26] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4f73ec85
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 13:00:26] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 13:00:26] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 13:00:26] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 13:00:26] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 13:00:26] - HHH10001003: Autocommit mode: false
[2022-11-29 13:00:26] - Initializing Connection pool with 1 Connections
[2022-11-29 13:00:26] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 13:00:26] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 13:00:26] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 13:00:26] - JDBC version : 4.2
[2022-11-29 13:00:26] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 13:00:26] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 13:00:26] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 13:00:26] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 13:00:26] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d0132d0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a276a83]
[2022-11-29 13:00:26] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 13:00:26] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 13:00:26] - Import with entity name Product
[2022-11-29 13:00:26] - Bind entity com.app.code.Product on table product
[2022-11-29 13:00:26] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:26] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 13:00:26] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 13:00:26] - building SimpleValue for productId
[2022-11-29 13:00:26] - Building property productId
[2022-11-29 13:00:26] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 13:00:26] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:26] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 13:00:26] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 13:00:26] - building SimpleValue for ingredients
[2022-11-29 13:00:26] - Building property ingredients
[2022-11-29 13:00:26] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:26] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 13:00:26] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 13:00:26] - building SimpleValue for price
[2022-11-29 13:00:26] - Building property price
[2022-11-29 13:00:26] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:26] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 13:00:26] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 13:00:26] - building SimpleValue for title
[2022-11-29 13:00:26] - Building property title
[2022-11-29 13:00:26] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:26] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 13:00:26] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 13:00:26] - building SimpleValue for weight
[2022-11-29 13:00:26] - Building property weight
[2022-11-29 13:00:26] - Starting fillSimpleValue for productId
[2022-11-29 13:00:26] - Starting fillSimpleValue for ingredients
[2022-11-29 13:00:26] - Starting fillSimpleValue for price
[2022-11-29 13:00:26] - Starting fillSimpleValue for title
[2022-11-29 13:00:26] - Starting fillSimpleValue for weight
[2022-11-29 13:00:26] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 13:00:26] - Building session factory
[2022-11-29 13:00:26] - SessionFactory name : null
[2022-11-29 13:00:26] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 13:00:26] - Automatic session close at end of transaction: disabled
[2022-11-29 13:00:26] - Statistics: disabled
[2022-11-29 13:00:26] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 13:00:26] - Default entity-mode: pojo
[2022-11-29 13:00:26] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 13:00:26] - Allow initialization of lazy state outside session : disabled
[2022-11-29 13:00:26] - Using BatchFetchStyle : LEGACY
[2022-11-29 13:00:26] - Default batch fetch size: -1
[2022-11-29 13:00:26] - Maximum outer join fetch depth: 2
[2022-11-29 13:00:26] - Default null ordering: NONE
[2022-11-29 13:00:26] - Order SQL updates by primary key: disabled
[2022-11-29 13:00:26] - Order SQL inserts for batching: disabled
[2022-11-29 13:00:26] - multi-tenancy strategy : NONE
[2022-11-29 13:00:26] - JTA Track by Thread: enabled
[2022-11-29 13:00:26] - Query language substitutions: {}
[2022-11-29 13:00:26] - Named query checking : enabled
[2022-11-29 13:00:26] - Second-level cache: disabled
[2022-11-29 13:00:26] - Second-level query cache: disabled
[2022-11-29 13:00:26] - Second-level query cache factory: null
[2022-11-29 13:00:26] - Second-level cache region prefix: null
[2022-11-29 13:00:26] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 13:00:26] - Structured second-level cache entries: disabled
[2022-11-29 13:00:26] - Second-level cache direct-reference entries: disabled
[2022-11-29 13:00:26] - Automatic eviction of collection cache: disabled
[2022-11-29 13:00:26] - JDBC batch size: 15
[2022-11-29 13:00:26] - JDBC batch updates for versioned data: enabled
[2022-11-29 13:00:26] - Scrollable result sets: enabled
[2022-11-29 13:00:26] - Wrap result sets: disabled
[2022-11-29 13:00:26] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 13:00:26] - JDBC result set fetch size: null
[2022-11-29 13:00:26] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 13:00:26] - Generate SQL with comments: disabled
[2022-11-29 13:00:26] - JPA compliance - query : disabled
[2022-11-29 13:00:26] - JPA compliance - closed-handling : disabled
[2022-11-29 13:00:26] - JPA compliance - lists : disabled
[2022-11-29 13:00:26] - JPA compliance - transactions : disabled
[2022-11-29 13:00:26] - Session factory constructed with filter configurations : {}
[2022-11-29 13:00:26] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ce1d9, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 13:00:26] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 13:00:26] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 13:00:26] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 13:00:26] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 13:00:26] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 13:00:26] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 13:00:26] - Loaded expression factory via original TCCL
[2022-11-29 13:00:26] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 13:00:26] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 13:00:26] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 13:00:26] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 13:00:26] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 13:00:26] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:00:26] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:00:26] - Skipping JACC integration as it was not enabled
[2022-11-29 13:00:26] - Instantiated session factory
[2022-11-29 13:00:26] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d0132d0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@35c2390f]
[2022-11-29 13:00:26] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:00:26] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:00:26] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:00:26] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:00:26] - Static SQL for entity: com.app.code.Product
[2022-11-29 13:00:26] -  Version select: select product_id from product where product_id =?
[2022-11-29 13:00:26] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_0_, product_.price as price3_0_, product_.title as title4_0_, product_.weight as weight5_0_ from product product_ where product_.product_id=?
[2022-11-29 13:00:26] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 13:00:26] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 13:00:26] -  Delete 0: delete from product where product_id=?
[2022-11-29 13:00:26] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 13:00:26] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d774502]
[2022-11-29 13:00:26] - Visiting attribute path : ingredients
[2022-11-29 13:00:26] - Visiting attribute path : price
[2022-11-29 13:00:26] - Visiting attribute path : title
[2022-11-29 13:00:26] - Visiting attribute path : weight
[2022-11-29 13:00:26] - Building LoadPlan...
[2022-11-29 13:00:26] - processing queryspace <gen:0>
[2022-11-29 13:00:26] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 13:00:26] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:00:26] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1525c07d]
[2022-11-29 13:00:26] - Visiting attribute path : ingredients
[2022-11-29 13:00:26] - Visiting attribute path : price
[2022-11-29 13:00:26] - Visiting attribute path : title
[2022-11-29 13:00:26] - Visiting attribute path : weight
[2022-11-29 13:00:26] - Building LoadPlan...
[2022-11-29 13:00:26] - processing queryspace <gen:0>
[2022-11-29 13:00:26] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 13:00:26] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:00:26] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:00:26] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:00:26] - No actions specified; doing nothing
[2022-11-29 13:00:26] - Checking 0 named HQL queries
[2022-11-29 13:00:26] - Checking 0 named SQL queries
[2022-11-29 13:00:26] - Registering SessionFactory: b66fe614-ecfe-45a0-ae60-462b5e53dda9 (<unnamed>)
[2022-11-29 13:00:26] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 13:00:26] - A sessionFactory was successfully created.
[2022-11-29 13:00:26] - Statistics initialized [enabled=false]
[2022-11-29 13:00:26] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 13:00:26] - Session with tenant id null was successfully created.
[2022-11-29 13:00:26] - begin
[2022-11-29 13:00:26] - Transaction for session with tenant id null was successfully started
[2022-11-29 13:00:26] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5619529c
[2022-11-29 13:00:26] - parse() - HQL: FROM com.app.code.Product
[2022-11-29 13:00:26] - throwQueryException() : no errors
[2022-11-29 13:00:26] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'code'
                \-[IDENT] Node: 'Product'

[2022-11-29 13:00:26] - select << begin [level=1, statement=select]
[2022-11-29 13:00:26] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 13:00:26] - select : finishing up [level=1, statement=select]
[2022-11-29 13:00:26] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
[2022-11-29 13:00:26] - Derived SELECT clause created.
[2022-11-29 13:00:26] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2022-11-29 13:00:26] - Using FROM fragment [product product0_]
[2022-11-29 13:00:26] - select >> end [level=1, statement=select]
[2022-11-29 13:00:26] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}

[2022-11-29 13:00:26] - throwQueryException() : no errors
[2022-11-29 13:00:26] - HQL: FROM com.app.code.Product
[2022-11-29 13:00:26] - SQL: select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 13:00:26] - throwQueryException() : no errors
[2022-11-29 13:00:26] - select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 13:00:26] - Result set row: 0
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 13:00:26] - Result set row: 1
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 13:00:26] - Result set row: 2
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 13:00:26] - Result set row: 3
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 13:00:26] - Result set row: 4
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 13:00:26] - Result set row: 5
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 13:00:26] - Result set row: 6
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#7]
[2022-11-29 13:00:26] - Result set row: 7
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#8]
[2022-11-29 13:00:26] - Result set row: 8
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#9]
[2022-11-29 13:00:26] - Result set row: 9
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#10]
[2022-11-29 13:00:26] - Result set row: 10
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#11]
[2022-11-29 13:00:26] - Result set row: 11
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#12]
[2022-11-29 13:00:26] - Result set row: 12
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#13]
[2022-11-29 13:00:26] - Result set row: 13
[2022-11-29 13:00:26] - Result row: EntityKey[com.app.code.Product#14]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 8
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 330
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 8
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 320
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 5
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 220
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 8
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Lasagna
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 350
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 5
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 350
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 4
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Apple Juice
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 320
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#7]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = pasta, spaghetti, salt, sauce, vegetables
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 6
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Spaghetti
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 260
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#7]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#8]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = chichken, water, rice, salt, sauce, tomatoes, pasta
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 6
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Chicken Soup
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 350
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#8]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#9]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = mango, orange, banana, kiwi, apple, ananas
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 7
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Fruit Salat
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 320
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#9]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#10]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = sugar, blat, eggs, flour, butter, strawberry, cream
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 6
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Cake
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 300
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#10]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#11]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = mentol, water, melisa
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 4
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Tea
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 300
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#11]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#12]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = brazilian coffe
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 4
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Coffee
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 200
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#12]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#13]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = crispy, sausage, cucumber, tomatoes, blat, cabbage
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 7
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Kebab
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 350
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#13]
[2022-11-29 13:00:26] - Resolving attributes for [com.app.code.Product#14]
[2022-11-29 13:00:26] - Processing attribute `ingredients` : value = eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat
[2022-11-29 13:00:26] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `price` : value = 7
[2022-11-29 13:00:26] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `title` : value = Taco
[2022-11-29 13:00:26] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Processing attribute `weight` : value = 340
[2022-11-29 13:00:26] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:26] - Done materializing entity [com.app.code.Product#14]
[2022-11-29 13:00:26] - committing
[2022-11-29 13:00:26] - Processing flush-time cascades
[2022-11-29 13:00:26] - Dirty checking collections
[2022-11-29 13:00:26] - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
[2022-11-29 13:00:26] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:26] - Listing entities:
[2022-11-29 13:00:26] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 13:00:26] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 13:00:26] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 13:00:26] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:00:26] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:26] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:26] - com.app.code.Product{productId=14, price=7, ingredients=eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat, weight=340, title=Taco}
[2022-11-29 13:00:26] - com.app.code.Product{productId=13, price=7, ingredients=crispy, sausage, cucumber, tomatoes, blat, cabbage, weight=350, title=Kebab}
[2022-11-29 13:00:26] - com.app.code.Product{productId=12, price=4, ingredients=brazilian coffe, weight=200, title=Coffee}
[2022-11-29 13:00:26] - com.app.code.Product{productId=11, price=4, ingredients=mentol, water, melisa, weight=300, title=Tea}
[2022-11-29 13:00:26] - com.app.code.Product{productId=10, price=6, ingredients=sugar, blat, eggs, flour, butter, strawberry, cream, weight=300, title=Cake}
[2022-11-29 13:00:26] - com.app.code.Product{productId=9, price=7, ingredients=mango, orange, banana, kiwi, apple, ananas, weight=320, title=Fruit Salat}
[2022-11-29 13:00:26] - com.app.code.Product{productId=8, price=6, ingredients=chichken, water, rice, salt, sauce, tomatoes, pasta, weight=350, title=Chicken Soup}
[2022-11-29 13:00:26] - com.app.code.Product{productId=7, price=6, ingredients=pasta, spaghetti, salt, sauce, vegetables, weight=260, title=Spaghetti}
[2022-11-29 13:00:26] - Initiating JDBC connection release from afterTransaction
[2022-11-29 13:00:26] - Clearing local Synchronizations
[2022-11-29 13:00:26] - Initiating JDBC connection release from afterTransaction
[2022-11-29 13:00:26] - Session with tenant id null was successfully committed
[2022-11-29 13:00:26] - Transaction for session with tenant id null was successfully closed
[2022-11-29 13:00:36] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 13:00:36] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 13:00:36] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 13:00:36] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 13:00:36] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 13:00:36] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 13:00:36] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 13:00:36] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 13:00:36] - Building session factory using provided StandardServiceRegistry
[2022-11-29 13:00:36] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 13:00:36] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 13:00:36] - Adding type registration boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 13:00:36] - Adding type registration boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 13:00:36] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c87ce57
[2022-11-29 13:00:36] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3eca9300
[2022-11-29 13:00:36] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1be88e3f
[2022-11-29 13:00:36] - Adding type registration yes_no -> org.hibernate.type.YesNoType@30a1690
[2022-11-29 13:00:36] - Adding type registration byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 13:00:36] - Adding type registration byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 13:00:36] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6decaca2
[2022-11-29 13:00:36] - Adding type registration character -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 13:00:36] - Adding type registration char -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 13:00:36] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a384281
[2022-11-29 13:00:36] - Adding type registration short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 13:00:36] - Adding type registration short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 13:00:36] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3336a336
[2022-11-29 13:00:36] - Adding type registration integer -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 13:00:36] - Adding type registration int -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 13:00:36] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5707b38
[2022-11-29 13:00:36] - Adding type registration long -> org.hibernate.type.LongType@789819ba
[2022-11-29 13:00:36] - Adding type registration long -> org.hibernate.type.LongType@789819ba
[2022-11-29 13:00:36] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@789819ba
[2022-11-29 13:00:36] - Adding type registration float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 13:00:36] - Adding type registration float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 13:00:36] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29cc9835
[2022-11-29 13:00:36] - Adding type registration double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 13:00:36] - Adding type registration double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 13:00:36] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7dda5e29
[2022-11-29 13:00:36] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2148f6b8
[2022-11-29 13:00:36] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2148f6b8
[2022-11-29 13:00:36] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5408cd90
[2022-11-29 13:00:36] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5408cd90
[2022-11-29 13:00:36] - Adding type registration string -> org.hibernate.type.StringType@b077ab0
[2022-11-29 13:00:36] - Adding type registration java.lang.String -> org.hibernate.type.StringType@b077ab0
[2022-11-29 13:00:36] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@306ba15a
[2022-11-29 13:00:36] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@765565aa
[2022-11-29 13:00:36] - Adding type registration url -> org.hibernate.type.UrlType@4dd4472c
[2022-11-29 13:00:36] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dd4472c
[2022-11-29 13:00:36] - Adding type registration Duration -> org.hibernate.type.DurationType@7b12d977
[2022-11-29 13:00:36] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b12d977
[2022-11-29 13:00:36] - Adding type registration Instant -> org.hibernate.type.InstantType@51b6a435
[2022-11-29 13:00:36] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51b6a435
[2022-11-29 13:00:36] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@236c5b7
[2022-11-29 13:00:36] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@236c5b7
[2022-11-29 13:00:36] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@33717b2
[2022-11-29 13:00:36] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@33717b2
[2022-11-29 13:00:36] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4760cc47
[2022-11-29 13:00:36] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4760cc47
[2022-11-29 13:00:36] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35745fff
[2022-11-29 13:00:36] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35745fff
[2022-11-29 13:00:36] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1767dcd6
[2022-11-29 13:00:36] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1767dcd6
[2022-11-29 13:00:36] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5467a32c
[2022-11-29 13:00:36] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5467a32c
[2022-11-29 13:00:36] - Adding type registration date -> org.hibernate.type.DateType@7f99f269
[2022-11-29 13:00:36] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f99f269
[2022-11-29 13:00:36] - Adding type registration time -> org.hibernate.type.TimeType@29205f6
[2022-11-29 13:00:36] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29205f6
[2022-11-29 13:00:36] - Adding type registration timestamp -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 13:00:36] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 13:00:36] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@731cfdfa
[2022-11-29 13:00:36] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a953b3
[2022-11-29 13:00:36] - Adding type registration calendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 13:00:36] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 13:00:36] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a37b0c
[2022-11-29 13:00:36] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78c5a23a
[2022-11-29 13:00:36] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@21b45c41
[2022-11-29 13:00:36] - Adding type registration locale -> org.hibernate.type.LocaleType@6f913455
[2022-11-29 13:00:36] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6f913455
[2022-11-29 13:00:36] - Adding type registration currency -> org.hibernate.type.CurrencyType@7556c700
[2022-11-29 13:00:36] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7556c700
[2022-11-29 13:00:36] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44d787c3
[2022-11-29 13:00:36] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44d787c3
[2022-11-29 13:00:36] - Adding type registration class -> org.hibernate.type.ClassType@2f4e0036
[2022-11-29 13:00:36] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f4e0036
[2022-11-29 13:00:36] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c5214a0
[2022-11-29 13:00:36] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c5214a0
[2022-11-29 13:00:36] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@521c2db2
[2022-11-29 13:00:36] - Adding type registration binary -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 13:00:36] - Adding type registration byte[] -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 13:00:36] - Adding type registration [B -> org.hibernate.type.BinaryType@3d0acbc3
[2022-11-29 13:00:36] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 13:00:36] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 13:00:36] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c689cfc
[2022-11-29 13:00:36] - Adding type registration row_version -> org.hibernate.type.RowVersionType@443d6a86
[2022-11-29 13:00:36] - Adding type registration image -> org.hibernate.type.ImageType@67f310c3
[2022-11-29 13:00:36] - Adding type registration characters -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 13:00:36] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 13:00:36] - Adding type registration [C -> org.hibernate.type.CharArrayType@71ac4f6d
[2022-11-29 13:00:36] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 13:00:36] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 13:00:36] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77e5200e
[2022-11-29 13:00:36] - Adding type registration text -> org.hibernate.type.TextType@3e77ca5c
[2022-11-29 13:00:36] - Adding type registration ntext -> org.hibernate.type.NTextType@41be4068
[2022-11-29 13:00:36] - Adding type registration blob -> org.hibernate.type.BlobType@138f3105
[2022-11-29 13:00:36] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@138f3105
[2022-11-29 13:00:36] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12c1cd07
[2022-11-29 13:00:36] - Adding type registration clob -> org.hibernate.type.ClobType@677aa299
[2022-11-29 13:00:36] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@677aa299
[2022-11-29 13:00:36] - Adding type registration nclob -> org.hibernate.type.NClobType@2289c197
[2022-11-29 13:00:36] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2289c197
[2022-11-29 13:00:36] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58f1161
[2022-11-29 13:00:36] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5c041df4
[2022-11-29 13:00:36] - Adding type registration serializable -> org.hibernate.type.SerializableType@68682650
[2022-11-29 13:00:36] - Adding type registration object -> org.hibernate.type.ObjectType@6891e8f
[2022-11-29 13:00:36] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6891e8f
[2022-11-29 13:00:36] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4cc78056
[2022-11-29 13:00:36] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37b3df9f
[2022-11-29 13:00:36] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@cb58f21
[2022-11-29 13:00:36] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d80a185
[2022-11-29 13:00:36] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d354f53
[2022-11-29 13:00:36] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@453324d
[2022-11-29 13:00:36] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@243f6961
[2022-11-29 13:00:36] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c6b68ea
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 13:00:36] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 13:00:36] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 13:00:36] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 13:00:36] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 13:00:36] - HHH10001003: Autocommit mode: false
[2022-11-29 13:00:36] - Initializing Connection pool with 1 Connections
[2022-11-29 13:00:36] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 13:00:36] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 13:00:36] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 13:00:36] - JDBC version : 4.2
[2022-11-29 13:00:36] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 13:00:36] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 13:00:36] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 13:00:36] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 13:00:36] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@186ecd69] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3f388017]
[2022-11-29 13:00:36] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 13:00:36] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 13:00:36] - Import with entity name Customer
[2022-11-29 13:00:36] - Bind entity com.app.code.Customer on table customer
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 13:00:36] - building SimpleValue for id
[2022-11-29 13:00:36] - Building property id
[2022-11-29 13:00:36] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 13:00:36] - building SimpleValue for address
[2022-11-29 13:00:36] - Building property address
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 13:00:36] - building SimpleValue for email
[2022-11-29 13:00:36] - Building property email
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 13:00:36] - building SimpleValue for firstName
[2022-11-29 13:00:36] - Building property firstName
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 13:00:36] - building SimpleValue for job
[2022-11-29 13:00:36] - Building property job
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 13:00:36] - building SimpleValue for lastName
[2022-11-29 13:00:36] - Building property lastName
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 13:00:36] - building SimpleValue for location
[2022-11-29 13:00:36] - Building property location
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 13:00:36] - building SimpleValue for orders
[2022-11-29 13:00:36] - Building property orders
[2022-11-29 13:00:36] - Binding entity from annotated class: com.app.code.User
[2022-11-29 13:00:36] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 13:00:36] - Import with entity name User
[2022-11-29 13:00:36] - Bind entity com.app.code.User on table user_detail
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 13:00:36] - building SimpleValue for user_id
[2022-11-29 13:00:36] - Building property user_id
[2022-11-29 13:00:36] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 13:00:36] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - Building property customer
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 13:00:36] - building SimpleValue for password
[2022-11-29 13:00:36] - Building property password
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 13:00:36] - building SimpleValue for username
[2022-11-29 13:00:36] - Building property username
[2022-11-29 13:00:36] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 13:00:36] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 13:00:36] - Import with entity name Product
[2022-11-29 13:00:36] - Bind entity com.app.code.Product on table product
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 13:00:36] - building SimpleValue for productId
[2022-11-29 13:00:36] - Building property productId
[2022-11-29 13:00:36] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 13:00:36] - building SimpleValue for ingredients
[2022-11-29 13:00:36] - Building property ingredients
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 13:00:36] - building SimpleValue for price
[2022-11-29 13:00:36] - Building property price
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 13:00:36] - building SimpleValue for title
[2022-11-29 13:00:36] - Building property title
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 13:00:36] - building SimpleValue for weight
[2022-11-29 13:00:36] - Building property weight
[2022-11-29 13:00:36] - Binding entity from annotated class: com.app.code.Order
[2022-11-29 13:00:36] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 13:00:36] - Import with entity name Order
[2022-11-29 13:00:36] - Bind entity com.app.code.Order on table order_list
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order_list), mappingColumn=order_id, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property orderId with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Order:orderId]
[2022-11-29 13:00:36] - building SimpleValue for orderId
[2022-11-29 13:00:36] - Building property orderId
[2022-11-29 13:00:36] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(order_id)]), orderId, identity, , ...)
[2022-11-29 13:00:36] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order_list), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - Building property customer
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order_list), mappingColumn=order_time, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property orderTime with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Order:orderTime]
[2022-11-29 13:00:36] - building SimpleValue for orderTime
[2022-11-29 13:00:36] - Building property orderTime
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order_list), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 13:00:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Order:price]
[2022-11-29 13:00:36] - building SimpleValue for price
[2022-11-29 13:00:36] - Building property price
[2022-11-29 13:00:36] - Binding column: Ejb3JoinColumn{logicalColumnName='product_id', referencedColumn='', mappedBy=''}
[2022-11-29 13:00:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order_list), mappingColumn=product, insertable=true, updatable=true, unique=false}
[2022-11-29 13:00:36] - Building property product
[2022-11-29 13:00:36] - Starting fillSimpleValue for id
[2022-11-29 13:00:36] - Starting fillSimpleValue for address
[2022-11-29 13:00:36] - Starting fillSimpleValue for email
[2022-11-29 13:00:36] - Starting fillSimpleValue for firstName
[2022-11-29 13:00:36] - Starting fillSimpleValue for job
[2022-11-29 13:00:36] - Starting fillSimpleValue for lastName
[2022-11-29 13:00:36] - Starting fillSimpleValue for location
[2022-11-29 13:00:36] - Starting fillSimpleValue for orders
[2022-11-29 13:00:36] - Starting fillSimpleValue for user_id
[2022-11-29 13:00:36] - Starting fillSimpleValue for password
[2022-11-29 13:00:36] - Starting fillSimpleValue for username
[2022-11-29 13:00:36] - Starting fillSimpleValue for productId
[2022-11-29 13:00:36] - Starting fillSimpleValue for ingredients
[2022-11-29 13:00:36] - Starting fillSimpleValue for price
[2022-11-29 13:00:36] - Starting fillSimpleValue for title
[2022-11-29 13:00:36] - Starting fillSimpleValue for weight
[2022-11-29 13:00:36] - Starting fillSimpleValue for orderId
[2022-11-29 13:00:36] - Starting fillSimpleValue for orderTime
[2022-11-29 13:00:36] - Starting fillSimpleValue for price
[2022-11-29 13:00:36] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 13:00:36] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 13:00:36] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 13:00:36] - Forcing column [order_id] to be non-null as it is part of the primary key for table [order_list]
[2022-11-29 13:00:36] - Resolving reference to class: com.app.code.Customer
[2022-11-29 13:00:36] - Resolving reference to class: com.app.code.Product
[2022-11-29 13:00:36] - Resolving reference to class: com.app.code.Customer
[2022-11-29 13:00:36] - Resolving reference to class: com.app.code.Customer
[2022-11-29 13:00:36] - Resolving reference to class: com.app.code.Product
[2022-11-29 13:00:36] - Resolving reference to class: com.app.code.Customer
[2022-11-29 13:00:36] - Building session factory
[2022-11-29 13:00:36] - SessionFactory name : null
[2022-11-29 13:00:36] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 13:00:36] - Automatic session close at end of transaction: disabled
[2022-11-29 13:00:36] - Statistics: disabled
[2022-11-29 13:00:36] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 13:00:36] - Default entity-mode: pojo
[2022-11-29 13:00:36] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 13:00:36] - Allow initialization of lazy state outside session : disabled
[2022-11-29 13:00:36] - Using BatchFetchStyle : LEGACY
[2022-11-29 13:00:36] - Default batch fetch size: -1
[2022-11-29 13:00:36] - Maximum outer join fetch depth: 2
[2022-11-29 13:00:36] - Default null ordering: NONE
[2022-11-29 13:00:36] - Order SQL updates by primary key: disabled
[2022-11-29 13:00:36] - Order SQL inserts for batching: disabled
[2022-11-29 13:00:36] - multi-tenancy strategy : NONE
[2022-11-29 13:00:36] - JTA Track by Thread: enabled
[2022-11-29 13:00:36] - Query language substitutions: {}
[2022-11-29 13:00:36] - Named query checking : enabled
[2022-11-29 13:00:36] - Second-level cache: disabled
[2022-11-29 13:00:36] - Second-level query cache: disabled
[2022-11-29 13:00:36] - Second-level query cache factory: null
[2022-11-29 13:00:36] - Second-level cache region prefix: null
[2022-11-29 13:00:36] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 13:00:36] - Structured second-level cache entries: disabled
[2022-11-29 13:00:36] - Second-level cache direct-reference entries: disabled
[2022-11-29 13:00:36] - Automatic eviction of collection cache: disabled
[2022-11-29 13:00:36] - JDBC batch size: 15
[2022-11-29 13:00:36] - JDBC batch updates for versioned data: enabled
[2022-11-29 13:00:36] - Scrollable result sets: enabled
[2022-11-29 13:00:36] - Wrap result sets: disabled
[2022-11-29 13:00:36] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 13:00:36] - JDBC result set fetch size: null
[2022-11-29 13:00:36] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 13:00:36] - Generate SQL with comments: disabled
[2022-11-29 13:00:36] - JPA compliance - query : disabled
[2022-11-29 13:00:36] - JPA compliance - closed-handling : disabled
[2022-11-29 13:00:36] - JPA compliance - lists : disabled
[2022-11-29 13:00:36] - JPA compliance - transactions : disabled
[2022-11-29 13:00:36] - Session factory constructed with filter configurations : {}
[2022-11-29 13:00:36] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3f40fcf9, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 13:00:36] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 13:00:36] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 13:00:36] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 13:00:36] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 13:00:36] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 13:00:36] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 13:00:36] - Loaded expression factory via original TCCL
[2022-11-29 13:00:36] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 13:00:36] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 13:00:36] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 13:00:36] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 13:00:36] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.Order] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Order
[2022-11-29 13:00:36] - Skipping JACC integration as it was not enabled
[2022-11-29 13:00:36] - Instantiated session factory
[2022-11-29 13:00:36] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@186ecd69] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9e24803]
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.Order] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Order
[2022-11-29 13:00:36] - Not known whether passed class name [com.app.code.Order] is safe
[2022-11-29 13:00:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Order
[2022-11-29 13:00:36] - Static SQL for entity: com.app.code.Customer
[2022-11-29 13:00:36] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 13:00:36] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 13:00:36] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 13:00:36] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 13:00:36] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 13:00:36] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5669c598]
[2022-11-29 13:00:36] - Visiting attribute path : address
[2022-11-29 13:00:36] - Visiting attribute path : email
[2022-11-29 13:00:36] - Visiting attribute path : firstName
[2022-11-29 13:00:36] - Visiting attribute path : job
[2022-11-29 13:00:36] - Visiting attribute path : lastName
[2022-11-29 13:00:36] - Visiting attribute path : location
[2022-11-29 13:00:36] - Visiting attribute path : orders
[2022-11-29 13:00:36] - Building LoadPlan...
[2022-11-29 13:00:36] - processing queryspace <gen:0>
[2022-11-29 13:00:36] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 13:00:36] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30ba1bb6]
[2022-11-29 13:00:36] - Visiting attribute path : address
[2022-11-29 13:00:36] - Visiting attribute path : email
[2022-11-29 13:00:36] - Visiting attribute path : firstName
[2022-11-29 13:00:36] - Visiting attribute path : job
[2022-11-29 13:00:36] - Visiting attribute path : lastName
[2022-11-29 13:00:36] - Visiting attribute path : location
[2022-11-29 13:00:36] - Visiting attribute path : orders
[2022-11-29 13:00:36] - Building LoadPlan...
[2022-11-29 13:00:36] - processing queryspace <gen:0>
[2022-11-29 13:00:36] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 13:00:36] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 13:00:36] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 13:00:36] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 13:00:36] - Static SQL for entity: com.app.code.Product
[2022-11-29 13:00:36] -  Version select: select product_id from product where product_id =?
[2022-11-29 13:00:36] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_2_, product_.price as price3_2_, product_.title as title4_2_, product_.weight as weight5_2_ from product product_ where product_.product_id=?
[2022-11-29 13:00:36] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 13:00:36] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 13:00:36] -  Delete 0: delete from product where product_id=?
[2022-11-29 13:00:36] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c756a9]
[2022-11-29 13:00:36] - Visiting attribute path : ingredients
[2022-11-29 13:00:36] - Visiting attribute path : price
[2022-11-29 13:00:36] - Visiting attribute path : title
[2022-11-29 13:00:36] - Visiting attribute path : weight
[2022-11-29 13:00:36] - Building LoadPlan...
[2022-11-29 13:00:36] - processing queryspace <gen:0>
[2022-11-29 13:00:36] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

[2022-11-29 13:00:36] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_2_0_, product0_.ingredients as ingredie2_2_0_, product0_.price as price3_2_0_, product0_.title as title4_2_0_, product0_.weight as weight5_2_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18dfeb8e]
[2022-11-29 13:00:36] - Visiting attribute path : ingredients
[2022-11-29 13:00:36] - Visiting attribute path : price
[2022-11-29 13:00:36] - Visiting attribute path : title
[2022-11-29 13:00:36] - Visiting attribute path : weight
[2022-11-29 13:00:36] - Building LoadPlan...
[2022-11-29 13:00:36] - processing queryspace <gen:0>
[2022-11-29 13:00:36] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

[2022-11-29 13:00:36] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_2_0_, product0_.ingredients as ingredie2_2_0_, product0_.price as price3_2_0_, product0_.title as title4_2_0_, product0_.weight as weight5_2_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:00:36] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_2_0_, product0_.ingredients as ingredie2_2_0_, product0_.price as price3_2_0_, product0_.title as title4_2_0_, product0_.weight as weight5_2_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:00:36] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_2_0_, product0_.ingredients as ingredie2_2_0_, product0_.price as price3_2_0_, product0_.title as title4_2_0_, product0_.weight as weight5_2_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:00:36] - Static SQL for entity: com.app.code.User
[2022-11-29 13:00:36] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 13:00:36] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_3_, user_.password as password2_3_, user_.username as username3_3_ from user_detail user_ where user_.user_id=?
[2022-11-29 13:00:36] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 13:00:36] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 13:00:36] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 13:00:36] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a4da1a8]
[2022-11-29 13:00:36] - Visiting attribute path : customer
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340c5a79]
[2022-11-29 13:00:36] - Visiting attribute path : customer.address
[2022-11-29 13:00:36] - Visiting attribute path : customer.email
[2022-11-29 13:00:36] - Visiting attribute path : customer.firstName
[2022-11-29 13:00:36] - Visiting attribute path : customer.job
[2022-11-29 13:00:36] - Visiting attribute path : customer.lastName
[2022-11-29 13:00:36] - Visiting attribute path : customer.location
[2022-11-29 13:00:36] - Visiting attribute path : customer.orders
[2022-11-29 13:00:36] - Visiting attribute path : password
[2022-11-29 13:00:36] - Visiting attribute path : username
[2022-11-29 13:00:36] - Building LoadPlan...
[2022-11-29 13:00:36] - processing queryspace <gen:0>
[2022-11-29 13:00:36] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 13:00:36] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.customer_id as customer4_3_0_, user0_.password as password2_3_0_, user0_.username as username3_3_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64a1576d]
[2022-11-29 13:00:36] - Visiting attribute path : customer
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2311f0f0]
[2022-11-29 13:00:36] - Visiting attribute path : customer.address
[2022-11-29 13:00:36] - Visiting attribute path : customer.email
[2022-11-29 13:00:36] - Visiting attribute path : customer.firstName
[2022-11-29 13:00:36] - Visiting attribute path : customer.job
[2022-11-29 13:00:36] - Visiting attribute path : customer.lastName
[2022-11-29 13:00:36] - Visiting attribute path : customer.location
[2022-11-29 13:00:36] - Visiting attribute path : customer.orders
[2022-11-29 13:00:36] - Visiting attribute path : password
[2022-11-29 13:00:36] - Visiting attribute path : username
[2022-11-29 13:00:36] - Building LoadPlan...
[2022-11-29 13:00:36] - processing queryspace <gen:0>
[2022-11-29 13:00:36] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 13:00:36] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_3_0_, user0_.customer_id as customer4_3_0_, user0_.password as password2_3_0_, user0_.username as username3_3_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 13:00:36] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_3_1_, user0_.customer_id as customer4_3_1_, user0_.password as password2_3_1_, user0_.username as username3_3_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 13:00:36] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_3_1_, user0_.customer_id as customer4_3_1_, user0_.password as password2_3_1_, user0_.username as username3_3_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 13:00:36] - Static SQL for entity: com.app.code.Order
[2022-11-29 13:00:36] -  Version select: select order_id from order_list where order_id =?
[2022-11-29 13:00:36] -  Snapshot select: select order_.order_id, order_.customer_id as customer4_1_, order_.order_time as order_ti2_1_, order_.price as price3_1_, order_.product_id as product_5_1_ from order_list order_ where order_.order_id=?
[2022-11-29 13:00:36] -  Insert 0: insert into order_list (customer_id, order_time, price, product_id, order_id) values (?, ?, ?, ?, ?)
[2022-11-29 13:00:36] -  Update 0: update order_list set customer_id=?, order_time=?, price=?, product_id=? where order_id=?
[2022-11-29 13:00:36] -  Delete 0: delete from order_list where order_id=?
[2022-11-29 13:00:36] -  Identity insert: insert into order_list (customer_id, order_time, price, product_id) values (?, ?, ?, ?)
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1985515c]
[2022-11-29 13:00:36] - Visiting attribute path : customer
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a5791]
[2022-11-29 13:00:36] - Visiting attribute path : customer.address
[2022-11-29 13:00:36] - Visiting attribute path : customer.email
[2022-11-29 13:00:36] - Visiting attribute path : customer.firstName
[2022-11-29 13:00:36] - Visiting attribute path : customer.job
[2022-11-29 13:00:36] - Visiting attribute path : customer.lastName
[2022-11-29 13:00:36] - Visiting attribute path : customer.location
[2022-11-29 13:00:36] - Visiting attribute path : customer.orders
[2022-11-29 13:00:36] - Visiting attribute path : orderTime
[2022-11-29 13:00:36] - Visiting attribute path : price
[2022-11-29 13:00:36] - Visiting attribute path : product
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6caa7d]
[2022-11-29 13:00:36] - Visiting attribute path : product.ingredients
[2022-11-29 13:00:36] - Visiting attribute path : product.price
[2022-11-29 13:00:36] - Visiting attribute path : product.title
[2022-11-29 13:00:36] - Visiting attribute path : product.weight
[2022-11-29 13:00:36] - Building LoadPlan...
[2022-11-29 13:00:36] - processing queryspace <gen:0>
[2022-11-29 13:00:36] - LoadPlan(entity=com.app.code.Order)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Order, querySpaceUid=<gen:0>, path=com.app.code.Order)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.Order.customer)
          - EntityAttributeFetchImpl(entity=com.app.code.Product, querySpaceUid=<gen:2>, path=com.app.code.Order.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.app.code.Product)
                - SQL table alias mapping - product2_
                - alias suffix - 2_
                - suffixed key columns - {product_1_2_2_}

[2022-11-29 13:00:36] - Static select for entity com.app.code.Order [NONE]: select order0_.order_id as order_id1_1_0_, order0_.customer_id as customer4_1_0_, order0_.order_time as order_ti2_1_0_, order0_.price as price3_1_0_, order0_.product_id as product_5_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_, product2_.product_id as product_1_2_2_, product2_.ingredients as ingredie2_2_2_, product2_.price as price3_2_2_, product2_.title as title4_2_2_, product2_.weight as weight5_2_2_ from order_list order0_ left outer join customer customer1_ on order0_.customer_id=customer1_.customer_id left outer join product product2_ on order0_.product_id=product2_.product_id where order0_.order_id=?
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31b0cb9f]
[2022-11-29 13:00:36] - Visiting attribute path : customer
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67d4efff]
[2022-11-29 13:00:36] - Visiting attribute path : customer.address
[2022-11-29 13:00:36] - Visiting attribute path : customer.email
[2022-11-29 13:00:36] - Visiting attribute path : customer.firstName
[2022-11-29 13:00:36] - Visiting attribute path : customer.job
[2022-11-29 13:00:36] - Visiting attribute path : customer.lastName
[2022-11-29 13:00:36] - Visiting attribute path : customer.location
[2022-11-29 13:00:36] - Visiting attribute path : customer.orders
[2022-11-29 13:00:36] - Visiting attribute path : orderTime
[2022-11-29 13:00:36] - Visiting attribute path : price
[2022-11-29 13:00:36] - Visiting attribute path : product
[2022-11-29 13:00:36] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b457a47]
[2022-11-29 13:00:36] - Visiting attribute path : product.ingredients
[2022-11-29 13:00:36] - Visiting attribute path : product.price
[2022-11-29 13:00:36] - Visiting attribute path : product.title
[2022-11-29 13:00:36] - Visiting attribute path : product.weight
[2022-11-29 13:00:36] - Building LoadPlan...
[2022-11-29 13:00:36] - processing queryspace <gen:0>
[2022-11-29 13:00:36] - LoadPlan(entity=com.app.code.Order)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Order, querySpaceUid=<gen:0>, path=com.app.code.Order)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.Order.customer)
          - EntityAttributeFetchImpl(entity=com.app.code.Product, querySpaceUid=<gen:2>, path=com.app.code.Order.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.app.code.Product)
                - SQL table alias mapping - product2_
                - alias suffix - 2_
                - suffixed key columns - {product_1_2_2_}

[2022-11-29 13:00:36] - Static select for entity com.app.code.Order [READ]: select order0_.order_id as order_id1_1_0_, order0_.customer_id as customer4_1_0_, order0_.order_time as order_ti2_1_0_, order0_.price as price3_1_0_, order0_.product_id as product_5_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_, product2_.product_id as product_1_2_2_, product2_.ingredients as ingredie2_2_2_, product2_.price as price3_2_2_, product2_.title as title4_2_2_, product2_.weight as weight5_2_2_ from order_list order0_ left outer join customer customer1_ on order0_.customer_id=customer1_.customer_id left outer join product product2_ on order0_.product_id=product2_.product_id where order0_.order_id=?
[2022-11-29 13:00:36] - Static select for action ACTION_MERGE on entity com.app.code.Order: select order0_.order_id as order_id1_1_2_, order0_.customer_id as customer4_1_2_, order0_.order_time as order_ti2_1_2_, order0_.price as price3_1_2_, order0_.product_id as product_5_1_2_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_, product2_.product_id as product_1_2_1_, product2_.ingredients as ingredie2_2_1_, product2_.price as price3_2_1_, product2_.title as title4_2_1_, product2_.weight as weight5_2_1_ from order_list order0_ left outer join customer customer1_ on order0_.customer_id=customer1_.customer_id left outer join product product2_ on order0_.product_id=product2_.product_id where order0_.order_id=?
[2022-11-29 13:00:36] - Static select for action ACTION_REFRESH on entity com.app.code.Order: select order0_.order_id as order_id1_1_2_, order0_.customer_id as customer4_1_2_, order0_.order_time as order_ti2_1_2_, order0_.price as price3_1_2_, order0_.product_id as product_5_1_2_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_, product2_.product_id as product_1_2_1_, product2_.ingredients as ingredie2_2_1_, product2_.price as price3_2_1_, product2_.title as title4_2_1_, product2_.weight as weight5_2_1_ from order_list order0_ left outer join customer customer1_ on order0_.customer_id=customer1_.customer_id left outer join product product2_ on order0_.product_id=product2_.product_id where order0_.order_id=?
[2022-11-29 13:00:36] - No actions specified; doing nothing
[2022-11-29 13:00:36] - Checking 0 named HQL queries
[2022-11-29 13:00:36] - Checking 0 named SQL queries
[2022-11-29 13:00:36] - Registering SessionFactory: 7f4df21e-e3d6-4a7f-b077-9ba148c1798f (<unnamed>)
[2022-11-29 13:00:36] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 13:00:36] - A sessionFactory was successfully created.
[2022-11-29 13:00:36] - Statistics initialized [enabled=false]
[2022-11-29 13:00:36] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 13:00:36] - Session with tenant id null was successfully created.
[2022-11-29 13:00:36] - begin
[2022-11-29 13:00:36] - Transaction for session with tenant id null was successfully started
[2022-11-29 13:00:36] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5619529c
[2022-11-29 13:00:36] - parse() - HQL: FROM com.app.code.Product WHERE title=?0
[2022-11-29 13:00:36] - throwQueryException() : no errors
[2022-11-29 13:00:36] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'Product'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'title'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 13:00:36] - select << begin [level=1, statement=select]
[2022-11-29 13:00:36] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 13:00:36] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 13:00:36] - getDataType() : title -> org.hibernate.type.StringType@b077ab0
[2022-11-29 13:00:36] - Resolved : {synthetic-alias}.title -> product0_.title
[2022-11-29 13:00:36] - select : finishing up [level=1, statement=select]
[2022-11-29 13:00:36] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) ( WHERE ( = ( product0_.title {synthetic-alias} title ) ? ) ) )
[2022-11-29 13:00:36] - Derived SELECT clause created.
[2022-11-29 13:00:36] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.Product)
          | path: {synthetic-alias}.title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.Product)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: title
          \-ParameterNode

[2022-11-29 13:00:36] - Using FROM fragment [product product0_]
[2022-11-29 13:00:36] - select >> end [level=1, statement=select]
[2022-11-29 13:00:36] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_2_, product0_.price as price3_2_, product0_.title as title4_2_, product0_.weight as weight5_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'product0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path={synthetic-alias}.title,tableAlias=product0_,className=com.app.code.Product,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@b077ab0}

[2022-11-29 13:00:36] - throwQueryException() : no errors
[2022-11-29 13:00:36] - HQL: FROM com.app.code.Product WHERE title=?0
[2022-11-29 13:00:36] - SQL: select product0_.product_id as product_1_2_, product0_.ingredients as ingredie2_2_, product0_.price as price3_2_, product0_.title as title4_2_, product0_.weight as weight5_2_ from product product0_ where product0_.title=?
[2022-11-29 13:00:36] - throwQueryException() : no errors
[2022-11-29 13:00:36] - select product0_.product_id as product_1_2_, product0_.ingredients as ingredie2_2_, product0_.price as price3_2_, product0_.title as title4_2_, product0_.weight as weight5_2_ from product product0_ where product0_.title=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 13:00:36] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 13:00:36] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 13:00:36] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `price` : value = 8
[2022-11-29 13:00:36] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 13:00:36] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `weight` : value = 330
[2022-11-29 13:00:36] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 13:00:36] - parse() - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 13:00:36] - throwQueryException() : no errors
[2022-11-29 13:00:36] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 13:00:36] - select << begin [level=1, statement=select]
[2022-11-29 13:00:36] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 13:00:36] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 13:00:36] - getDataType() : username -> org.hibernate.type.StringType@b077ab0
[2022-11-29 13:00:36] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 13:00:36] - select : finishing up [level=1, statement=select]
[2022-11-29 13:00:36] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
[2022-11-29 13:00:36] - Derived SELECT clause created.
[2022-11-29 13:00:36] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.User)
          | path: {synthetic-alias}.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

[2022-11-29 13:00:36] - Using FROM fragment [user_detail user0_]
[2022-11-29 13:00:36] - select >> end [level=1, statement=select]
[2022-11-29 13:00:36] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_3_, user0_.password as password2_3_, user0_.username as username3_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@b077ab0}

[2022-11-29 13:00:36] - throwQueryException() : no errors
[2022-11-29 13:00:36] - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 13:00:36] - SQL: select user0_.user_id as user_id1_3_, user0_.customer_id as customer4_3_, user0_.password as password2_3_, user0_.username as username3_3_ from user_detail user0_ where user0_.username=?
[2022-11-29 13:00:36] - throwQueryException() : no errors
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - select user0_.user_id as user_id1_3_, user0_.customer_id as customer4_3_, user0_.password as password2_3_, user0_.username as username3_3_ from user_detail user0_ where user0_.username=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 13:00:36] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 13:00:36] - Processing attribute `customer` : value = 50
[2022-11-29 13:00:36] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 13:00:36] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 13:00:36] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 13:00:36] - Processing attribute `address` : value = Asachi 2A
[2022-11-29 13:00:36] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 13:00:36] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 13:00:36] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `job` : value = NONE
[2022-11-29 13:00:36] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `lastName` : value = eduard
[2022-11-29 13:00:36] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `location` : value = Chisinau
[2022-11-29 13:00:36] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `orders` : value = 3
[2022-11-29 13:00:36] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 13:00:36] - Done entity load : com.app.code.Customer#50
[2022-11-29 13:00:36] - Processing attribute `password` : value = test123
[2022-11-29 13:00:36] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `username` : value = kerbecs
[2022-11-29 13:00:36] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Done materializing entity [com.app.code.User#28]
[2022-11-29 13:00:36] - Executing identity-insert immediately
[2022-11-29 13:00:36] - insert into order_list (customer_id, order_time, price, product_id) values (?, ?, ?, ?)
[2022-11-29 13:00:36] - Natively generated identity: 12
[2022-11-29 13:00:36] - HHH000387: ResultSet's statement was not registered
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=4, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - select product0_.product_id as product_1_2_, product0_.ingredients as ingredie2_2_, product0_.price as price3_2_, product0_.title as title4_2_, product0_.weight as weight5_2_ from product product0_ where product0_.title=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 13:00:36] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 13:00:36] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 13:00:36] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `price` : value = 8
[2022-11-29 13:00:36] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 13:00:36] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `weight` : value = 320
[2022-11-29 13:00:36] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=4, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - select user0_.user_id as user_id1_3_, user0_.customer_id as customer4_3_, user0_.password as password2_3_, user0_.username as username3_3_ from user_detail user0_ where user0_.username=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 13:00:36] - Executing identity-insert immediately
[2022-11-29 13:00:36] - insert into order_list (customer_id, order_time, price, product_id) values (?, ?, ?, ?)
[2022-11-29 13:00:36] - Natively generated identity: 13
[2022-11-29 13:00:36] - HHH000387: ResultSet's statement was not registered
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 6 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=5, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#2, orderTime=29/11/2022 13:00:36, orderId=13, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - select product0_.product_id as product_1_2_, product0_.ingredients as ingredie2_2_, product0_.price as price3_2_, product0_.title as title4_2_, product0_.weight as weight5_2_ from product product0_ where product0_.title=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 13:00:36] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 13:00:36] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 13:00:36] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `price` : value = 5
[2022-11-29 13:00:36] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 13:00:36] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `weight` : value = 220
[2022-11-29 13:00:36] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 7 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:00:36] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=5, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#2, orderTime=29/11/2022 13:00:36, orderId=13, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - select user0_.user_id as user_id1_3_, user0_.customer_id as customer4_3_, user0_.password as password2_3_, user0_.username as username3_3_ from user_detail user0_ where user0_.username=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 13:00:36] - Executing identity-insert immediately
[2022-11-29 13:00:36] - insert into order_list (customer_id, order_time, price, product_id) values (?, ?, ?, ?)
[2022-11-29 13:00:36] - Natively generated identity: 14
[2022-11-29 13:00:36] - HHH000387: ResultSet's statement was not registered
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 8 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:00:36] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=6, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#2, orderTime=29/11/2022 13:00:36, orderId=13, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#3, orderTime=29/11/2022 13:00:36, orderId=14, price=5, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - select product0_.product_id as product_1_2_, product0_.ingredients as ingredie2_2_, product0_.price as price3_2_, product0_.title as title4_2_, product0_.weight as weight5_2_ from product product0_ where product0_.title=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 13:00:36] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 13:00:36] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 13:00:36] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `price` : value = 8
[2022-11-29 13:00:36] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `title` : value = Lasagna
[2022-11-29 13:00:36] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `weight` : value = 350
[2022-11-29 13:00:36] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 9 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 13:00:36] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:00:36] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=6, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#2, orderTime=29/11/2022 13:00:36, orderId=13, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#3, orderTime=29/11/2022 13:00:36, orderId=14, price=5, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - select user0_.user_id as user_id1_3_, user0_.customer_id as customer4_3_, user0_.password as password2_3_, user0_.username as username3_3_ from user_detail user0_ where user0_.username=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 13:00:36] - Executing identity-insert immediately
[2022-11-29 13:00:36] - insert into order_list (customer_id, order_time, price, product_id) values (?, ?, ?, ?)
[2022-11-29 13:00:36] - Natively generated identity: 15
[2022-11-29 13:00:36] - HHH000387: ResultSet's statement was not registered
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 10 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 13:00:36] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:00:36] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=7, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#2, orderTime=29/11/2022 13:00:36, orderId=13, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#3, orderTime=29/11/2022 13:00:36, orderId=14, price=5, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#4, orderTime=29/11/2022 13:00:36, orderId=15, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - select product0_.product_id as product_1_2_, product0_.ingredients as ingredie2_2_, product0_.price as price3_2_, product0_.title as title4_2_, product0_.weight as weight5_2_ from product product0_ where product0_.title=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 13:00:36] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 13:00:36] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 13:00:36] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `price` : value = 5
[2022-11-29 13:00:36] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 13:00:36] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `weight` : value = 350
[2022-11-29 13:00:36] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 11 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 13:00:36] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 13:00:36] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:00:36] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=7, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#2, orderTime=29/11/2022 13:00:36, orderId=13, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#3, orderTime=29/11/2022 13:00:36, orderId=14, price=5, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#4, orderTime=29/11/2022 13:00:36, orderId=15, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - select user0_.user_id as user_id1_3_, user0_.customer_id as customer4_3_, user0_.password as password2_3_, user0_.username as username3_3_ from user_detail user0_ where user0_.username=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 13:00:36] - Executing identity-insert immediately
[2022-11-29 13:00:36] - insert into order_list (customer_id, order_time, price, product_id) values (?, ?, ?, ?)
[2022-11-29 13:00:36] - Natively generated identity: 16
[2022-11-29 13:00:36] - HHH000387: ResultSet's statement was not registered
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 12 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 13:00:36] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 13:00:36] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:00:36] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#5, orderTime=29/11/2022 13:00:36, orderId=16, price=5, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=8, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#2, orderTime=29/11/2022 13:00:36, orderId=13, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#3, orderTime=29/11/2022 13:00:36, orderId=14, price=5, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#4, orderTime=29/11/2022 13:00:36, orderId=15, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - select product0_.product_id as product_1_2_, product0_.ingredients as ingredie2_2_, product0_.price as price3_2_, product0_.title as title4_2_, product0_.weight as weight5_2_ from product product0_ where product0_.title=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 13:00:36] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 13:00:36] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 13:00:36] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `price` : value = 4
[2022-11-29 13:00:36] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `title` : value = Apple Juice
[2022-11-29 13:00:36] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Processing attribute `weight` : value = 320
[2022-11-29 13:00:36] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:00:36] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 13 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 13:00:36] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 13:00:36] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 13:00:36] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:00:36] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#5, orderTime=29/11/2022 13:00:36, orderId=16, price=5, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=8, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#2, orderTime=29/11/2022 13:00:36, orderId=13, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#3, orderTime=29/11/2022 13:00:36, orderId=14, price=5, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#4, orderTime=29/11/2022 13:00:36, orderId=15, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - select user0_.user_id as user_id1_3_, user0_.customer_id as customer4_3_, user0_.password as password2_3_, user0_.username as username3_3_ from user_detail user0_ where user0_.username=?
[2022-11-29 13:00:36] - Result set row: 0
[2022-11-29 13:00:36] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 13:00:36] - Executing identity-insert immediately
[2022-11-29 13:00:36] - insert into order_list (customer_id, order_time, price, product_id) values (?, ?, ?, ?)
[2022-11-29 13:00:36] - Natively generated identity: 17
[2022-11-29 13:00:36] - HHH000387: ResultSet's statement was not registered
[2022-11-29 13:00:36] - committing
[2022-11-29 13:00:36] - Processing flush-time cascades
[2022-11-29 13:00:36] - Dirty checking collections
[2022-11-29 13:00:36] - Flushed: 0 insertions, 1 updates, 0 deletions to 14 objects
[2022-11-29 13:00:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:00:36] - Listing entities:
[2022-11-29 13:00:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 13:00:36] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 13:00:36] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 13:00:36] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 13:00:36] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:00:36] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:00:36] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#5, orderTime=29/11/2022 13:00:36, orderId=16, price=5, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#6, orderTime=29/11/2022 13:00:36, orderId=17, price=4, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#1, orderTime=29/11/2022 13:00:36, orderId=12, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#2, orderTime=29/11/2022 13:00:36, orderId=13, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#3, orderTime=29/11/2022 13:00:36, orderId=14, price=5, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - com.app.code.Order{product=com.app.code.Product#4, orderTime=29/11/2022 13:00:36, orderId=15, price=8, customer=com.app.code.Customer#50}
[2022-11-29 13:00:36] - update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 13:00:36] - Initiating JDBC connection release from afterTransaction
[2022-11-29 13:00:36] - Clearing local Synchronizations
[2022-11-29 13:00:36] - Initiating JDBC connection release from afterTransaction
[2022-11-29 13:00:36] - Session with tenant id null was successfully committed
[2022-11-29 13:00:36] - Transaction for session with tenant id null was successfully closed
[2022-11-29 13:00:36] - User with id 0 successfully made an order
[2022-11-29 13:00:56] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 13:01:06] - Connection pool now considered primed; min-size will be maintained

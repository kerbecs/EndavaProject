[2022-11-29 13:16:59] - Logging Provider: org.jboss.logging.Slf4jLoggerProvider
[2022-11-29 13:16:59] - HV000001: Hibernate Validator 6.0.21.Final
[2022-11-29 13:16:59] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 13:16:59] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 13:16:59] - Loaded expression factory via original TCCL
[2022-11-29 13:16:59] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2022-11-29 13:16:59] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2022-11-29 13:16:59] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2022-11-29 13:16:59] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 13:16:59] - Trying to load META-INF/validation.xml via user class loader
[2022-11-29 13:16:59] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 13:16:59] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 13:16:59] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 13:16:59] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 13:16:59] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 13:16:59] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 13:16:59] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 13:16:59] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 13:17:00] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 13:17:00] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 13:17:00] - Loaded expression factory via original TCCL
[2022-11-29 13:17:00] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2022-11-29 13:17:00] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2022-11-29 13:17:00] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2022-11-29 13:17:00] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 13:17:00] - Trying to load META-INF/validation.xml via user class loader
[2022-11-29 13:17:00] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 13:17:00] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 13:17:00] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 13:17:00] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 13:17:00] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 13:17:00] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 13:17:00] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 13:17:00] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 13:17:05] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 13:17:05] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 13:17:05] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 13:17:05] - HHH000412: Hibernate Core {5.4.11.Final}
[2022-11-29 13:17:05] - HHH000206: hibernate.properties not found
[2022-11-29 13:17:06] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 13:17:06] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 13:17:06] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 13:17:06] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 13:17:06] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 13:17:06] - Building session factory using provided StandardServiceRegistry
[2022-11-29 13:17:06] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 13:17:06] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 13:17:06] - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[2022-11-29 13:17:06] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 13:17:06] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 13:17:06] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 13:17:06] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 13:17:06] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 13:17:06] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 13:17:06] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 13:17:06] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 13:17:06] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 13:17:06] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 13:17:06] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 13:17:06] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 13:17:07] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 13:17:07] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 13:17:07] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 13:17:07] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 13:17:07] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 13:17:07] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 13:17:07] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 13:17:07] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 13:17:07] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 13:17:07] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 13:17:07] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 13:17:07] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 13:17:07] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 13:17:07] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 13:17:07] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 13:17:07] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 13:17:07] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 13:17:07] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 13:17:07] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 13:17:07] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 13:17:07] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 13:17:07] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 13:17:07] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 13:17:07] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 13:17:07] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 13:17:07] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 13:17:07] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 13:17:07] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 13:17:07] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 13:17:07] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 13:17:07] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 13:17:07] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 13:17:07] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 13:17:07] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 13:17:07] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 13:17:07] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 13:17:07] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 13:17:07] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 13:17:07] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 13:17:07] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 13:17:07] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 13:17:07] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 13:17:07] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 13:17:07] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 13:17:07] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 13:17:07] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 13:17:07] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 13:17:07] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 13:17:07] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 13:17:07] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 13:17:07] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 13:17:07] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 13:17:07] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 13:17:07] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 13:17:07] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 13:17:07] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 13:17:07] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 13:17:07] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 13:17:07] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 13:17:07] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 13:17:07] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 13:17:07] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 13:17:07] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 13:17:07] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 13:17:07] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 13:17:07] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 13:17:07] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 13:17:07] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 13:17:07] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 13:17:07] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 13:17:07] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 13:17:07] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 13:17:07] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 13:17:07] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 13:17:07] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 13:17:07] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 13:17:07] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 13:17:07] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 13:17:07] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 13:17:07] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 13:17:07] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 13:17:07] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 13:17:07] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 13:17:07] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 13:17:07] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 13:17:07] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 13:17:07] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 13:17:07] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 13:17:07] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 13:17:07] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 13:17:07] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 13:17:07] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 13:17:07] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 13:17:07] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66622dc8
[2022-11-29 13:17:07] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@726207af
[2022-11-29 13:17:07] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@60162438
[2022-11-29 13:17:07] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@33d8126a
[2022-11-29 13:17:07] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@442365b4
[2022-11-29 13:17:07] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@269e4de0
[2022-11-29 13:17:07] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77788aef
[2022-11-29 13:17:07] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4408d28
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 13:17:07] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 13:17:07] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 13:17:07] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 13:17:07] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 13:17:07] - HHH10001003: Autocommit mode: false
[2022-11-29 13:17:07] - Initializing Connection pool with 1 Connections
[2022-11-29 13:17:07] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 13:17:07] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 13:17:07] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 13:17:07] - JDBC version : 4.2
[2022-11-29 13:17:07] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 13:17:07] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 13:17:07] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 13:17:07] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 13:17:08] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@70c9e7f5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2bee6dc9]
[2022-11-29 13:17:08] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 13:17:08] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 13:17:08] - Import with entity name Product
[2022-11-29 13:17:08] - Bind entity com.app.code.Product on table product
[2022-11-29 13:17:08] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 13:17:08] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 13:17:08] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 13:17:08] - building SimpleValue for productId
[2022-11-29 13:17:08] - Building property productId
[2022-11-29 13:17:08] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 13:17:08] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 13:17:08] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 13:17:08] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 13:17:08] - building SimpleValue for ingredients
[2022-11-29 13:17:08] - Building property ingredients
[2022-11-29 13:17:08] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 13:17:08] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 13:17:08] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 13:17:08] - building SimpleValue for price
[2022-11-29 13:17:08] - Building property price
[2022-11-29 13:17:08] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 13:17:08] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 13:17:08] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 13:17:08] - building SimpleValue for title
[2022-11-29 13:17:08] - Building property title
[2022-11-29 13:17:08] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 13:17:08] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 13:17:08] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 13:17:08] - building SimpleValue for weight
[2022-11-29 13:17:08] - Building property weight
[2022-11-29 13:17:08] - Starting fillSimpleValue for productId
[2022-11-29 13:17:08] - Starting fillSimpleValue for ingredients
[2022-11-29 13:17:08] - Starting fillSimpleValue for price
[2022-11-29 13:17:08] - Starting fillSimpleValue for title
[2022-11-29 13:17:08] - Starting fillSimpleValue for weight
[2022-11-29 13:17:08] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 13:17:08] - Building session factory
[2022-11-29 13:17:08] - SessionFactory name : null
[2022-11-29 13:17:08] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 13:17:08] - Automatic session close at end of transaction: disabled
[2022-11-29 13:17:08] - Statistics: disabled
[2022-11-29 13:17:08] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 13:17:08] - Default entity-mode: pojo
[2022-11-29 13:17:08] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 13:17:08] - Allow initialization of lazy state outside session : disabled
[2022-11-29 13:17:08] - Using BatchFetchStyle : LEGACY
[2022-11-29 13:17:08] - Default batch fetch size: -1
[2022-11-29 13:17:08] - Maximum outer join fetch depth: 2
[2022-11-29 13:17:08] - Default null ordering: NONE
[2022-11-29 13:17:08] - Order SQL updates by primary key: disabled
[2022-11-29 13:17:08] - Order SQL inserts for batching: disabled
[2022-11-29 13:17:08] - multi-tenancy strategy : NONE
[2022-11-29 13:17:08] - JTA Track by Thread: enabled
[2022-11-29 13:17:08] - Query language substitutions: {}
[2022-11-29 13:17:08] - Named query checking : enabled
[2022-11-29 13:17:08] - Second-level cache: disabled
[2022-11-29 13:17:08] - Second-level query cache: disabled
[2022-11-29 13:17:08] - Second-level query cache factory: null
[2022-11-29 13:17:08] - Second-level cache region prefix: null
[2022-11-29 13:17:08] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 13:17:08] - Structured second-level cache entries: disabled
[2022-11-29 13:17:08] - Second-level cache direct-reference entries: disabled
[2022-11-29 13:17:08] - Automatic eviction of collection cache: disabled
[2022-11-29 13:17:08] - JDBC batch size: 15
[2022-11-29 13:17:08] - JDBC batch updates for versioned data: enabled
[2022-11-29 13:17:08] - Scrollable result sets: enabled
[2022-11-29 13:17:08] - Wrap result sets: disabled
[2022-11-29 13:17:08] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 13:17:08] - JDBC result set fetch size: null
[2022-11-29 13:17:08] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 13:17:08] - Generate SQL with comments: disabled
[2022-11-29 13:17:08] - JPA compliance - query : disabled
[2022-11-29 13:17:08] - JPA compliance - closed-handling : disabled
[2022-11-29 13:17:08] - JPA compliance - lists : disabled
[2022-11-29 13:17:08] - JPA compliance - transactions : disabled
[2022-11-29 13:17:08] - Session factory constructed with filter configurations : {}
[2022-11-29 13:17:08] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@626f0ff5, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 13:17:08] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 13:17:08] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 13:17:08] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 13:17:08] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 13:17:08] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 13:17:08] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 13:17:08] - Loaded expression factory via original TCCL
[2022-11-29 13:17:08] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 13:17:08] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 13:17:08] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 13:17:08] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 13:17:08] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 13:17:08] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:17:08] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:17:08] - Skipping JACC integration as it was not enabled
[2022-11-29 13:17:08] - Instantiated session factory
[2022-11-29 13:17:08] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@70c9e7f5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@64a60131]
[2022-11-29 13:17:08] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:17:08] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:17:08] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:17:08] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:17:09] - Static SQL for entity: com.app.code.Product
[2022-11-29 13:17:09] -  Version select: select product_id from product where product_id =?
[2022-11-29 13:17:09] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_0_, product_.price as price3_0_, product_.title as title4_0_, product_.weight as weight5_0_ from product product_ where product_.product_id=?
[2022-11-29 13:17:09] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 13:17:09] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 13:17:09] -  Delete 0: delete from product where product_id=?
[2022-11-29 13:17:09] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 13:17:09] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d81ecf]
[2022-11-29 13:17:09] - Visiting attribute path : ingredients
[2022-11-29 13:17:09] - Visiting attribute path : price
[2022-11-29 13:17:09] - Visiting attribute path : title
[2022-11-29 13:17:09] - Visiting attribute path : weight
[2022-11-29 13:17:09] - Building LoadPlan...
[2022-11-29 13:17:09] - processing queryspace <gen:0>
[2022-11-29 13:17:09] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 13:17:09] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:17:09] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d7bc4a4]
[2022-11-29 13:17:09] - Visiting attribute path : ingredients
[2022-11-29 13:17:09] - Visiting attribute path : price
[2022-11-29 13:17:09] - Visiting attribute path : title
[2022-11-29 13:17:09] - Visiting attribute path : weight
[2022-11-29 13:17:09] - Building LoadPlan...
[2022-11-29 13:17:09] - processing queryspace <gen:0>
[2022-11-29 13:17:09] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 13:17:09] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:17:09] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:17:09] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:17:09] - No actions specified; doing nothing
[2022-11-29 13:17:09] - Checking 0 named HQL queries
[2022-11-29 13:17:09] - Checking 0 named SQL queries
[2022-11-29 13:17:09] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@327e2759
[2022-11-29 13:17:09] - Registering SessionFactory: 537d517d-9615-480a-9f0b-24c0e5b6917b (<unnamed>)
[2022-11-29 13:17:09] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 13:17:09] - A sessionFactory was successfully created.
[2022-11-29 13:17:09] - Statistics initialized [enabled=false]
[2022-11-29 13:17:09] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 13:17:09] - Session was successfully created.
[2022-11-29 13:17:09] - begin
[2022-11-29 13:17:09] - Transaction for session was successfully started
[2022-11-29 13:17:09] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 13:17:09] - parse() - HQL: FROM com.app.code.Product
[2022-11-29 13:17:09] - throwQueryException() : no errors
[2022-11-29 13:17:09] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'code'
                \-[IDENT] Node: 'Product'

[2022-11-29 13:17:09] - select << begin [level=1, statement=select]
[2022-11-29 13:17:09] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 13:17:09] - select : finishing up [level=1, statement=select]
[2022-11-29 13:17:09] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
[2022-11-29 13:17:09] - Derived SELECT clause created.
[2022-11-29 13:17:09] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2022-11-29 13:17:09] - Using FROM fragment [product product0_]
[2022-11-29 13:17:09] - select >> end [level=1, statement=select]
[2022-11-29 13:17:09] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}

[2022-11-29 13:17:09] - throwQueryException() : no errors
[2022-11-29 13:17:09] - HQL: FROM com.app.code.Product
[2022-11-29 13:17:09] - SQL: select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 13:17:09] - throwQueryException() : no errors
[2022-11-29 13:17:09] - select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 13:17:09] - Result set row: 0
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 13:17:09] - Result set row: 1
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 13:17:09] - Result set row: 2
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 13:17:09] - Result set row: 3
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 13:17:09] - Result set row: 4
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 13:17:09] - Result set row: 5
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 13:17:09] - Result set row: 6
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#7]
[2022-11-29 13:17:09] - Result set row: 7
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#8]
[2022-11-29 13:17:09] - Result set row: 8
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#9]
[2022-11-29 13:17:09] - Result set row: 9
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#10]
[2022-11-29 13:17:09] - Result set row: 10
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#11]
[2022-11-29 13:17:09] - Result set row: 11
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#12]
[2022-11-29 13:17:09] - Result set row: 12
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#13]
[2022-11-29 13:17:09] - Result set row: 13
[2022-11-29 13:17:09] - Result row: EntityKey[com.app.code.Product#14]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 8
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 330
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 8
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 320
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 5
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 220
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 8
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Lasagna
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 350
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 5
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 350
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 4
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Apple Juice
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 320
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#7]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = pasta, spaghetti, salt, sauce, vegetables
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 6
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Spaghetti
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 260
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#7]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#8]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = chichken, water, rice, salt, sauce, tomatoes, pasta
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 6
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Chicken Soup
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 350
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#8]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#9]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = mango, orange, banana, kiwi, apple, ananas
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 7
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Fruit Salat
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 320
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#9]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#10]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = sugar, blat, eggs, flour, butter, strawberry, cream
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 6
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Cake
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 300
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#10]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#11]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = mentol, water, melisa
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 4
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Tea
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 300
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#11]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#12]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = brazilian coffe
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 4
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Coffee
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `weight` : value = 200
[2022-11-29 13:17:09] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Done materializing entity [com.app.code.Product#12]
[2022-11-29 13:17:09] - Resolving attributes for [com.app.code.Product#13]
[2022-11-29 13:17:09] - Processing attribute `ingredients` : value = crispy, sausage, cucumber, tomatoes, blat, cabbage
[2022-11-29 13:17:09] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `price` : value = 7
[2022-11-29 13:17:09] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:09] - Processing attribute `title` : value = Kebab
[2022-11-29 13:17:09] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:10] - Processing attribute `weight` : value = 350
[2022-11-29 13:17:10] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:10] - Done materializing entity [com.app.code.Product#13]
[2022-11-29 13:17:10] - Resolving attributes for [com.app.code.Product#14]
[2022-11-29 13:17:10] - Processing attribute `ingredients` : value = eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat
[2022-11-29 13:17:10] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:10] - Processing attribute `price` : value = 7
[2022-11-29 13:17:10] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:10] - Processing attribute `title` : value = Taco
[2022-11-29 13:17:10] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:10] - Processing attribute `weight` : value = 340
[2022-11-29 13:17:10] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:10] - Done materializing entity [com.app.code.Product#14]
[2022-11-29 13:17:10] - committing
[2022-11-29 13:17:10] - Processing flush-time cascades
[2022-11-29 13:17:10] - Dirty checking collections
[2022-11-29 13:17:10] - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
[2022-11-29 13:17:10] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:17:10] - Listing entities:
[2022-11-29 13:17:10] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 13:17:10] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 13:17:10] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 13:17:10] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:17:10] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:17:10] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:17:10] - com.app.code.Product{productId=14, price=7, ingredients=eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat, weight=340, title=Taco}
[2022-11-29 13:17:10] - com.app.code.Product{productId=13, price=7, ingredients=crispy, sausage, cucumber, tomatoes, blat, cabbage, weight=350, title=Kebab}
[2022-11-29 13:17:10] - com.app.code.Product{productId=12, price=4, ingredients=brazilian coffe, weight=200, title=Coffee}
[2022-11-29 13:17:10] - com.app.code.Product{productId=11, price=4, ingredients=mentol, water, melisa, weight=300, title=Tea}
[2022-11-29 13:17:10] - com.app.code.Product{productId=10, price=6, ingredients=sugar, blat, eggs, flour, butter, strawberry, cream, weight=300, title=Cake}
[2022-11-29 13:17:10] - com.app.code.Product{productId=9, price=7, ingredients=mango, orange, banana, kiwi, apple, ananas, weight=320, title=Fruit Salat}
[2022-11-29 13:17:10] - com.app.code.Product{productId=8, price=6, ingredients=chichken, water, rice, salt, sauce, tomatoes, pasta, weight=350, title=Chicken Soup}
[2022-11-29 13:17:10] - com.app.code.Product{productId=7, price=6, ingredients=pasta, spaghetti, salt, sauce, vegetables, weight=260, title=Spaghetti}
[2022-11-29 13:17:10] - Initiating JDBC connection release from afterTransaction
[2022-11-29 13:17:10] - Clearing local Synchronizations
[2022-11-29 13:17:10] - Initiating JDBC connection release from afterTransaction
[2022-11-29 13:17:10] - Session with tenant id null was successfully committed
[2022-11-29 13:17:10] - Transaction for session was successfully closed
[2022-11-29 13:17:11] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 13:17:11] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 13:17:11] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 13:17:11] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 13:17:11] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 13:17:11] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 13:17:11] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 13:17:11] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 13:17:11] - Building session factory using provided StandardServiceRegistry
[2022-11-29 13:17:11] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 13:17:11] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 13:17:11] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 13:17:11] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 13:17:11] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 13:17:11] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 13:17:11] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 13:17:11] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 13:17:11] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 13:17:11] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 13:17:11] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 13:17:11] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 13:17:11] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 13:17:11] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 13:17:11] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 13:17:11] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 13:17:11] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 13:17:11] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 13:17:11] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 13:17:11] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 13:17:11] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 13:17:11] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 13:17:11] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 13:17:11] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 13:17:11] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 13:17:11] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 13:17:11] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 13:17:11] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 13:17:11] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 13:17:11] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 13:17:11] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 13:17:11] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 13:17:11] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 13:17:11] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 13:17:11] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 13:17:11] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 13:17:11] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 13:17:11] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 13:17:11] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 13:17:11] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 13:17:11] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 13:17:11] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 13:17:11] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 13:17:11] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 13:17:11] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 13:17:11] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 13:17:11] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 13:17:11] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 13:17:11] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 13:17:11] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 13:17:11] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 13:17:11] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 13:17:11] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 13:17:11] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 13:17:11] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 13:17:11] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 13:17:11] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 13:17:11] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 13:17:11] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 13:17:11] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 13:17:11] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 13:17:11] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 13:17:11] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 13:17:11] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 13:17:11] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 13:17:11] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 13:17:11] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 13:17:11] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 13:17:11] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 13:17:11] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 13:17:11] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 13:17:11] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 13:17:11] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 13:17:11] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 13:17:11] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 13:17:11] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 13:17:11] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 13:17:11] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 13:17:11] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 13:17:11] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 13:17:11] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 13:17:11] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 13:17:11] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 13:17:11] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 13:17:11] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 13:17:11] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 13:17:11] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 13:17:11] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 13:17:11] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 13:17:11] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 13:17:11] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 13:17:11] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 13:17:11] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 13:17:11] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 13:17:11] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 13:17:11] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 13:17:11] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 13:17:11] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 13:17:11] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 13:17:11] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 13:17:11] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 13:17:11] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 13:17:11] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 13:17:11] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 13:17:11] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 13:17:11] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 13:17:11] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 13:17:11] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e734b57
[2022-11-29 13:17:11] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ff081c7
[2022-11-29 13:17:11] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55e16d3f
[2022-11-29 13:17:11] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31c083ba
[2022-11-29 13:17:11] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@257d4f26
[2022-11-29 13:17:11] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e980cf7
[2022-11-29 13:17:11] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@604e168e
[2022-11-29 13:17:11] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5526946e
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 13:17:11] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 13:17:11] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 13:17:11] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 13:17:11] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 13:17:11] - HHH10001003: Autocommit mode: false
[2022-11-29 13:17:11] - Initializing Connection pool with 1 Connections
[2022-11-29 13:17:11] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 13:17:11] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 13:17:11] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 13:17:11] - JDBC version : 4.2
[2022-11-29 13:17:11] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 13:17:11] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 13:17:11] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 13:17:11] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 13:17:11] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b224fb2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5067a431]
[2022-11-29 13:17:11] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 13:17:11] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 13:17:11] - Import with entity name Product
[2022-11-29 13:17:11] - Bind entity com.app.code.Product on table product
[2022-11-29 13:17:11] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 13:17:11] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 13:17:11] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 13:17:11] - building SimpleValue for productId
[2022-11-29 13:17:11] - Building property productId
[2022-11-29 13:17:11] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 13:17:11] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 13:17:11] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 13:17:11] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 13:17:11] - building SimpleValue for ingredients
[2022-11-29 13:17:11] - Building property ingredients
[2022-11-29 13:17:11] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 13:17:11] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 13:17:11] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 13:17:11] - building SimpleValue for price
[2022-11-29 13:17:11] - Building property price
[2022-11-29 13:17:11] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 13:17:11] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 13:17:11] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 13:17:11] - building SimpleValue for title
[2022-11-29 13:17:11] - Building property title
[2022-11-29 13:17:11] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 13:17:11] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 13:17:11] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 13:17:11] - building SimpleValue for weight
[2022-11-29 13:17:11] - Building property weight
[2022-11-29 13:17:11] - Starting fillSimpleValue for productId
[2022-11-29 13:17:11] - Starting fillSimpleValue for ingredients
[2022-11-29 13:17:11] - Starting fillSimpleValue for price
[2022-11-29 13:17:11] - Starting fillSimpleValue for title
[2022-11-29 13:17:11] - Starting fillSimpleValue for weight
[2022-11-29 13:17:11] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 13:17:11] - Building session factory
[2022-11-29 13:17:11] - SessionFactory name : null
[2022-11-29 13:17:11] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 13:17:11] - Automatic session close at end of transaction: disabled
[2022-11-29 13:17:11] - Statistics: disabled
[2022-11-29 13:17:11] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 13:17:11] - Default entity-mode: pojo
[2022-11-29 13:17:11] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 13:17:11] - Allow initialization of lazy state outside session : disabled
[2022-11-29 13:17:11] - Using BatchFetchStyle : LEGACY
[2022-11-29 13:17:11] - Default batch fetch size: -1
[2022-11-29 13:17:11] - Maximum outer join fetch depth: 2
[2022-11-29 13:17:11] - Default null ordering: NONE
[2022-11-29 13:17:11] - Order SQL updates by primary key: disabled
[2022-11-29 13:17:11] - Order SQL inserts for batching: disabled
[2022-11-29 13:17:11] - multi-tenancy strategy : NONE
[2022-11-29 13:17:11] - JTA Track by Thread: enabled
[2022-11-29 13:17:11] - Query language substitutions: {}
[2022-11-29 13:17:11] - Named query checking : enabled
[2022-11-29 13:17:11] - Second-level cache: disabled
[2022-11-29 13:17:11] - Second-level query cache: disabled
[2022-11-29 13:17:11] - Second-level query cache factory: null
[2022-11-29 13:17:11] - Second-level cache region prefix: null
[2022-11-29 13:17:11] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 13:17:11] - Structured second-level cache entries: disabled
[2022-11-29 13:17:11] - Second-level cache direct-reference entries: disabled
[2022-11-29 13:17:11] - Automatic eviction of collection cache: disabled
[2022-11-29 13:17:11] - JDBC batch size: 15
[2022-11-29 13:17:11] - JDBC batch updates for versioned data: enabled
[2022-11-29 13:17:11] - Scrollable result sets: enabled
[2022-11-29 13:17:11] - Wrap result sets: disabled
[2022-11-29 13:17:11] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 13:17:11] - JDBC result set fetch size: null
[2022-11-29 13:17:11] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 13:17:11] - Generate SQL with comments: disabled
[2022-11-29 13:17:11] - JPA compliance - query : disabled
[2022-11-29 13:17:11] - JPA compliance - closed-handling : disabled
[2022-11-29 13:17:11] - JPA compliance - lists : disabled
[2022-11-29 13:17:11] - JPA compliance - transactions : disabled
[2022-11-29 13:17:11] - Session factory constructed with filter configurations : {}
[2022-11-29 13:17:11] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4809b332, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 13:17:11] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 13:17:11] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 13:17:11] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 13:17:11] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 13:17:11] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 13:17:11] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 13:17:11] - Loaded expression factory via original TCCL
[2022-11-29 13:17:11] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 13:17:11] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 13:17:11] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 13:17:11] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 13:17:11] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 13:17:11] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:17:11] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:17:11] - Skipping JACC integration as it was not enabled
[2022-11-29 13:17:11] - Instantiated session factory
[2022-11-29 13:17:11] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b224fb2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6453d396]
[2022-11-29 13:17:11] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:17:11] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:17:11] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 13:17:11] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 13:17:11] - Static SQL for entity: com.app.code.Product
[2022-11-29 13:17:11] -  Version select: select product_id from product where product_id =?
[2022-11-29 13:17:11] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_0_, product_.price as price3_0_, product_.title as title4_0_, product_.weight as weight5_0_ from product product_ where product_.product_id=?
[2022-11-29 13:17:11] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 13:17:11] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 13:17:11] -  Delete 0: delete from product where product_id=?
[2022-11-29 13:17:11] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 13:17:11] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b80ec4]
[2022-11-29 13:17:11] - Visiting attribute path : ingredients
[2022-11-29 13:17:11] - Visiting attribute path : price
[2022-11-29 13:17:11] - Visiting attribute path : title
[2022-11-29 13:17:11] - Visiting attribute path : weight
[2022-11-29 13:17:11] - Building LoadPlan...
[2022-11-29 13:17:11] - processing queryspace <gen:0>
[2022-11-29 13:17:11] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 13:17:11] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:17:11] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5987f2e]
[2022-11-29 13:17:11] - Visiting attribute path : ingredients
[2022-11-29 13:17:11] - Visiting attribute path : price
[2022-11-29 13:17:11] - Visiting attribute path : title
[2022-11-29 13:17:11] - Visiting attribute path : weight
[2022-11-29 13:17:11] - Building LoadPlan...
[2022-11-29 13:17:11] - processing queryspace <gen:0>
[2022-11-29 13:17:11] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 13:17:11] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:17:11] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:17:11] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 13:17:11] - No actions specified; doing nothing
[2022-11-29 13:17:11] - Checking 0 named HQL queries
[2022-11-29 13:17:11] - Checking 0 named SQL queries
[2022-11-29 13:17:11] - Registering SessionFactory: 68183fa2-5766-4351-b051-9475ca7947cc (<unnamed>)
[2022-11-29 13:17:11] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 13:17:11] - A sessionFactory was successfully created.
[2022-11-29 13:17:11] - Statistics initialized [enabled=false]
[2022-11-29 13:17:11] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 13:17:11] - Session was successfully created.
[2022-11-29 13:17:11] - begin
[2022-11-29 13:17:11] - Transaction for session was successfully started
[2022-11-29 13:17:11] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 13:17:11] - parse() - HQL: FROM com.app.code.Product
[2022-11-29 13:17:11] - throwQueryException() : no errors
[2022-11-29 13:17:11] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'code'
                \-[IDENT] Node: 'Product'

[2022-11-29 13:17:11] - select << begin [level=1, statement=select]
[2022-11-29 13:17:11] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 13:17:11] - select : finishing up [level=1, statement=select]
[2022-11-29 13:17:11] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
[2022-11-29 13:17:11] - Derived SELECT clause created.
[2022-11-29 13:17:11] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2022-11-29 13:17:11] - Using FROM fragment [product product0_]
[2022-11-29 13:17:11] - select >> end [level=1, statement=select]
[2022-11-29 13:17:11] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}

[2022-11-29 13:17:11] - throwQueryException() : no errors
[2022-11-29 13:17:11] - HQL: FROM com.app.code.Product
[2022-11-29 13:17:11] - SQL: select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 13:17:11] - throwQueryException() : no errors
[2022-11-29 13:17:11] - select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 13:17:11] - Result set row: 0
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 13:17:11] - Result set row: 1
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 13:17:11] - Result set row: 2
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 13:17:11] - Result set row: 3
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 13:17:11] - Result set row: 4
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 13:17:11] - Result set row: 5
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 13:17:11] - Result set row: 6
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#7]
[2022-11-29 13:17:11] - Result set row: 7
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#8]
[2022-11-29 13:17:11] - Result set row: 8
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#9]
[2022-11-29 13:17:11] - Result set row: 9
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#10]
[2022-11-29 13:17:11] - Result set row: 10
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#11]
[2022-11-29 13:17:11] - Result set row: 11
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#12]
[2022-11-29 13:17:11] - Result set row: 12
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#13]
[2022-11-29 13:17:11] - Result set row: 13
[2022-11-29 13:17:11] - Result row: EntityKey[com.app.code.Product#14]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 8
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 330
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 8
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 320
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 5
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 220
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 8
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Lasagna
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 350
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 5
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 350
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 4
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Apple Juice
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 320
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#7]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = pasta, spaghetti, salt, sauce, vegetables
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 6
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Spaghetti
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 260
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#7]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#8]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = chichken, water, rice, salt, sauce, tomatoes, pasta
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 6
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Chicken Soup
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 350
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#8]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#9]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = mango, orange, banana, kiwi, apple, ananas
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 7
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Fruit Salat
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 320
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#9]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#10]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = sugar, blat, eggs, flour, butter, strawberry, cream
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 6
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Cake
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 300
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#10]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#11]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = mentol, water, melisa
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 4
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Tea
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 300
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#11]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#12]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = brazilian coffe
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 4
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Coffee
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 200
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#12]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#13]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = crispy, sausage, cucumber, tomatoes, blat, cabbage
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 7
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Kebab
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 350
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#13]
[2022-11-29 13:17:11] - Resolving attributes for [com.app.code.Product#14]
[2022-11-29 13:17:11] - Processing attribute `ingredients` : value = eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat
[2022-11-29 13:17:11] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `price` : value = 7
[2022-11-29 13:17:11] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `title` : value = Taco
[2022-11-29 13:17:11] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Processing attribute `weight` : value = 340
[2022-11-29 13:17:11] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 13:17:11] - Done materializing entity [com.app.code.Product#14]
[2022-11-29 13:17:11] - committing
[2022-11-29 13:17:11] - Processing flush-time cascades
[2022-11-29 13:17:11] - Dirty checking collections
[2022-11-29 13:17:11] - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
[2022-11-29 13:17:11] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 13:17:11] - Listing entities:
[2022-11-29 13:17:11] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 13:17:11] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 13:17:11] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 13:17:11] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 13:17:11] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 13:17:11] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 13:17:11] - com.app.code.Product{productId=14, price=7, ingredients=eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat, weight=340, title=Taco}
[2022-11-29 13:17:11] - com.app.code.Product{productId=13, price=7, ingredients=crispy, sausage, cucumber, tomatoes, blat, cabbage, weight=350, title=Kebab}
[2022-11-29 13:17:11] - com.app.code.Product{productId=12, price=4, ingredients=brazilian coffe, weight=200, title=Coffee}
[2022-11-29 13:17:11] - com.app.code.Product{productId=11, price=4, ingredients=mentol, water, melisa, weight=300, title=Tea}
[2022-11-29 13:17:11] - com.app.code.Product{productId=10, price=6, ingredients=sugar, blat, eggs, flour, butter, strawberry, cream, weight=300, title=Cake}
[2022-11-29 13:17:11] - com.app.code.Product{productId=9, price=7, ingredients=mango, orange, banana, kiwi, apple, ananas, weight=320, title=Fruit Salat}
[2022-11-29 13:17:11] - com.app.code.Product{productId=8, price=6, ingredients=chichken, water, rice, salt, sauce, tomatoes, pasta, weight=350, title=Chicken Soup}
[2022-11-29 13:17:11] - com.app.code.Product{productId=7, price=6, ingredients=pasta, spaghetti, salt, sauce, vegetables, weight=260, title=Spaghetti}
[2022-11-29 13:17:11] - Initiating JDBC connection release from afterTransaction
[2022-11-29 13:17:11] - Clearing local Synchronizations
[2022-11-29 13:17:11] - Initiating JDBC connection release from afterTransaction
[2022-11-29 13:17:11] - Session with tenant id null was successfully committed
[2022-11-29 13:17:11] - Transaction for session was successfully closed
[2022-11-29 14:44:13] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:44:16] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:44:37] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:44:37] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:44:37] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:44:37] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:44:37] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:44:37] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:44:37] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:44:37] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:44:37] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:44:37] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:44:37] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:44:37] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:44:37] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:44:37] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:44:37] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 14:44:37] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 14:44:37] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 14:44:37] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:44:37] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:44:37] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:44:37] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:44:37] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:44:37] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:44:37] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:44:37] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:44:37] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:44:37] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:44:37] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:44:37] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:44:37] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:44:37] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:44:37] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:44:37] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:44:37] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:44:37] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:44:37] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:44:37] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:44:37] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:44:37] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:44:37] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:44:37] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:44:37] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:44:37] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:44:37] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:44:37] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 14:44:37] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 14:44:37] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:44:37] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:44:37] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:44:37] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:44:37] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:44:37] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:44:37] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:44:37] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:44:37] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:44:37] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:44:37] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:44:37] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:44:37] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:44:37] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:44:37] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:44:37] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:44:37] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:44:37] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:44:37] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:44:37] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:44:37] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:44:37] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:44:37] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:44:37] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:44:37] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:44:37] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 14:44:37] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:44:37] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:44:37] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:44:37] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 14:44:37] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 14:44:37] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:44:37] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:44:37] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:44:37] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:44:37] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:44:37] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:44:37] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:44:37] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:44:37] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:44:37] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:44:37] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 14:44:37] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:44:37] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:44:37] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:44:37] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:44:37] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:44:37] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:44:37] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 14:44:37] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 14:44:37] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:44:37] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:44:37] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:44:37] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:44:37] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:44:37] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:44:37] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 14:44:37] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 14:44:37] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:44:37] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:44:37] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 14:44:37] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:44:37] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:44:37] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:44:37] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:44:37] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 14:44:37] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 14:44:37] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 14:44:37] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:44:37] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:44:37] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13321a8c
[2022-11-29 14:44:37] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@62b6b7d
[2022-11-29 14:44:37] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67a94e9c
[2022-11-29 14:44:37] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14d11c0f
[2022-11-29 14:44:37] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@17b48263
[2022-11-29 14:44:37] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a19636b
[2022-11-29 14:44:37] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6769191a
[2022-11-29 14:44:37] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7bc4509c
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:44:37] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:44:37] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:44:37] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:44:37] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:44:37] - HHH10001003: Autocommit mode: false
[2022-11-29 14:44:37] - Initializing Connection pool with 1 Connections
[2022-11-29 14:44:37] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:44:37] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:44:37] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:44:37] - JDBC version : 4.2
[2022-11-29 14:44:37] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:44:37] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:44:37] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:44:37] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:44:37] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6be4212f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@572419c6]
[2022-11-29 14:44:37] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 14:44:37] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:44:37] - Import with entity name Product
[2022-11-29 14:44:37] - Bind entity com.app.code.Product on table product
[2022-11-29 14:44:37] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:37] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 14:44:37] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 14:44:37] - building SimpleValue for productId
[2022-11-29 14:44:37] - Building property productId
[2022-11-29 14:44:37] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 14:44:37] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:37] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 14:44:37] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 14:44:37] - building SimpleValue for ingredients
[2022-11-29 14:44:37] - Building property ingredients
[2022-11-29 14:44:37] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:37] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 14:44:37] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 14:44:37] - building SimpleValue for price
[2022-11-29 14:44:37] - Building property price
[2022-11-29 14:44:37] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:37] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 14:44:37] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 14:44:37] - building SimpleValue for title
[2022-11-29 14:44:37] - Building property title
[2022-11-29 14:44:37] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:37] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 14:44:37] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 14:44:37] - building SimpleValue for weight
[2022-11-29 14:44:37] - Building property weight
[2022-11-29 14:44:37] - Starting fillSimpleValue for productId
[2022-11-29 14:44:37] - Starting fillSimpleValue for ingredients
[2022-11-29 14:44:37] - Starting fillSimpleValue for price
[2022-11-29 14:44:37] - Starting fillSimpleValue for title
[2022-11-29 14:44:37] - Starting fillSimpleValue for weight
[2022-11-29 14:44:37] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 14:44:37] - Building session factory
[2022-11-29 14:44:37] - SessionFactory name : null
[2022-11-29 14:44:37] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:44:37] - Automatic session close at end of transaction: disabled
[2022-11-29 14:44:37] - Statistics: disabled
[2022-11-29 14:44:37] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:44:37] - Default entity-mode: pojo
[2022-11-29 14:44:37] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:44:37] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:44:37] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:44:37] - Default batch fetch size: -1
[2022-11-29 14:44:37] - Maximum outer join fetch depth: 2
[2022-11-29 14:44:37] - Default null ordering: NONE
[2022-11-29 14:44:37] - Order SQL updates by primary key: disabled
[2022-11-29 14:44:37] - Order SQL inserts for batching: disabled
[2022-11-29 14:44:37] - multi-tenancy strategy : NONE
[2022-11-29 14:44:37] - JTA Track by Thread: enabled
[2022-11-29 14:44:37] - Query language substitutions: {}
[2022-11-29 14:44:37] - Named query checking : enabled
[2022-11-29 14:44:37] - Second-level cache: disabled
[2022-11-29 14:44:37] - Second-level query cache: disabled
[2022-11-29 14:44:37] - Second-level query cache factory: null
[2022-11-29 14:44:37] - Second-level cache region prefix: null
[2022-11-29 14:44:37] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:44:37] - Structured second-level cache entries: disabled
[2022-11-29 14:44:37] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:44:37] - Automatic eviction of collection cache: disabled
[2022-11-29 14:44:37] - JDBC batch size: 15
[2022-11-29 14:44:37] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:44:37] - Scrollable result sets: enabled
[2022-11-29 14:44:37] - Wrap result sets: disabled
[2022-11-29 14:44:37] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:44:37] - JDBC result set fetch size: null
[2022-11-29 14:44:37] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:44:37] - Generate SQL with comments: disabled
[2022-11-29 14:44:37] - JPA compliance - query : disabled
[2022-11-29 14:44:37] - JPA compliance - closed-handling : disabled
[2022-11-29 14:44:37] - JPA compliance - lists : disabled
[2022-11-29 14:44:37] - JPA compliance - transactions : disabled
[2022-11-29 14:44:37] - Session factory constructed with filter configurations : {}
[2022-11-29 14:44:37] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@72feabda, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:44:37] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:44:37] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:44:37] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:44:37] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:44:37] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:44:37] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:44:37] - Loaded expression factory via original TCCL
[2022-11-29 14:44:37] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:44:37] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:44:37] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:44:37] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:44:37] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:44:37] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:44:37] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:44:37] - Skipping JACC integration as it was not enabled
[2022-11-29 14:44:37] - Instantiated session factory
[2022-11-29 14:44:37] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6be4212f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@10e9d22f]
[2022-11-29 14:44:37] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:44:37] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:44:37] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:44:37] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:44:37] - Static SQL for entity: com.app.code.Product
[2022-11-29 14:44:37] -  Version select: select product_id from product where product_id =?
[2022-11-29 14:44:37] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_0_, product_.price as price3_0_, product_.title as title4_0_, product_.weight as weight5_0_ from product product_ where product_.product_id=?
[2022-11-29 14:44:37] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 14:44:37] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 14:44:37] -  Delete 0: delete from product where product_id=?
[2022-11-29 14:44:37] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 14:44:37] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a20f7b8]
[2022-11-29 14:44:37] - Visiting attribute path : ingredients
[2022-11-29 14:44:37] - Visiting attribute path : price
[2022-11-29 14:44:37] - Visiting attribute path : title
[2022-11-29 14:44:37] - Visiting attribute path : weight
[2022-11-29 14:44:37] - Building LoadPlan...
[2022-11-29 14:44:37] - processing queryspace <gen:0>
[2022-11-29 14:44:37] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:44:37] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:44:37] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3929c90a]
[2022-11-29 14:44:37] - Visiting attribute path : ingredients
[2022-11-29 14:44:37] - Visiting attribute path : price
[2022-11-29 14:44:37] - Visiting attribute path : title
[2022-11-29 14:44:37] - Visiting attribute path : weight
[2022-11-29 14:44:37] - Building LoadPlan...
[2022-11-29 14:44:37] - processing queryspace <gen:0>
[2022-11-29 14:44:37] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:44:37] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:44:37] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:44:37] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:44:37] - No actions specified; doing nothing
[2022-11-29 14:44:37] - Checking 0 named HQL queries
[2022-11-29 14:44:37] - Checking 0 named SQL queries
[2022-11-29 14:44:37] - Registering SessionFactory: 83705bf5-f790-473a-8b8b-294f7a4fd6c0 (<unnamed>)
[2022-11-29 14:44:37] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:44:37] - A sessionFactory was successfully created.
[2022-11-29 14:44:37] - Statistics initialized [enabled=false]
[2022-11-29 14:44:37] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:44:37] - Session was successfully created.
[2022-11-29 14:44:37] - begin
[2022-11-29 14:44:37] - Transaction for session was successfully started
[2022-11-29 14:44:37] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 14:44:37] - parse() - HQL: FROM com.app.code.Product
[2022-11-29 14:44:37] - throwQueryException() : no errors
[2022-11-29 14:44:37] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'code'
                \-[IDENT] Node: 'Product'

[2022-11-29 14:44:37] - select << begin [level=1, statement=select]
[2022-11-29 14:44:37] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 14:44:37] - select : finishing up [level=1, statement=select]
[2022-11-29 14:44:37] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
[2022-11-29 14:44:37] - Derived SELECT clause created.
[2022-11-29 14:44:37] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2022-11-29 14:44:37] - Using FROM fragment [product product0_]
[2022-11-29 14:44:37] - select >> end [level=1, statement=select]
[2022-11-29 14:44:37] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}

[2022-11-29 14:44:37] - throwQueryException() : no errors
[2022-11-29 14:44:37] - HQL: FROM com.app.code.Product
[2022-11-29 14:44:37] - SQL: select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:44:37] - throwQueryException() : no errors
[2022-11-29 14:44:37] - select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:44:37] - Result set row: 0
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 14:44:37] - Result set row: 1
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 14:44:37] - Result set row: 2
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 14:44:37] - Result set row: 3
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 14:44:37] - Result set row: 4
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 14:44:37] - Result set row: 5
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 14:44:37] - Result set row: 6
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#7]
[2022-11-29 14:44:37] - Result set row: 7
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#8]
[2022-11-29 14:44:37] - Result set row: 8
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#9]
[2022-11-29 14:44:37] - Result set row: 9
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#10]
[2022-11-29 14:44:37] - Result set row: 10
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#11]
[2022-11-29 14:44:37] - Result set row: 11
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#12]
[2022-11-29 14:44:37] - Result set row: 12
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#13]
[2022-11-29 14:44:37] - Result set row: 13
[2022-11-29 14:44:37] - Result row: EntityKey[com.app.code.Product#14]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 8
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 330
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 8
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 320
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 5
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 220
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 8
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Lasagna
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 350
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 5
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 350
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 4
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Apple Juice
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 320
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#7]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = pasta, spaghetti, salt, sauce, vegetables
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 6
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Spaghetti
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 260
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#7]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#8]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = chichken, water, rice, salt, sauce, tomatoes, pasta
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 6
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Chicken Soup
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 350
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#8]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#9]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = mango, orange, banana, kiwi, apple, ananas
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 7
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Fruit Salat
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 320
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#9]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#10]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = sugar, blat, eggs, flour, butter, strawberry, cream
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 6
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Cake
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 300
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#10]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#11]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = mentol, water, melisa
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 4
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Tea
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 300
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#11]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#12]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = brazilian coffe
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 4
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Coffee
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 200
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#12]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#13]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = crispy, sausage, cucumber, tomatoes, blat, cabbage
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 7
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Kebab
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 350
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#13]
[2022-11-29 14:44:37] - Resolving attributes for [com.app.code.Product#14]
[2022-11-29 14:44:37] - Processing attribute `ingredients` : value = eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat
[2022-11-29 14:44:37] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `price` : value = 7
[2022-11-29 14:44:37] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `title` : value = Taco
[2022-11-29 14:44:37] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Processing attribute `weight` : value = 340
[2022-11-29 14:44:37] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:37] - Done materializing entity [com.app.code.Product#14]
[2022-11-29 14:44:37] - committing
[2022-11-29 14:44:37] - Processing flush-time cascades
[2022-11-29 14:44:37] - Dirty checking collections
[2022-11-29 14:44:37] - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
[2022-11-29 14:44:37] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:44:37] - Listing entities:
[2022-11-29 14:44:37] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 14:44:37] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 14:44:37] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 14:44:37] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 14:44:37] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 14:44:37] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 14:44:37] - com.app.code.Product{productId=14, price=7, ingredients=eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat, weight=340, title=Taco}
[2022-11-29 14:44:37] - com.app.code.Product{productId=13, price=7, ingredients=crispy, sausage, cucumber, tomatoes, blat, cabbage, weight=350, title=Kebab}
[2022-11-29 14:44:37] - com.app.code.Product{productId=12, price=4, ingredients=brazilian coffe, weight=200, title=Coffee}
[2022-11-29 14:44:37] - com.app.code.Product{productId=11, price=4, ingredients=mentol, water, melisa, weight=300, title=Tea}
[2022-11-29 14:44:37] - com.app.code.Product{productId=10, price=6, ingredients=sugar, blat, eggs, flour, butter, strawberry, cream, weight=300, title=Cake}
[2022-11-29 14:44:37] - com.app.code.Product{productId=9, price=7, ingredients=mango, orange, banana, kiwi, apple, ananas, weight=320, title=Fruit Salat}
[2022-11-29 14:44:37] - com.app.code.Product{productId=8, price=6, ingredients=chichken, water, rice, salt, sauce, tomatoes, pasta, weight=350, title=Chicken Soup}
[2022-11-29 14:44:37] - com.app.code.Product{productId=7, price=6, ingredients=pasta, spaghetti, salt, sauce, vegetables, weight=260, title=Spaghetti}
[2022-11-29 14:44:37] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:44:37] - Clearing local Synchronizations
[2022-11-29 14:44:37] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:44:37] - Session with tenant id null was successfully committed
[2022-11-29 14:44:37] - Transaction for session was successfully closed
[2022-11-29 14:44:54] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:44:54] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:44:54] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:44:54] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:44:54] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:44:54] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:44:54] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:44:54] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:44:54] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:44:54] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:44:54] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:44:54] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:44:54] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:44:54] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:44:54] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 14:44:54] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 14:44:54] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 14:44:54] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:44:54] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:44:54] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:44:54] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:44:54] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:44:54] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:44:54] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:44:54] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:44:54] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:44:54] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:44:54] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:44:54] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:44:54] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:44:54] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:44:54] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:44:54] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:44:54] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:44:54] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:44:54] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:44:54] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:44:54] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:44:54] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:44:54] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:44:54] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:44:54] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:44:54] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:44:54] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:44:54] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 14:44:54] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 14:44:54] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:44:54] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:44:54] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:44:54] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:44:54] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:44:54] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:44:54] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:44:54] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:44:54] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:44:54] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:44:54] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:44:54] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:44:54] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:44:54] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:44:54] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:44:54] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:44:54] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:44:54] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:44:54] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:44:54] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:44:54] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:44:54] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:44:54] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:44:54] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:44:54] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:44:54] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 14:44:54] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:44:54] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:44:54] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:44:54] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 14:44:54] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 14:44:54] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:44:54] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:44:54] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:44:54] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:44:54] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:44:54] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:44:54] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:44:54] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:44:54] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:44:54] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:44:54] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 14:44:54] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:44:54] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:44:54] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:44:54] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:44:54] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:44:54] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:44:54] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 14:44:54] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 14:44:54] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:44:54] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:44:54] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:44:54] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:44:54] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:44:54] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:44:54] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 14:44:54] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 14:44:54] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:44:54] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:44:54] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 14:44:54] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:44:54] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:44:54] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:44:54] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:44:54] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 14:44:54] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 14:44:54] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 14:44:54] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:44:54] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:44:54] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d22b62c
[2022-11-29 14:44:54] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@47f588b6
[2022-11-29 14:44:54] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5595e218
[2022-11-29 14:44:54] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6cea5593
[2022-11-29 14:44:54] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@44d10df4
[2022-11-29 14:44:54] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f8a8de0
[2022-11-29 14:44:54] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55753f2b
[2022-11-29 14:44:54] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6b8daedb
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:44:54] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:44:54] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:44:54] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:44:54] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:44:54] - HHH10001003: Autocommit mode: false
[2022-11-29 14:44:54] - Initializing Connection pool with 1 Connections
[2022-11-29 14:44:54] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:44:54] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:44:54] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:44:54] - JDBC version : 4.2
[2022-11-29 14:44:54] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:44:54] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:44:54] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:44:54] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:44:54] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ecc0407] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31208aa4]
[2022-11-29 14:44:54] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:44:54] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:44:54] - Import with entity name User
[2022-11-29 14:44:54] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:44:54] - building SimpleValue for user_id
[2022-11-29 14:44:54] - Building property user_id
[2022-11-29 14:44:54] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:44:54] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - Building property customer
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:44:54] - building SimpleValue for password
[2022-11-29 14:44:54] - Building property password
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:44:54] - building SimpleValue for username
[2022-11-29 14:44:54] - Building property username
[2022-11-29 14:44:54] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:44:54] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:44:54] - Import with entity name Customer
[2022-11-29 14:44:54] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:44:54] - building SimpleValue for id
[2022-11-29 14:44:54] - Building property id
[2022-11-29 14:44:54] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:44:54] - building SimpleValue for address
[2022-11-29 14:44:54] - Building property address
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:44:54] - building SimpleValue for email
[2022-11-29 14:44:54] - Building property email
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:44:54] - building SimpleValue for firstName
[2022-11-29 14:44:54] - Building property firstName
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:44:54] - building SimpleValue for job
[2022-11-29 14:44:54] - Building property job
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:44:54] - building SimpleValue for lastName
[2022-11-29 14:44:54] - Building property lastName
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:44:54] - building SimpleValue for location
[2022-11-29 14:44:54] - Building property location
[2022-11-29 14:44:54] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:54] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:44:54] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:44:54] - building SimpleValue for orders
[2022-11-29 14:44:54] - Building property orders
[2022-11-29 14:44:54] - Starting fillSimpleValue for user_id
[2022-11-29 14:44:54] - Starting fillSimpleValue for password
[2022-11-29 14:44:54] - Starting fillSimpleValue for username
[2022-11-29 14:44:54] - Starting fillSimpleValue for id
[2022-11-29 14:44:54] - Starting fillSimpleValue for address
[2022-11-29 14:44:54] - Starting fillSimpleValue for email
[2022-11-29 14:44:54] - Starting fillSimpleValue for firstName
[2022-11-29 14:44:54] - Starting fillSimpleValue for job
[2022-11-29 14:44:54] - Starting fillSimpleValue for lastName
[2022-11-29 14:44:54] - Starting fillSimpleValue for location
[2022-11-29 14:44:54] - Starting fillSimpleValue for orders
[2022-11-29 14:44:54] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:44:54] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:44:54] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:44:54] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:44:54] - Building session factory
[2022-11-29 14:44:54] - SessionFactory name : null
[2022-11-29 14:44:54] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:44:54] - Automatic session close at end of transaction: disabled
[2022-11-29 14:44:54] - Statistics: disabled
[2022-11-29 14:44:54] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:44:54] - Default entity-mode: pojo
[2022-11-29 14:44:54] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:44:54] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:44:54] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:44:54] - Default batch fetch size: -1
[2022-11-29 14:44:54] - Maximum outer join fetch depth: 2
[2022-11-29 14:44:54] - Default null ordering: NONE
[2022-11-29 14:44:54] - Order SQL updates by primary key: disabled
[2022-11-29 14:44:54] - Order SQL inserts for batching: disabled
[2022-11-29 14:44:54] - multi-tenancy strategy : NONE
[2022-11-29 14:44:54] - JTA Track by Thread: enabled
[2022-11-29 14:44:54] - Query language substitutions: {}
[2022-11-29 14:44:54] - Named query checking : enabled
[2022-11-29 14:44:54] - Second-level cache: disabled
[2022-11-29 14:44:54] - Second-level query cache: disabled
[2022-11-29 14:44:54] - Second-level query cache factory: null
[2022-11-29 14:44:54] - Second-level cache region prefix: null
[2022-11-29 14:44:54] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:44:54] - Structured second-level cache entries: disabled
[2022-11-29 14:44:54] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:44:54] - Automatic eviction of collection cache: disabled
[2022-11-29 14:44:54] - JDBC batch size: 15
[2022-11-29 14:44:54] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:44:54] - Scrollable result sets: enabled
[2022-11-29 14:44:54] - Wrap result sets: disabled
[2022-11-29 14:44:54] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:44:54] - JDBC result set fetch size: null
[2022-11-29 14:44:54] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:44:54] - Generate SQL with comments: disabled
[2022-11-29 14:44:54] - JPA compliance - query : disabled
[2022-11-29 14:44:54] - JPA compliance - closed-handling : disabled
[2022-11-29 14:44:54] - JPA compliance - lists : disabled
[2022-11-29 14:44:54] - JPA compliance - transactions : disabled
[2022-11-29 14:44:54] - Session factory constructed with filter configurations : {}
[2022-11-29 14:44:54] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5d7b0ed0, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:44:54] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:44:54] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:44:54] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:44:54] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:44:54] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:44:54] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:44:54] - Loaded expression factory via original TCCL
[2022-11-29 14:44:54] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:44:54] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:44:54] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:44:54] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:44:54] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:44:54] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:44:54] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:44:54] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:44:54] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:44:54] - Skipping JACC integration as it was not enabled
[2022-11-29 14:44:54] - Instantiated session factory
[2022-11-29 14:44:54] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ecc0407] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26e02003]
[2022-11-29 14:44:54] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:44:54] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:44:54] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:44:54] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:44:54] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:44:54] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:44:54] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:44:54] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:44:54] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:44:54] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:44:54] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:44:54] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:44:54] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:44:54] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:44:54] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:44:54] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632ebf3]
[2022-11-29 14:44:54] - Visiting attribute path : address
[2022-11-29 14:44:54] - Visiting attribute path : email
[2022-11-29 14:44:54] - Visiting attribute path : firstName
[2022-11-29 14:44:54] - Visiting attribute path : job
[2022-11-29 14:44:54] - Visiting attribute path : lastName
[2022-11-29 14:44:54] - Visiting attribute path : location
[2022-11-29 14:44:54] - Visiting attribute path : orders
[2022-11-29 14:44:54] - Building LoadPlan...
[2022-11-29 14:44:54] - processing queryspace <gen:0>
[2022-11-29 14:44:54] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:44:54] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:44:54] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@716f61b5]
[2022-11-29 14:44:54] - Visiting attribute path : address
[2022-11-29 14:44:54] - Visiting attribute path : email
[2022-11-29 14:44:54] - Visiting attribute path : firstName
[2022-11-29 14:44:54] - Visiting attribute path : job
[2022-11-29 14:44:54] - Visiting attribute path : lastName
[2022-11-29 14:44:54] - Visiting attribute path : location
[2022-11-29 14:44:54] - Visiting attribute path : orders
[2022-11-29 14:44:54] - Building LoadPlan...
[2022-11-29 14:44:54] - processing queryspace <gen:0>
[2022-11-29 14:44:54] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:44:54] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:44:54] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:44:54] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:44:54] - Static SQL for entity: com.app.code.User
[2022-11-29 14:44:54] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:44:54] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:44:54] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:44:54] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:44:54] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:44:54] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:44:54] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8ce573]
[2022-11-29 14:44:54] - Visiting attribute path : customer
[2022-11-29 14:44:54] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2547646a]
[2022-11-29 14:44:54] - Visiting attribute path : customer.address
[2022-11-29 14:44:54] - Visiting attribute path : customer.email
[2022-11-29 14:44:54] - Visiting attribute path : customer.firstName
[2022-11-29 14:44:54] - Visiting attribute path : customer.job
[2022-11-29 14:44:54] - Visiting attribute path : customer.lastName
[2022-11-29 14:44:54] - Visiting attribute path : customer.location
[2022-11-29 14:44:54] - Visiting attribute path : customer.orders
[2022-11-29 14:44:54] - Visiting attribute path : password
[2022-11-29 14:44:54] - Visiting attribute path : username
[2022-11-29 14:44:54] - Building LoadPlan...
[2022-11-29 14:44:54] - processing queryspace <gen:0>
[2022-11-29 14:44:54] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:44:54] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:44:54] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cd52ce3]
[2022-11-29 14:44:54] - Visiting attribute path : customer
[2022-11-29 14:44:54] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50326c2f]
[2022-11-29 14:44:54] - Visiting attribute path : customer.address
[2022-11-29 14:44:54] - Visiting attribute path : customer.email
[2022-11-29 14:44:54] - Visiting attribute path : customer.firstName
[2022-11-29 14:44:54] - Visiting attribute path : customer.job
[2022-11-29 14:44:54] - Visiting attribute path : customer.lastName
[2022-11-29 14:44:54] - Visiting attribute path : customer.location
[2022-11-29 14:44:54] - Visiting attribute path : customer.orders
[2022-11-29 14:44:54] - Visiting attribute path : password
[2022-11-29 14:44:54] - Visiting attribute path : username
[2022-11-29 14:44:54] - Building LoadPlan...
[2022-11-29 14:44:54] - processing queryspace <gen:0>
[2022-11-29 14:44:54] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:44:54] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:44:54] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:44:54] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:44:54] - No actions specified; doing nothing
[2022-11-29 14:44:54] - Checking 0 named HQL queries
[2022-11-29 14:44:54] - Checking 0 named SQL queries
[2022-11-29 14:44:54] - Registering SessionFactory: 0bf2e4d2-dda8-43d4-8517-b32dae5b30b1 (<unnamed>)
[2022-11-29 14:44:54] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:44:54] - A sessionFactory was successfully created.
[2022-11-29 14:44:54] - Statistics initialized [enabled=false]
[2022-11-29 14:44:54] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:44:54] - Session  was successfully created.
[2022-11-29 14:44:54] - begin
[2022-11-29 14:44:54] - Transaction for session was successfully started
[2022-11-29 14:44:54] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 14:44:54] - parse() - HQL: FROM com.app.code.User WHERE username = ?0 AND password = ?1
[2022-11-29 14:44:54] - throwQueryException() : no errors
[2022-11-29 14:44:54] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '1'

[2022-11-29 14:44:54] - select << begin [level=1, statement=select]
[2022-11-29 14:44:54] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 14:44:54] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:44:54] - getDataType() : username -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:44:54] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 14:44:54] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:44:54] - getDataType() : password -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:44:54] - Resolved : {synthetic-alias}.password -> user0_.password
[2022-11-29 14:44:54] - select : finishing up [level=1, statement=select]
[2022-11-29 14:44:54] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( AND ( = ( user0_.username {synthetic-alias} username ) ? ) ( = ( user0_.password {synthetic-alias} password ) ? ) ) ) )
[2022-11-29 14:44:54] - Derived SELECT clause created.
[2022-11-29 14:44:54] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | path: {synthetic-alias}.username
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  |  | originalText: {synthetic-alias}
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: username
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.app.code.User)
             | path: {synthetic-alias}.password
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.app.code.User)
             |  | originalText: {synthetic-alias}
             |  \-IdentNode
             |    persister: null
             |    originalText: password
             \-ParameterNode

[2022-11-29 14:44:54] - Using FROM fragment [user_detail user0_]
[2022-11-29 14:44:54] - select >> end [level=1, statement=select]
[2022-11-29 14:44:54] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@23baf381}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=user0_,className=com.app.code.User,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@23baf381}

[2022-11-29 14:44:54] - throwQueryException() : no errors
[2022-11-29 14:44:54] - HQL: FROM com.app.code.User WHERE username = ?0 AND password = ?1
[2022-11-29 14:44:54] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=? and user0_.password=?
[2022-11-29 14:44:54] - throwQueryException() : no errors
[2022-11-29 14:44:54] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=? and user0_.password=?
[2022-11-29 14:44:54] - No entity found for query
[2022-11-29 14:44:54] - Transaction for session with tenant id null was successfully closed
[2022-11-29 14:44:54] - Fail Logging. Invalid user or password for username kerbecs
[2022-11-29 14:44:58] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:44:58] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:44:58] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:44:58] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:44:58] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:44:58] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:44:58] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:44:58] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:44:58] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:44:58] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:44:58] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:44:58] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:44:58] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:44:58] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:44:58] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 14:44:58] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 14:44:58] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 14:44:58] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:44:58] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:44:58] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:44:58] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:44:58] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:44:58] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:44:58] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:44:58] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:44:58] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:44:58] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:44:58] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:44:58] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:44:58] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:44:58] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:44:58] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:44:58] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:44:58] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:44:58] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:44:58] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:44:58] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:44:58] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:44:58] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:44:58] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:44:58] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:44:58] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:44:58] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:44:58] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:44:58] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 14:44:58] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 14:44:58] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:44:58] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:44:58] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:44:58] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:44:58] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:44:58] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:44:58] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:44:58] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:44:58] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:44:58] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:44:58] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:44:58] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:44:58] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:44:58] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:44:58] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:44:58] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:44:58] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:44:58] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:44:58] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:44:58] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:44:58] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:44:58] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:44:58] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:44:58] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:44:58] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:44:58] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 14:44:58] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:44:58] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:44:58] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:44:58] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 14:44:58] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 14:44:58] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:44:58] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:44:58] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:44:58] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:44:58] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:44:58] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:44:58] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:44:58] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:44:58] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:44:58] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:44:58] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 14:44:58] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:44:58] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:44:58] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:44:58] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:44:58] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:44:58] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:44:58] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 14:44:58] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 14:44:58] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:44:58] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:44:58] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:44:58] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:44:58] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:44:58] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:44:58] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 14:44:58] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 14:44:58] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:44:58] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:44:58] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 14:44:58] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:44:58] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:44:58] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:44:58] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:44:58] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 14:44:58] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 14:44:58] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 14:44:58] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:44:58] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:44:58] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@470868f6
[2022-11-29 14:44:58] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f17b541
[2022-11-29 14:44:58] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3973038b
[2022-11-29 14:44:58] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6d515484
[2022-11-29 14:44:58] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@691ade00
[2022-11-29 14:44:58] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1bd5c3df
[2022-11-29 14:44:58] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a9be475
[2022-11-29 14:44:58] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d0972d6
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:44:58] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:44:58] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:44:58] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:44:58] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:44:58] - HHH10001003: Autocommit mode: false
[2022-11-29 14:44:58] - Initializing Connection pool with 1 Connections
[2022-11-29 14:44:58] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:44:58] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:44:58] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:44:58] - JDBC version : 4.2
[2022-11-29 14:44:58] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:44:58] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:44:58] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:44:58] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:44:58] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@225b90c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ba1ec5f]
[2022-11-29 14:44:58] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:44:58] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:44:58] - Import with entity name User
[2022-11-29 14:44:58] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:44:58] - building SimpleValue for user_id
[2022-11-29 14:44:58] - Building property user_id
[2022-11-29 14:44:58] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:44:58] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - Building property customer
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:44:58] - building SimpleValue for password
[2022-11-29 14:44:58] - Building property password
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:44:58] - building SimpleValue for username
[2022-11-29 14:44:58] - Building property username
[2022-11-29 14:44:58] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:44:58] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:44:58] - Import with entity name Customer
[2022-11-29 14:44:58] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:44:58] - building SimpleValue for id
[2022-11-29 14:44:58] - Building property id
[2022-11-29 14:44:58] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:44:58] - building SimpleValue for address
[2022-11-29 14:44:58] - Building property address
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:44:58] - building SimpleValue for email
[2022-11-29 14:44:58] - Building property email
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:44:58] - building SimpleValue for firstName
[2022-11-29 14:44:58] - Building property firstName
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:44:58] - building SimpleValue for job
[2022-11-29 14:44:58] - Building property job
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:44:58] - building SimpleValue for lastName
[2022-11-29 14:44:58] - Building property lastName
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:44:58] - building SimpleValue for location
[2022-11-29 14:44:58] - Building property location
[2022-11-29 14:44:58] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:44:58] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:44:58] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:44:58] - building SimpleValue for orders
[2022-11-29 14:44:58] - Building property orders
[2022-11-29 14:44:58] - Starting fillSimpleValue for user_id
[2022-11-29 14:44:58] - Starting fillSimpleValue for password
[2022-11-29 14:44:58] - Starting fillSimpleValue for username
[2022-11-29 14:44:58] - Starting fillSimpleValue for id
[2022-11-29 14:44:58] - Starting fillSimpleValue for address
[2022-11-29 14:44:58] - Starting fillSimpleValue for email
[2022-11-29 14:44:58] - Starting fillSimpleValue for firstName
[2022-11-29 14:44:58] - Starting fillSimpleValue for job
[2022-11-29 14:44:58] - Starting fillSimpleValue for lastName
[2022-11-29 14:44:58] - Starting fillSimpleValue for location
[2022-11-29 14:44:58] - Starting fillSimpleValue for orders
[2022-11-29 14:44:58] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:44:58] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:44:58] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:44:58] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:44:58] - Building session factory
[2022-11-29 14:44:58] - SessionFactory name : null
[2022-11-29 14:44:58] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:44:58] - Automatic session close at end of transaction: disabled
[2022-11-29 14:44:58] - Statistics: disabled
[2022-11-29 14:44:58] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:44:58] - Default entity-mode: pojo
[2022-11-29 14:44:58] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:44:58] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:44:58] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:44:58] - Default batch fetch size: -1
[2022-11-29 14:44:58] - Maximum outer join fetch depth: 2
[2022-11-29 14:44:58] - Default null ordering: NONE
[2022-11-29 14:44:58] - Order SQL updates by primary key: disabled
[2022-11-29 14:44:58] - Order SQL inserts for batching: disabled
[2022-11-29 14:44:58] - multi-tenancy strategy : NONE
[2022-11-29 14:44:58] - JTA Track by Thread: enabled
[2022-11-29 14:44:58] - Query language substitutions: {}
[2022-11-29 14:44:58] - Named query checking : enabled
[2022-11-29 14:44:58] - Second-level cache: disabled
[2022-11-29 14:44:58] - Second-level query cache: disabled
[2022-11-29 14:44:58] - Second-level query cache factory: null
[2022-11-29 14:44:58] - Second-level cache region prefix: null
[2022-11-29 14:44:58] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:44:58] - Structured second-level cache entries: disabled
[2022-11-29 14:44:58] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:44:58] - Automatic eviction of collection cache: disabled
[2022-11-29 14:44:58] - JDBC batch size: 15
[2022-11-29 14:44:58] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:44:58] - Scrollable result sets: enabled
[2022-11-29 14:44:58] - Wrap result sets: disabled
[2022-11-29 14:44:58] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:44:58] - JDBC result set fetch size: null
[2022-11-29 14:44:58] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:44:58] - Generate SQL with comments: disabled
[2022-11-29 14:44:58] - JPA compliance - query : disabled
[2022-11-29 14:44:58] - JPA compliance - closed-handling : disabled
[2022-11-29 14:44:58] - JPA compliance - lists : disabled
[2022-11-29 14:44:58] - JPA compliance - transactions : disabled
[2022-11-29 14:44:58] - Session factory constructed with filter configurations : {}
[2022-11-29 14:44:58] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7e8e3872, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:44:58] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:44:58] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:44:58] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:44:58] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:44:58] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:44:58] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:44:58] - Loaded expression factory via original TCCL
[2022-11-29 14:44:58] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:44:58] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:44:58] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:44:58] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:44:58] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:44:58] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:44:58] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:44:58] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:44:58] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:44:58] - Skipping JACC integration as it was not enabled
[2022-11-29 14:44:58] - Instantiated session factory
[2022-11-29 14:44:58] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@225b90c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@592e4a5b]
[2022-11-29 14:44:58] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:44:58] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:44:58] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:44:58] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:44:58] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:44:58] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:44:58] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:44:58] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:44:58] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:44:58] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:44:58] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:44:58] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:44:58] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:44:58] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:44:58] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:44:58] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f2ee484]
[2022-11-29 14:44:58] - Visiting attribute path : address
[2022-11-29 14:44:58] - Visiting attribute path : email
[2022-11-29 14:44:58] - Visiting attribute path : firstName
[2022-11-29 14:44:58] - Visiting attribute path : job
[2022-11-29 14:44:58] - Visiting attribute path : lastName
[2022-11-29 14:44:58] - Visiting attribute path : location
[2022-11-29 14:44:58] - Visiting attribute path : orders
[2022-11-29 14:44:58] - Building LoadPlan...
[2022-11-29 14:44:58] - processing queryspace <gen:0>
[2022-11-29 14:44:58] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:44:58] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:44:58] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1ed45b]
[2022-11-29 14:44:58] - Visiting attribute path : address
[2022-11-29 14:44:58] - Visiting attribute path : email
[2022-11-29 14:44:58] - Visiting attribute path : firstName
[2022-11-29 14:44:58] - Visiting attribute path : job
[2022-11-29 14:44:58] - Visiting attribute path : lastName
[2022-11-29 14:44:58] - Visiting attribute path : location
[2022-11-29 14:44:58] - Visiting attribute path : orders
[2022-11-29 14:44:58] - Building LoadPlan...
[2022-11-29 14:44:58] - processing queryspace <gen:0>
[2022-11-29 14:44:58] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:44:58] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:44:58] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:44:58] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:44:58] - Static SQL for entity: com.app.code.User
[2022-11-29 14:44:58] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:44:58] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:44:58] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:44:58] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:44:58] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:44:58] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:44:58] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27dd4fd5]
[2022-11-29 14:44:58] - Visiting attribute path : customer
[2022-11-29 14:44:58] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fcec059]
[2022-11-29 14:44:58] - Visiting attribute path : customer.address
[2022-11-29 14:44:58] - Visiting attribute path : customer.email
[2022-11-29 14:44:58] - Visiting attribute path : customer.firstName
[2022-11-29 14:44:58] - Visiting attribute path : customer.job
[2022-11-29 14:44:58] - Visiting attribute path : customer.lastName
[2022-11-29 14:44:58] - Visiting attribute path : customer.location
[2022-11-29 14:44:58] - Visiting attribute path : customer.orders
[2022-11-29 14:44:58] - Visiting attribute path : password
[2022-11-29 14:44:58] - Visiting attribute path : username
[2022-11-29 14:44:58] - Building LoadPlan...
[2022-11-29 14:44:58] - processing queryspace <gen:0>
[2022-11-29 14:44:58] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:44:58] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:44:58] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514f564c]
[2022-11-29 14:44:58] - Visiting attribute path : customer
[2022-11-29 14:44:58] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cc38d93]
[2022-11-29 14:44:58] - Visiting attribute path : customer.address
[2022-11-29 14:44:58] - Visiting attribute path : customer.email
[2022-11-29 14:44:58] - Visiting attribute path : customer.firstName
[2022-11-29 14:44:58] - Visiting attribute path : customer.job
[2022-11-29 14:44:58] - Visiting attribute path : customer.lastName
[2022-11-29 14:44:58] - Visiting attribute path : customer.location
[2022-11-29 14:44:58] - Visiting attribute path : customer.orders
[2022-11-29 14:44:58] - Visiting attribute path : password
[2022-11-29 14:44:58] - Visiting attribute path : username
[2022-11-29 14:44:58] - Building LoadPlan...
[2022-11-29 14:44:58] - processing queryspace <gen:0>
[2022-11-29 14:44:58] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:44:58] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:44:58] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:44:58] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:44:58] - No actions specified; doing nothing
[2022-11-29 14:44:58] - Checking 0 named HQL queries
[2022-11-29 14:44:58] - Checking 0 named SQL queries
[2022-11-29 14:44:58] - Registering SessionFactory: f67495be-c855-4c69-9032-e4e28ccadf55 (<unnamed>)
[2022-11-29 14:44:58] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:44:58] - A sessionFactory was successfully created.
[2022-11-29 14:44:58] - Statistics initialized [enabled=false]
[2022-11-29 14:44:58] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:44:58] - Session  was successfully created.
[2022-11-29 14:44:58] - begin
[2022-11-29 14:44:58] - Transaction for session was successfully started
[2022-11-29 14:44:58] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 14:44:58] - parse() - HQL: FROM com.app.code.User WHERE username = ?0 AND password = ?1
[2022-11-29 14:44:58] - throwQueryException() : no errors
[2022-11-29 14:44:58] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '1'

[2022-11-29 14:44:58] - select << begin [level=1, statement=select]
[2022-11-29 14:44:58] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 14:44:58] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:44:58] - getDataType() : username -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:44:58] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 14:44:58] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:44:58] - getDataType() : password -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:44:58] - Resolved : {synthetic-alias}.password -> user0_.password
[2022-11-29 14:44:58] - select : finishing up [level=1, statement=select]
[2022-11-29 14:44:58] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( AND ( = ( user0_.username {synthetic-alias} username ) ? ) ( = ( user0_.password {synthetic-alias} password ) ? ) ) ) )
[2022-11-29 14:44:58] - Derived SELECT clause created.
[2022-11-29 14:44:58] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | path: {synthetic-alias}.username
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  |  | originalText: {synthetic-alias}
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: username
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.app.code.User)
             | path: {synthetic-alias}.password
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.app.code.User)
             |  | originalText: {synthetic-alias}
             |  \-IdentNode
             |    persister: null
             |    originalText: password
             \-ParameterNode

[2022-11-29 14:44:58] - Using FROM fragment [user_detail user0_]
[2022-11-29 14:44:58] - select >> end [level=1, statement=select]
[2022-11-29 14:44:58] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@23baf381}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=user0_,className=com.app.code.User,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@23baf381}

[2022-11-29 14:44:58] - throwQueryException() : no errors
[2022-11-29 14:44:58] - HQL: FROM com.app.code.User WHERE username = ?0 AND password = ?1
[2022-11-29 14:44:58] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=? and user0_.password=?
[2022-11-29 14:44:58] - throwQueryException() : no errors
[2022-11-29 14:44:58] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=? and user0_.password=?
[2022-11-29 14:44:58] - Result set row: 0
[2022-11-29 14:44:58] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 14:44:58] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 14:44:58] - Processing attribute `customer` : value = 50
[2022-11-29 14:44:58] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:58] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:44:58] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 14:44:58] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:44:58] - Processing attribute `address` : value = Asachi 2A
[2022-11-29 14:44:58] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:58] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:44:58] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:58] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:44:58] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:58] - Processing attribute `job` : value = NONE
[2022-11-29 14:44:58] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:58] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:44:58] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:58] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:44:58] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:58] - Processing attribute `orders` : value = 9
[2022-11-29 14:44:58] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:58] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:44:58] - Done entity load : com.app.code.Customer#50
[2022-11-29 14:44:58] - Processing attribute `password` : value = test123
[2022-11-29 14:44:58] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:58] - Processing attribute `username` : value = kerbecs
[2022-11-29 14:44:58] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 14:44:58] - Done materializing entity [com.app.code.User#28]
[2022-11-29 14:44:58] - committing
[2022-11-29 14:44:58] - Processing flush-time cascades
[2022-11-29 14:44:58] - Dirty checking collections
[2022-11-29 14:44:58] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 14:44:58] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:44:58] - Listing entities:
[2022-11-29 14:44:58] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:44:58] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:44:58] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:44:58] - Clearing local Synchronizations
[2022-11-29 14:44:58] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:44:58] - Session was successfully committed
[2022-11-29 14:44:58] - Transaction for session with tenant id null was successfully closed
[2022-11-29 14:44:58] - User kerbecs was successfully logged.
[2022-11-29 14:45:03] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:45:03] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:45:03] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:45:03] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:45:03] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:45:03] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:45:03] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:45:03] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:45:03] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:45:03] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:45:03] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:45:03] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:45:03] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:45:03] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:45:03] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 14:45:03] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 14:45:03] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 14:45:03] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:45:03] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:45:03] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:45:03] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:45:03] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:45:03] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:45:03] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:45:03] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:45:03] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:45:03] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:45:03] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:45:03] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:45:03] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:45:03] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:45:03] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:45:03] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:45:03] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:45:03] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:45:03] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:45:03] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:45:03] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:45:03] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:45:03] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:45:03] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:45:03] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:45:03] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:45:03] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:45:03] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 14:45:03] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 14:45:03] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:45:03] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:45:03] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:45:03] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:45:03] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:45:03] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:45:03] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:45:03] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:45:03] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:45:03] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:45:03] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:45:03] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:45:03] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:45:03] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:45:03] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:45:03] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:45:03] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:45:03] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:45:03] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:45:03] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:45:03] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:45:03] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:45:03] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:45:03] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:45:03] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:45:03] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 14:45:03] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:45:03] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:45:03] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:45:03] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 14:45:03] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 14:45:03] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:45:03] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:45:03] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:45:03] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:45:03] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:45:03] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:45:03] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:45:03] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:45:03] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:45:03] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:45:03] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 14:45:03] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:45:03] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:45:03] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:45:03] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:45:03] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:45:03] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:45:03] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 14:45:03] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 14:45:03] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:45:03] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:45:03] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:45:03] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:45:03] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:45:03] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:45:03] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 14:45:03] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 14:45:03] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:45:03] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:45:03] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 14:45:03] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:45:03] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:45:03] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:45:03] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:45:03] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 14:45:03] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 14:45:03] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 14:45:03] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:45:03] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:45:03] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@247f91db
[2022-11-29 14:45:03] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51814b9b
[2022-11-29 14:45:03] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2336a6f0
[2022-11-29 14:45:03] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6306e83a
[2022-11-29 14:45:03] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b2f4cc8
[2022-11-29 14:45:03] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60a905a5
[2022-11-29 14:45:03] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76be2e66
[2022-11-29 14:45:03] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@222d5fb3
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:45:03] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:45:03] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:45:03] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:45:03] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:45:03] - HHH10001003: Autocommit mode: false
[2022-11-29 14:45:03] - Initializing Connection pool with 1 Connections
[2022-11-29 14:45:03] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:45:03] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:45:03] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:45:03] - JDBC version : 4.2
[2022-11-29 14:45:03] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:45:03] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:45:03] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:45:03] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:45:03] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@142129de] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@47b2a15d]
[2022-11-29 14:45:03] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 14:45:03] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:45:03] - Import with entity name Product
[2022-11-29 14:45:03] - Bind entity com.app.code.Product on table product
[2022-11-29 14:45:03] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:03] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 14:45:03] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 14:45:03] - building SimpleValue for productId
[2022-11-29 14:45:03] - Building property productId
[2022-11-29 14:45:03] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 14:45:03] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:03] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 14:45:03] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 14:45:03] - building SimpleValue for ingredients
[2022-11-29 14:45:03] - Building property ingredients
[2022-11-29 14:45:03] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:03] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 14:45:03] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 14:45:03] - building SimpleValue for price
[2022-11-29 14:45:03] - Building property price
[2022-11-29 14:45:03] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:03] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 14:45:03] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 14:45:03] - building SimpleValue for title
[2022-11-29 14:45:03] - Building property title
[2022-11-29 14:45:03] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:03] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 14:45:03] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 14:45:03] - building SimpleValue for weight
[2022-11-29 14:45:03] - Building property weight
[2022-11-29 14:45:03] - Starting fillSimpleValue for productId
[2022-11-29 14:45:03] - Starting fillSimpleValue for ingredients
[2022-11-29 14:45:03] - Starting fillSimpleValue for price
[2022-11-29 14:45:03] - Starting fillSimpleValue for title
[2022-11-29 14:45:03] - Starting fillSimpleValue for weight
[2022-11-29 14:45:03] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 14:45:03] - Building session factory
[2022-11-29 14:45:03] - SessionFactory name : null
[2022-11-29 14:45:03] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:45:03] - Automatic session close at end of transaction: disabled
[2022-11-29 14:45:03] - Statistics: disabled
[2022-11-29 14:45:03] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:45:03] - Default entity-mode: pojo
[2022-11-29 14:45:03] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:45:03] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:45:03] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:45:03] - Default batch fetch size: -1
[2022-11-29 14:45:03] - Maximum outer join fetch depth: 2
[2022-11-29 14:45:03] - Default null ordering: NONE
[2022-11-29 14:45:03] - Order SQL updates by primary key: disabled
[2022-11-29 14:45:03] - Order SQL inserts for batching: disabled
[2022-11-29 14:45:03] - multi-tenancy strategy : NONE
[2022-11-29 14:45:03] - JTA Track by Thread: enabled
[2022-11-29 14:45:03] - Query language substitutions: {}
[2022-11-29 14:45:03] - Named query checking : enabled
[2022-11-29 14:45:03] - Second-level cache: disabled
[2022-11-29 14:45:03] - Second-level query cache: disabled
[2022-11-29 14:45:03] - Second-level query cache factory: null
[2022-11-29 14:45:03] - Second-level cache region prefix: null
[2022-11-29 14:45:03] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:45:03] - Structured second-level cache entries: disabled
[2022-11-29 14:45:03] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:45:03] - Automatic eviction of collection cache: disabled
[2022-11-29 14:45:03] - JDBC batch size: 15
[2022-11-29 14:45:03] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:45:03] - Scrollable result sets: enabled
[2022-11-29 14:45:03] - Wrap result sets: disabled
[2022-11-29 14:45:03] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:45:03] - JDBC result set fetch size: null
[2022-11-29 14:45:03] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:45:03] - Generate SQL with comments: disabled
[2022-11-29 14:45:03] - JPA compliance - query : disabled
[2022-11-29 14:45:03] - JPA compliance - closed-handling : disabled
[2022-11-29 14:45:03] - JPA compliance - lists : disabled
[2022-11-29 14:45:03] - JPA compliance - transactions : disabled
[2022-11-29 14:45:03] - Session factory constructed with filter configurations : {}
[2022-11-29 14:45:03] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@61a8d3cf, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:45:03] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:45:03] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:45:03] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:45:03] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:45:03] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:45:03] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:45:03] - Loaded expression factory via original TCCL
[2022-11-29 14:45:03] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:45:03] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:45:03] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:45:03] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:45:03] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:45:03] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:45:03] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:45:03] - Skipping JACC integration as it was not enabled
[2022-11-29 14:45:03] - Instantiated session factory
[2022-11-29 14:45:03] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@142129de] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6b8be604]
[2022-11-29 14:45:03] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:45:03] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:45:03] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:45:03] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:45:03] - Static SQL for entity: com.app.code.Product
[2022-11-29 14:45:03] -  Version select: select product_id from product where product_id =?
[2022-11-29 14:45:03] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_0_, product_.price as price3_0_, product_.title as title4_0_, product_.weight as weight5_0_ from product product_ where product_.product_id=?
[2022-11-29 14:45:03] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 14:45:03] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 14:45:03] -  Delete 0: delete from product where product_id=?
[2022-11-29 14:45:03] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 14:45:03] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5184b13f]
[2022-11-29 14:45:03] - Visiting attribute path : ingredients
[2022-11-29 14:45:03] - Visiting attribute path : price
[2022-11-29 14:45:03] - Visiting attribute path : title
[2022-11-29 14:45:03] - Visiting attribute path : weight
[2022-11-29 14:45:03] - Building LoadPlan...
[2022-11-29 14:45:03] - processing queryspace <gen:0>
[2022-11-29 14:45:03] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:45:03] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:45:03] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d7a673]
[2022-11-29 14:45:03] - Visiting attribute path : ingredients
[2022-11-29 14:45:03] - Visiting attribute path : price
[2022-11-29 14:45:03] - Visiting attribute path : title
[2022-11-29 14:45:03] - Visiting attribute path : weight
[2022-11-29 14:45:03] - Building LoadPlan...
[2022-11-29 14:45:03] - processing queryspace <gen:0>
[2022-11-29 14:45:03] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:45:03] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:45:03] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:45:03] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:45:03] - No actions specified; doing nothing
[2022-11-29 14:45:03] - Checking 0 named HQL queries
[2022-11-29 14:45:03] - Checking 0 named SQL queries
[2022-11-29 14:45:03] - Registering SessionFactory: 1bab3707-bd3c-4f59-bf20-3ea61ba32792 (<unnamed>)
[2022-11-29 14:45:03] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:45:03] - A sessionFactory was successfully created.
[2022-11-29 14:45:03] - Statistics initialized [enabled=false]
[2022-11-29 14:45:03] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:45:03] - Session was successfully created.
[2022-11-29 14:45:03] - begin
[2022-11-29 14:45:03] - Transaction for session was successfully started
[2022-11-29 14:45:03] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 14:45:03] - parse() - HQL: FROM com.app.code.Product
[2022-11-29 14:45:03] - throwQueryException() : no errors
[2022-11-29 14:45:03] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'code'
                \-[IDENT] Node: 'Product'

[2022-11-29 14:45:03] - select << begin [level=1, statement=select]
[2022-11-29 14:45:03] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 14:45:03] - select : finishing up [level=1, statement=select]
[2022-11-29 14:45:03] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
[2022-11-29 14:45:03] - Derived SELECT clause created.
[2022-11-29 14:45:03] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2022-11-29 14:45:03] - Using FROM fragment [product product0_]
[2022-11-29 14:45:03] - select >> end [level=1, statement=select]
[2022-11-29 14:45:03] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}

[2022-11-29 14:45:03] - throwQueryException() : no errors
[2022-11-29 14:45:03] - HQL: FROM com.app.code.Product
[2022-11-29 14:45:03] - SQL: select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:45:03] - throwQueryException() : no errors
[2022-11-29 14:45:03] - select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:45:03] - Result set row: 0
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 14:45:03] - Result set row: 1
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 14:45:03] - Result set row: 2
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 14:45:03] - Result set row: 3
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 14:45:03] - Result set row: 4
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 14:45:03] - Result set row: 5
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 14:45:03] - Result set row: 6
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#7]
[2022-11-29 14:45:03] - Result set row: 7
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#8]
[2022-11-29 14:45:03] - Result set row: 8
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#9]
[2022-11-29 14:45:03] - Result set row: 9
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#10]
[2022-11-29 14:45:03] - Result set row: 10
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#11]
[2022-11-29 14:45:03] - Result set row: 11
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#12]
[2022-11-29 14:45:03] - Result set row: 12
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#13]
[2022-11-29 14:45:03] - Result set row: 13
[2022-11-29 14:45:03] - Result row: EntityKey[com.app.code.Product#14]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 8
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 330
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 8
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 320
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 5
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 220
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 8
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Lasagna
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 350
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 5
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 350
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 4
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Apple Juice
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 320
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#7]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = pasta, spaghetti, salt, sauce, vegetables
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 6
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Spaghetti
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 260
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#7]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#8]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = chichken, water, rice, salt, sauce, tomatoes, pasta
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 6
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Chicken Soup
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 350
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#8]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#9]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = mango, orange, banana, kiwi, apple, ananas
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 7
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Fruit Salat
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 320
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#9]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#10]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = sugar, blat, eggs, flour, butter, strawberry, cream
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 6
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Cake
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 300
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#10]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#11]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = mentol, water, melisa
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 4
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Tea
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 300
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#11]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#12]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = brazilian coffe
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 4
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Coffee
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 200
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#12]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#13]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = crispy, sausage, cucumber, tomatoes, blat, cabbage
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 7
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Kebab
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 350
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#13]
[2022-11-29 14:45:03] - Resolving attributes for [com.app.code.Product#14]
[2022-11-29 14:45:03] - Processing attribute `ingredients` : value = eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat
[2022-11-29 14:45:03] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `price` : value = 7
[2022-11-29 14:45:03] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `title` : value = Taco
[2022-11-29 14:45:03] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Processing attribute `weight` : value = 340
[2022-11-29 14:45:03] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:03] - Done materializing entity [com.app.code.Product#14]
[2022-11-29 14:45:03] - committing
[2022-11-29 14:45:03] - Processing flush-time cascades
[2022-11-29 14:45:03] - Dirty checking collections
[2022-11-29 14:45:03] - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
[2022-11-29 14:45:03] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:45:03] - Listing entities:
[2022-11-29 14:45:03] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 14:45:03] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 14:45:03] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 14:45:03] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 14:45:03] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 14:45:03] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 14:45:03] - com.app.code.Product{productId=14, price=7, ingredients=eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat, weight=340, title=Taco}
[2022-11-29 14:45:03] - com.app.code.Product{productId=13, price=7, ingredients=crispy, sausage, cucumber, tomatoes, blat, cabbage, weight=350, title=Kebab}
[2022-11-29 14:45:03] - com.app.code.Product{productId=12, price=4, ingredients=brazilian coffe, weight=200, title=Coffee}
[2022-11-29 14:45:03] - com.app.code.Product{productId=11, price=4, ingredients=mentol, water, melisa, weight=300, title=Tea}
[2022-11-29 14:45:03] - com.app.code.Product{productId=10, price=6, ingredients=sugar, blat, eggs, flour, butter, strawberry, cream, weight=300, title=Cake}
[2022-11-29 14:45:03] - com.app.code.Product{productId=9, price=7, ingredients=mango, orange, banana, kiwi, apple, ananas, weight=320, title=Fruit Salat}
[2022-11-29 14:45:03] - com.app.code.Product{productId=8, price=6, ingredients=chichken, water, rice, salt, sauce, tomatoes, pasta, weight=350, title=Chicken Soup}
[2022-11-29 14:45:03] - com.app.code.Product{productId=7, price=6, ingredients=pasta, spaghetti, salt, sauce, vegetables, weight=260, title=Spaghetti}
[2022-11-29 14:45:03] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:45:03] - Clearing local Synchronizations
[2022-11-29 14:45:03] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:45:03] - Session with tenant id null was successfully committed
[2022-11-29 14:45:03] - Transaction for session was successfully closed
[2022-11-29 14:45:07] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:45:10] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:45:10] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:45:10] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:45:10] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:45:10] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:45:10] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:45:10] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:45:10] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:45:10] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:45:10] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:45:10] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:45:10] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:45:10] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:45:10] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:45:10] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 14:45:10] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 14:45:10] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 14:45:10] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:45:10] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:45:10] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:45:10] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:45:10] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:45:10] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:45:10] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:45:10] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:45:10] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:45:10] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:45:10] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:45:10] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:45:10] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:45:10] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:45:10] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:45:10] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:45:10] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:45:10] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:45:10] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:45:10] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:45:10] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:45:10] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:45:10] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:45:10] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:45:10] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:45:10] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:45:10] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:45:10] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 14:45:10] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 14:45:10] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:45:10] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:45:10] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:45:10] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:45:10] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:45:10] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:45:10] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:45:10] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:45:10] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:45:10] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:45:10] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:45:10] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:45:10] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:45:10] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:45:10] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:45:10] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:45:10] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:45:10] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:45:10] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:45:10] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:45:10] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:45:10] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:45:10] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:45:10] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:45:10] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:45:10] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 14:45:10] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:45:10] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:45:10] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:45:10] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 14:45:10] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 14:45:10] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:45:10] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:45:10] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:45:10] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:45:10] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:45:10] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:45:10] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:45:10] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:45:10] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:45:10] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:45:10] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 14:45:10] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:45:10] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:45:10] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:45:10] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:45:10] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:45:10] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:45:10] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 14:45:10] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 14:45:10] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:45:10] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:45:10] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:45:10] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:45:10] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:45:10] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:45:10] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 14:45:10] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 14:45:10] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:45:10] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:45:10] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 14:45:10] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:45:10] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:45:10] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:45:10] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:45:10] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 14:45:10] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 14:45:10] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 14:45:10] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:45:10] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:45:10] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1f0f412f
[2022-11-29 14:45:10] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@266d774c
[2022-11-29 14:45:10] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@44be8c58
[2022-11-29 14:45:10] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e4b1f24
[2022-11-29 14:45:10] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4ba825fb
[2022-11-29 14:45:10] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6b2fcd5
[2022-11-29 14:45:10] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@365e6c17
[2022-11-29 14:45:10] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@409ae7c7
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:45:10] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:45:10] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:45:10] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:45:10] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:45:10] - HHH10001003: Autocommit mode: false
[2022-11-29 14:45:10] - Initializing Connection pool with 1 Connections
[2022-11-29 14:45:10] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:45:10] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:45:10] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:45:10] - JDBC version : 4.2
[2022-11-29 14:45:10] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:45:10] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:45:10] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:45:10] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:45:10] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54f2f42f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1c97799e]
[2022-11-29 14:45:10] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:45:10] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:45:10] - Import with entity name Customer
[2022-11-29 14:45:10] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:45:10] - building SimpleValue for id
[2022-11-29 14:45:10] - Building property id
[2022-11-29 14:45:10] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:45:10] - building SimpleValue for address
[2022-11-29 14:45:10] - Building property address
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:45:10] - building SimpleValue for email
[2022-11-29 14:45:10] - Building property email
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:45:10] - building SimpleValue for firstName
[2022-11-29 14:45:10] - Building property firstName
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:45:10] - building SimpleValue for job
[2022-11-29 14:45:10] - Building property job
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:45:10] - building SimpleValue for lastName
[2022-11-29 14:45:10] - Building property lastName
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:45:10] - building SimpleValue for location
[2022-11-29 14:45:10] - Building property location
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:45:10] - building SimpleValue for orders
[2022-11-29 14:45:10] - Building property orders
[2022-11-29 14:45:10] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:45:10] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:45:10] - Import with entity name User
[2022-11-29 14:45:10] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:45:10] - building SimpleValue for user_id
[2022-11-29 14:45:10] - Building property user_id
[2022-11-29 14:45:10] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:45:10] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - Building property customer
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:45:10] - building SimpleValue for password
[2022-11-29 14:45:10] - Building property password
[2022-11-29 14:45:10] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:10] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:45:10] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:45:10] - building SimpleValue for username
[2022-11-29 14:45:10] - Building property username
[2022-11-29 14:45:10] - Starting fillSimpleValue for id
[2022-11-29 14:45:10] - Starting fillSimpleValue for address
[2022-11-29 14:45:10] - Starting fillSimpleValue for email
[2022-11-29 14:45:10] - Starting fillSimpleValue for firstName
[2022-11-29 14:45:10] - Starting fillSimpleValue for job
[2022-11-29 14:45:10] - Starting fillSimpleValue for lastName
[2022-11-29 14:45:10] - Starting fillSimpleValue for location
[2022-11-29 14:45:10] - Starting fillSimpleValue for orders
[2022-11-29 14:45:10] - Starting fillSimpleValue for user_id
[2022-11-29 14:45:10] - Starting fillSimpleValue for password
[2022-11-29 14:45:10] - Starting fillSimpleValue for username
[2022-11-29 14:45:10] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:45:10] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:45:10] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:45:10] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:45:10] - Building session factory
[2022-11-29 14:45:10] - SessionFactory name : null
[2022-11-29 14:45:10] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:45:10] - Automatic session close at end of transaction: disabled
[2022-11-29 14:45:10] - Statistics: disabled
[2022-11-29 14:45:10] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:45:10] - Default entity-mode: pojo
[2022-11-29 14:45:10] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:45:10] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:45:10] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:45:10] - Default batch fetch size: -1
[2022-11-29 14:45:10] - Maximum outer join fetch depth: 2
[2022-11-29 14:45:10] - Default null ordering: NONE
[2022-11-29 14:45:10] - Order SQL updates by primary key: disabled
[2022-11-29 14:45:10] - Order SQL inserts for batching: disabled
[2022-11-29 14:45:10] - multi-tenancy strategy : NONE
[2022-11-29 14:45:10] - JTA Track by Thread: enabled
[2022-11-29 14:45:10] - Query language substitutions: {}
[2022-11-29 14:45:10] - Named query checking : enabled
[2022-11-29 14:45:10] - Second-level cache: disabled
[2022-11-29 14:45:10] - Second-level query cache: disabled
[2022-11-29 14:45:10] - Second-level query cache factory: null
[2022-11-29 14:45:10] - Second-level cache region prefix: null
[2022-11-29 14:45:10] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:45:10] - Structured second-level cache entries: disabled
[2022-11-29 14:45:10] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:45:10] - Automatic eviction of collection cache: disabled
[2022-11-29 14:45:10] - JDBC batch size: 15
[2022-11-29 14:45:10] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:45:10] - Scrollable result sets: enabled
[2022-11-29 14:45:10] - Wrap result sets: disabled
[2022-11-29 14:45:10] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:45:10] - JDBC result set fetch size: null
[2022-11-29 14:45:10] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:45:10] - Generate SQL with comments: disabled
[2022-11-29 14:45:10] - JPA compliance - query : disabled
[2022-11-29 14:45:10] - JPA compliance - closed-handling : disabled
[2022-11-29 14:45:10] - JPA compliance - lists : disabled
[2022-11-29 14:45:10] - JPA compliance - transactions : disabled
[2022-11-29 14:45:10] - Session factory constructed with filter configurations : {}
[2022-11-29 14:45:10] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@79ed1d49, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:45:10] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:45:10] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:45:10] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:45:10] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:45:10] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:45:10] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:45:10] - Loaded expression factory via original TCCL
[2022-11-29 14:45:10] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:45:10] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:45:10] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:45:10] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:45:10] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:45:10] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:45:10] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:45:10] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:45:10] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:45:10] - Skipping JACC integration as it was not enabled
[2022-11-29 14:45:10] - Instantiated session factory
[2022-11-29 14:45:10] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54f2f42f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4907394]
[2022-11-29 14:45:10] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:45:10] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:45:10] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:45:10] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:45:10] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:45:10] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:45:10] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:45:10] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:45:10] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:45:10] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:45:10] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:45:10] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:45:10] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:45:10] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:45:10] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:45:10] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e17f44]
[2022-11-29 14:45:10] - Visiting attribute path : address
[2022-11-29 14:45:10] - Visiting attribute path : email
[2022-11-29 14:45:10] - Visiting attribute path : firstName
[2022-11-29 14:45:10] - Visiting attribute path : job
[2022-11-29 14:45:10] - Visiting attribute path : lastName
[2022-11-29 14:45:10] - Visiting attribute path : location
[2022-11-29 14:45:10] - Visiting attribute path : orders
[2022-11-29 14:45:10] - Building LoadPlan...
[2022-11-29 14:45:10] - processing queryspace <gen:0>
[2022-11-29 14:45:10] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:45:10] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:10] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@418e76d4]
[2022-11-29 14:45:10] - Visiting attribute path : address
[2022-11-29 14:45:10] - Visiting attribute path : email
[2022-11-29 14:45:10] - Visiting attribute path : firstName
[2022-11-29 14:45:10] - Visiting attribute path : job
[2022-11-29 14:45:10] - Visiting attribute path : lastName
[2022-11-29 14:45:10] - Visiting attribute path : location
[2022-11-29 14:45:10] - Visiting attribute path : orders
[2022-11-29 14:45:10] - Building LoadPlan...
[2022-11-29 14:45:10] - processing queryspace <gen:0>
[2022-11-29 14:45:10] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:45:10] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:10] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:10] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:10] - Static SQL for entity: com.app.code.User
[2022-11-29 14:45:10] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:45:10] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:45:10] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:45:10] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:45:10] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:45:10] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:45:10] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53babbe6]
[2022-11-29 14:45:10] - Visiting attribute path : customer
[2022-11-29 14:45:10] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66fa81d]
[2022-11-29 14:45:10] - Visiting attribute path : customer.address
[2022-11-29 14:45:10] - Visiting attribute path : customer.email
[2022-11-29 14:45:10] - Visiting attribute path : customer.firstName
[2022-11-29 14:45:10] - Visiting attribute path : customer.job
[2022-11-29 14:45:10] - Visiting attribute path : customer.lastName
[2022-11-29 14:45:10] - Visiting attribute path : customer.location
[2022-11-29 14:45:10] - Visiting attribute path : customer.orders
[2022-11-29 14:45:10] - Visiting attribute path : password
[2022-11-29 14:45:10] - Visiting attribute path : username
[2022-11-29 14:45:10] - Building LoadPlan...
[2022-11-29 14:45:10] - processing queryspace <gen:0>
[2022-11-29 14:45:10] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:45:10] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:45:10] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0e7e5c]
[2022-11-29 14:45:10] - Visiting attribute path : customer
[2022-11-29 14:45:10] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aa52b95]
[2022-11-29 14:45:10] - Visiting attribute path : customer.address
[2022-11-29 14:45:10] - Visiting attribute path : customer.email
[2022-11-29 14:45:10] - Visiting attribute path : customer.firstName
[2022-11-29 14:45:10] - Visiting attribute path : customer.job
[2022-11-29 14:45:10] - Visiting attribute path : customer.lastName
[2022-11-29 14:45:10] - Visiting attribute path : customer.location
[2022-11-29 14:45:10] - Visiting attribute path : customer.orders
[2022-11-29 14:45:10] - Visiting attribute path : password
[2022-11-29 14:45:10] - Visiting attribute path : username
[2022-11-29 14:45:10] - Building LoadPlan...
[2022-11-29 14:45:10] - processing queryspace <gen:0>
[2022-11-29 14:45:10] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:45:10] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:45:10] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:45:10] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:45:10] - No actions specified; doing nothing
[2022-11-29 14:45:10] - Checking 0 named HQL queries
[2022-11-29 14:45:10] - Checking 0 named SQL queries
[2022-11-29 14:45:10] - Registering SessionFactory: beee8731-3c2f-4934-96d8-602811014903 (<unnamed>)
[2022-11-29 14:45:10] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:45:10] - A sessionFactory was successfully created.
[2022-11-29 14:45:10] - Statistics initialized [enabled=false]
[2022-11-29 14:45:10] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:45:10] - Session was successfully created.
[2022-11-29 14:45:10] - begin
[2022-11-29 14:45:10] - Transaction for session was successfully started
[2022-11-29 14:45:10] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 14:45:10] - parse() - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:45:10] - throwQueryException() : no errors
[2022-11-29 14:45:10] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 14:45:10] - select << begin [level=1, statement=select]
[2022-11-29 14:45:10] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 14:45:10] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:45:10] - getDataType() : username -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:45:10] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 14:45:10] - select : finishing up [level=1, statement=select]
[2022-11-29 14:45:10] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
[2022-11-29 14:45:10] - Derived SELECT clause created.
[2022-11-29 14:45:10] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.User)
          | path: {synthetic-alias}.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

[2022-11-29 14:45:10] - Using FROM fragment [user_detail user0_]
[2022-11-29 14:45:10] - select >> end [level=1, statement=select]
[2022-11-29 14:45:10] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@23baf381}

[2022-11-29 14:45:10] - throwQueryException() : no errors
[2022-11-29 14:45:10] - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:45:10] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:45:10] - throwQueryException() : no errors
[2022-11-29 14:45:10] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:45:10] - Result set row: 0
[2022-11-29 14:45:10] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 14:45:10] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 14:45:10] - Processing attribute `customer` : value = 50
[2022-11-29 14:45:10] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:10] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:10] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 14:45:10] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:45:10] - Processing attribute `address` : value = Asachi 2A
[2022-11-29 14:45:10] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:10] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:45:10] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:10] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:45:10] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:10] - Processing attribute `job` : value = NONE
[2022-11-29 14:45:10] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:10] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:45:10] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:10] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:45:10] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:10] - Processing attribute `orders` : value = 9
[2022-11-29 14:45:10] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:10] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:45:10] - Done entity load : com.app.code.Customer#50
[2022-11-29 14:45:10] - Processing attribute `password` : value = test123
[2022-11-29 14:45:10] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:10] - Processing attribute `username` : value = kerbecs
[2022-11-29 14:45:10] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:10] - Done materializing entity [com.app.code.User#28]
[2022-11-29 14:45:10] - parse() - HQL: FROM com.app.code.Customer WHERE id=?0
[2022-11-29 14:45:10] - throwQueryException() : no errors
[2022-11-29 14:45:10] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'Customer'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 14:45:10] - select << begin [level=1, statement=select]
[2022-11-29 14:45:10] - FromClause{level=1} : com.app.code.Customer (<no alias>) -> customer0_
[2022-11-29 14:45:10] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:45:10] - getDataType() : id -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:45:10] - Resolved : {synthetic-alias}.id -> customer0_.customer_id
[2022-11-29 14:45:10] - select : finishing up [level=1, statement=select]
[2022-11-29 14:45:10] - processQuery() :  ( SELECT ( FromClause{level=1} customer customer0_ ) ( WHERE ( = ( customer0_.customer_id {synthetic-alias} id ) ? ) ) )
[2022-11-29 14:45:10] - Derived SELECT clause created.
[2022-11-29 14:45:10] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Customer): [customer]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.Customer)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.Customer)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

[2022-11-29 14:45:10] - Using FROM fragment [customer customer0_]
[2022-11-29 14:45:10] - select >> end [level=1, statement=select]
[2022-11-29 14:45:10] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_.customer_id as customer1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.customer_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.IntegerType@5aeccce6}

[2022-11-29 14:45:10] - throwQueryException() : no errors
[2022-11-29 14:45:10] - HQL: FROM com.app.code.Customer WHERE id=?0
[2022-11-29 14:45:10] - SQL: select customer0_.customer_id as customer1_0_, customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:10] - throwQueryException() : no errors
[2022-11-29 14:45:10] - Processing flush-time cascades
[2022-11-29 14:45:10] - Dirty checking collections
[2022-11-29 14:45:10] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 14:45:10] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:45:10] - Listing entities:
[2022-11-29 14:45:10] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:45:10] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:45:10] - select customer0_.customer_id as customer1_0_, customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:10] - Result set row: 0
[2022-11-29 14:45:10] - Result row: EntityKey[com.app.code.Customer#50]
[2022-11-29 14:45:10] - committing
[2022-11-29 14:45:10] - Processing flush-time cascades
[2022-11-29 14:45:10] - Dirty checking collections
[2022-11-29 14:45:10] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 14:45:10] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:45:10] - Listing entities:
[2022-11-29 14:45:10] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Asachi 2A, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:45:10] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:45:10] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:45:10] - Clearing local Synchronizations
[2022-11-29 14:45:10] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:45:10] - Session was successfully committed
[2022-11-29 14:45:10] - Transaction for session was successfully closed
[2022-11-29 14:45:14] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:45:14] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:45:14] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:45:14] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:45:14] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:45:14] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:45:14] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:45:14] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:45:14] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:45:14] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:45:14] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:45:14] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:45:14] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:45:14] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:45:14] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 14:45:14] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 14:45:14] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 14:45:14] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:45:14] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:45:14] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:45:14] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:45:14] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:45:14] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:45:14] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:45:14] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:45:14] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:45:14] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:45:14] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:45:14] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:45:14] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:45:14] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:45:14] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:45:14] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:45:14] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:45:14] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:45:14] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:45:14] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:45:14] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:45:14] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:45:14] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:45:14] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:45:14] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:45:14] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:45:14] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:45:14] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 14:45:14] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 14:45:14] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:45:14] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:45:14] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:45:14] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:45:14] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:45:14] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:45:14] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:45:14] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:45:14] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:45:14] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:45:14] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:45:14] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:45:14] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:45:14] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:45:14] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:45:14] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:45:14] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:45:14] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:45:14] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:45:14] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:45:14] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:45:14] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:45:14] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:45:14] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:45:14] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:45:14] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 14:45:14] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:45:14] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:45:14] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:45:14] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 14:45:14] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 14:45:14] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:45:14] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:45:14] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:45:14] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:45:14] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:45:14] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:45:14] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:45:14] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:45:14] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:45:14] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:45:14] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 14:45:14] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:45:14] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:45:14] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:45:14] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:45:14] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:45:14] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:45:14] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 14:45:14] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 14:45:14] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:45:14] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:45:14] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:45:14] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:45:14] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:45:14] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:45:14] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 14:45:14] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 14:45:14] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:45:14] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:45:14] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 14:45:14] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:45:14] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:45:14] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:45:14] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:45:14] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 14:45:14] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 14:45:14] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 14:45:14] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:45:14] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:45:14] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2eb3f992
[2022-11-29 14:45:14] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4723d563
[2022-11-29 14:45:14] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3fdca452
[2022-11-29 14:45:14] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5368dd7c
[2022-11-29 14:45:14] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62a6c1ea
[2022-11-29 14:45:14] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b779810
[2022-11-29 14:45:14] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61d34518
[2022-11-29 14:45:14] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7445e763
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:45:14] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:45:14] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:45:14] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:45:14] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:45:14] - HHH10001003: Autocommit mode: false
[2022-11-29 14:45:14] - Initializing Connection pool with 1 Connections
[2022-11-29 14:45:14] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:45:14] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:45:14] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:45:14] - JDBC version : 4.2
[2022-11-29 14:45:14] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:45:14] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:45:14] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:45:14] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:45:14] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@484e56a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5c4da163]
[2022-11-29 14:45:14] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:45:14] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:45:14] - Import with entity name Customer
[2022-11-29 14:45:14] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:45:14] - building SimpleValue for id
[2022-11-29 14:45:14] - Building property id
[2022-11-29 14:45:14] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:45:14] - building SimpleValue for address
[2022-11-29 14:45:14] - Building property address
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:45:14] - building SimpleValue for email
[2022-11-29 14:45:14] - Building property email
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:45:14] - building SimpleValue for firstName
[2022-11-29 14:45:14] - Building property firstName
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:45:14] - building SimpleValue for job
[2022-11-29 14:45:14] - Building property job
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:45:14] - building SimpleValue for lastName
[2022-11-29 14:45:14] - Building property lastName
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:45:14] - building SimpleValue for location
[2022-11-29 14:45:14] - Building property location
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:45:14] - building SimpleValue for orders
[2022-11-29 14:45:14] - Building property orders
[2022-11-29 14:45:14] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:45:14] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:45:14] - Import with entity name User
[2022-11-29 14:45:14] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:45:14] - building SimpleValue for user_id
[2022-11-29 14:45:14] - Building property user_id
[2022-11-29 14:45:14] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:45:14] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - Building property customer
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:45:14] - building SimpleValue for password
[2022-11-29 14:45:14] - Building property password
[2022-11-29 14:45:14] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:45:14] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:45:14] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:45:14] - building SimpleValue for username
[2022-11-29 14:45:14] - Building property username
[2022-11-29 14:45:14] - Starting fillSimpleValue for id
[2022-11-29 14:45:14] - Starting fillSimpleValue for address
[2022-11-29 14:45:14] - Starting fillSimpleValue for email
[2022-11-29 14:45:14] - Starting fillSimpleValue for firstName
[2022-11-29 14:45:14] - Starting fillSimpleValue for job
[2022-11-29 14:45:14] - Starting fillSimpleValue for lastName
[2022-11-29 14:45:14] - Starting fillSimpleValue for location
[2022-11-29 14:45:14] - Starting fillSimpleValue for orders
[2022-11-29 14:45:14] - Starting fillSimpleValue for user_id
[2022-11-29 14:45:14] - Starting fillSimpleValue for password
[2022-11-29 14:45:14] - Starting fillSimpleValue for username
[2022-11-29 14:45:14] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:45:14] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:45:14] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:45:14] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:45:14] - Building session factory
[2022-11-29 14:45:14] - SessionFactory name : null
[2022-11-29 14:45:14] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:45:14] - Automatic session close at end of transaction: disabled
[2022-11-29 14:45:14] - Statistics: disabled
[2022-11-29 14:45:14] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:45:14] - Default entity-mode: pojo
[2022-11-29 14:45:14] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:45:14] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:45:14] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:45:14] - Default batch fetch size: -1
[2022-11-29 14:45:14] - Maximum outer join fetch depth: 2
[2022-11-29 14:45:14] - Default null ordering: NONE
[2022-11-29 14:45:14] - Order SQL updates by primary key: disabled
[2022-11-29 14:45:14] - Order SQL inserts for batching: disabled
[2022-11-29 14:45:14] - multi-tenancy strategy : NONE
[2022-11-29 14:45:14] - JTA Track by Thread: enabled
[2022-11-29 14:45:14] - Query language substitutions: {}
[2022-11-29 14:45:14] - Named query checking : enabled
[2022-11-29 14:45:14] - Second-level cache: disabled
[2022-11-29 14:45:14] - Second-level query cache: disabled
[2022-11-29 14:45:14] - Second-level query cache factory: null
[2022-11-29 14:45:14] - Second-level cache region prefix: null
[2022-11-29 14:45:14] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:45:14] - Structured second-level cache entries: disabled
[2022-11-29 14:45:14] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:45:14] - Automatic eviction of collection cache: disabled
[2022-11-29 14:45:14] - JDBC batch size: 15
[2022-11-29 14:45:14] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:45:14] - Scrollable result sets: enabled
[2022-11-29 14:45:14] - Wrap result sets: disabled
[2022-11-29 14:45:14] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:45:14] - JDBC result set fetch size: null
[2022-11-29 14:45:14] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:45:14] - Generate SQL with comments: disabled
[2022-11-29 14:45:14] - JPA compliance - query : disabled
[2022-11-29 14:45:14] - JPA compliance - closed-handling : disabled
[2022-11-29 14:45:14] - JPA compliance - lists : disabled
[2022-11-29 14:45:14] - JPA compliance - transactions : disabled
[2022-11-29 14:45:14] - Session factory constructed with filter configurations : {}
[2022-11-29 14:45:14] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7c771171, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:45:14] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:45:14] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:45:14] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:45:14] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:45:14] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:45:14] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:45:14] - Loaded expression factory via original TCCL
[2022-11-29 14:45:14] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:45:14] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:45:14] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:45:14] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:45:14] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:45:14] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:45:14] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:45:14] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:45:14] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:45:14] - Skipping JACC integration as it was not enabled
[2022-11-29 14:45:14] - Instantiated session factory
[2022-11-29 14:45:14] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@484e56a7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@77a71c71]
[2022-11-29 14:45:14] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:45:14] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:45:14] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:45:14] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:45:14] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:45:14] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:45:14] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:45:14] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:45:14] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:45:14] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:45:14] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:45:14] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:45:14] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:45:14] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:45:14] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:45:14] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19a8659f]
[2022-11-29 14:45:14] - Visiting attribute path : address
[2022-11-29 14:45:14] - Visiting attribute path : email
[2022-11-29 14:45:14] - Visiting attribute path : firstName
[2022-11-29 14:45:14] - Visiting attribute path : job
[2022-11-29 14:45:14] - Visiting attribute path : lastName
[2022-11-29 14:45:14] - Visiting attribute path : location
[2022-11-29 14:45:14] - Visiting attribute path : orders
[2022-11-29 14:45:14] - Building LoadPlan...
[2022-11-29 14:45:14] - processing queryspace <gen:0>
[2022-11-29 14:45:14] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:45:14] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:14] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@411b47d1]
[2022-11-29 14:45:14] - Visiting attribute path : address
[2022-11-29 14:45:14] - Visiting attribute path : email
[2022-11-29 14:45:14] - Visiting attribute path : firstName
[2022-11-29 14:45:14] - Visiting attribute path : job
[2022-11-29 14:45:14] - Visiting attribute path : lastName
[2022-11-29 14:45:14] - Visiting attribute path : location
[2022-11-29 14:45:14] - Visiting attribute path : orders
[2022-11-29 14:45:14] - Building LoadPlan...
[2022-11-29 14:45:14] - processing queryspace <gen:0>
[2022-11-29 14:45:14] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:45:14] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:14] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:14] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:14] - Static SQL for entity: com.app.code.User
[2022-11-29 14:45:14] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:45:14] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:45:14] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:45:14] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:45:14] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:45:14] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:45:14] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e55da50]
[2022-11-29 14:45:14] - Visiting attribute path : customer
[2022-11-29 14:45:14] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0d21db]
[2022-11-29 14:45:14] - Visiting attribute path : customer.address
[2022-11-29 14:45:14] - Visiting attribute path : customer.email
[2022-11-29 14:45:14] - Visiting attribute path : customer.firstName
[2022-11-29 14:45:14] - Visiting attribute path : customer.job
[2022-11-29 14:45:14] - Visiting attribute path : customer.lastName
[2022-11-29 14:45:14] - Visiting attribute path : customer.location
[2022-11-29 14:45:14] - Visiting attribute path : customer.orders
[2022-11-29 14:45:14] - Visiting attribute path : password
[2022-11-29 14:45:14] - Visiting attribute path : username
[2022-11-29 14:45:14] - Building LoadPlan...
[2022-11-29 14:45:14] - processing queryspace <gen:0>
[2022-11-29 14:45:14] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:45:14] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:45:14] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a5a992]
[2022-11-29 14:45:14] - Visiting attribute path : customer
[2022-11-29 14:45:14] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cb66fec]
[2022-11-29 14:45:14] - Visiting attribute path : customer.address
[2022-11-29 14:45:14] - Visiting attribute path : customer.email
[2022-11-29 14:45:14] - Visiting attribute path : customer.firstName
[2022-11-29 14:45:14] - Visiting attribute path : customer.job
[2022-11-29 14:45:14] - Visiting attribute path : customer.lastName
[2022-11-29 14:45:14] - Visiting attribute path : customer.location
[2022-11-29 14:45:14] - Visiting attribute path : customer.orders
[2022-11-29 14:45:14] - Visiting attribute path : password
[2022-11-29 14:45:14] - Visiting attribute path : username
[2022-11-29 14:45:14] - Building LoadPlan...
[2022-11-29 14:45:14] - processing queryspace <gen:0>
[2022-11-29 14:45:14] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:45:14] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:45:14] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:45:14] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:45:14] - No actions specified; doing nothing
[2022-11-29 14:45:14] - Checking 0 named HQL queries
[2022-11-29 14:45:14] - Checking 0 named SQL queries
[2022-11-29 14:45:14] - Registering SessionFactory: d07dfdce-d58e-411d-9636-c8e0cf157f03 (<unnamed>)
[2022-11-29 14:45:14] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:45:14] - A sessionFactory was successfully created.
[2022-11-29 14:45:14] - Statistics initialized [enabled=false]
[2022-11-29 14:45:14] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:45:14] - Session was successfully created.
[2022-11-29 14:45:14] - begin
[2022-11-29 14:45:14] - Transaction for session was successfully started
[2022-11-29 14:45:14] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 14:45:14] - parse() - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:45:14] - throwQueryException() : no errors
[2022-11-29 14:45:14] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 14:45:14] - select << begin [level=1, statement=select]
[2022-11-29 14:45:14] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 14:45:14] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:45:14] - getDataType() : username -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:45:14] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 14:45:14] - select : finishing up [level=1, statement=select]
[2022-11-29 14:45:14] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
[2022-11-29 14:45:14] - Derived SELECT clause created.
[2022-11-29 14:45:14] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.User)
          | path: {synthetic-alias}.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

[2022-11-29 14:45:14] - Using FROM fragment [user_detail user0_]
[2022-11-29 14:45:14] - select >> end [level=1, statement=select]
[2022-11-29 14:45:14] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@23baf381}

[2022-11-29 14:45:14] - throwQueryException() : no errors
[2022-11-29 14:45:14] - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:45:14] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:45:14] - throwQueryException() : no errors
[2022-11-29 14:45:14] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:45:14] - Result set row: 0
[2022-11-29 14:45:14] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 14:45:14] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 14:45:14] - Processing attribute `customer` : value = 50
[2022-11-29 14:45:14] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:14] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:45:14] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 14:45:14] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:45:14] - Processing attribute `address` : value = Asachi 2A
[2022-11-29 14:45:14] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:14] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:45:14] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:14] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:45:14] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:14] - Processing attribute `job` : value = NONE
[2022-11-29 14:45:14] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:14] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:45:14] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:14] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:45:14] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:14] - Processing attribute `orders` : value = 9
[2022-11-29 14:45:14] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:14] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:45:14] - Done entity load : com.app.code.Customer#50
[2022-11-29 14:45:14] - Processing attribute `password` : value = test123
[2022-11-29 14:45:14] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:14] - Processing attribute `username` : value = kerbecs
[2022-11-29 14:45:14] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 14:45:14] - Done materializing entity [com.app.code.User#28]
[2022-11-29 14:45:14] - committing
[2022-11-29 14:45:14] - Processing flush-time cascades
[2022-11-29 14:45:14] - Dirty checking collections
[2022-11-29 14:45:14] - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
[2022-11-29 14:45:14] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:45:14] - Listing entities:
[2022-11-29 14:45:14] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:45:14] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:45:15] - update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:45:15] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:45:15] - Clearing local Synchronizations
[2022-11-29 14:45:15] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:45:15] - Session was successfully committed
[2022-11-29 14:45:15] - Transaction for session was successfully closed
[2022-11-29 14:45:15] - User profile for user kerbecs was successfully edited.
[2022-11-29 14:45:24] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:45:28] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:45:33] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:45:40] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:45:44] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:46:12] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:46:12] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:46:12] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:46:12] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:46:12] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:46:12] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:46:12] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:46:12] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:46:12] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:46:12] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:46:12] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:46:12] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:46:12] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:46:12] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:46:12] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 14:46:12] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 14:46:12] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 14:46:12] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:46:12] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:46:12] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:46:12] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:46:12] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:46:12] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:46:12] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:46:12] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:46:12] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:46:12] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:46:12] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:46:12] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:46:12] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:46:12] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:46:12] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:46:12] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:46:12] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:46:12] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:46:12] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:46:12] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:46:12] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:46:12] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:46:12] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:46:12] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:46:12] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:46:12] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:46:12] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:46:12] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 14:46:12] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 14:46:12] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:46:12] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:46:12] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:46:12] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:46:12] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:46:12] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:46:12] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:46:12] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:46:12] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:46:12] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:46:12] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:46:12] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:46:12] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:46:12] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:46:12] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:46:12] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:46:12] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:46:12] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:46:12] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:46:12] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:46:12] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:46:12] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:46:12] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:46:12] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:46:12] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:46:12] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 14:46:12] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:46:12] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:46:12] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:46:12] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 14:46:12] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 14:46:12] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:46:12] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:46:12] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:46:12] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:46:12] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:46:12] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:46:12] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:46:12] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:46:12] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:46:12] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:46:12] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 14:46:12] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:46:12] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:46:12] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:46:12] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:46:12] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:46:12] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:46:12] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 14:46:12] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 14:46:12] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:46:12] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:46:12] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:46:12] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:46:12] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:46:12] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:46:12] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 14:46:12] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 14:46:12] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:46:12] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:46:12] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 14:46:12] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:46:12] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:46:12] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:46:12] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:46:12] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 14:46:12] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 14:46:12] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 14:46:12] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:46:12] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:46:12] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4cd19edb
[2022-11-29 14:46:12] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c00c913
[2022-11-29 14:46:12] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16dfe2f5
[2022-11-29 14:46:12] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@22695a0c
[2022-11-29 14:46:12] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@628e2fdc
[2022-11-29 14:46:12] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18bc3acf
[2022-11-29 14:46:12] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@719dbb67
[2022-11-29 14:46:12] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@19cc2662
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:46:12] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:46:12] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:46:12] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:46:12] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:46:12] - HHH10001003: Autocommit mode: false
[2022-11-29 14:46:12] - Initializing Connection pool with 1 Connections
[2022-11-29 14:46:12] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:46:13] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:46:13] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:46:13] - JDBC version : 4.2
[2022-11-29 14:46:13] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:46:13] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:46:13] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:46:13] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:46:13] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@614a1d96] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66bf0899]
[2022-11-29 14:46:13] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:46:13] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:46:13] - Import with entity name Customer
[2022-11-29 14:46:13] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:46:13] - building SimpleValue for id
[2022-11-29 14:46:13] - Building property id
[2022-11-29 14:46:13] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:46:13] - building SimpleValue for address
[2022-11-29 14:46:13] - Building property address
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:46:13] - building SimpleValue for email
[2022-11-29 14:46:13] - Building property email
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:46:13] - building SimpleValue for firstName
[2022-11-29 14:46:13] - Building property firstName
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:46:13] - building SimpleValue for job
[2022-11-29 14:46:13] - Building property job
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:46:13] - building SimpleValue for lastName
[2022-11-29 14:46:13] - Building property lastName
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:46:13] - building SimpleValue for location
[2022-11-29 14:46:13] - Building property location
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:46:13] - building SimpleValue for orders
[2022-11-29 14:46:13] - Building property orders
[2022-11-29 14:46:13] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:46:13] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:46:13] - Import with entity name User
[2022-11-29 14:46:13] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:46:13] - building SimpleValue for user_id
[2022-11-29 14:46:13] - Building property user_id
[2022-11-29 14:46:13] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:46:13] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - Building property customer
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:46:13] - building SimpleValue for password
[2022-11-29 14:46:13] - Building property password
[2022-11-29 14:46:13] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:46:13] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:46:13] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:46:13] - building SimpleValue for username
[2022-11-29 14:46:13] - Building property username
[2022-11-29 14:46:13] - Starting fillSimpleValue for id
[2022-11-29 14:46:13] - Starting fillSimpleValue for address
[2022-11-29 14:46:13] - Starting fillSimpleValue for email
[2022-11-29 14:46:13] - Starting fillSimpleValue for firstName
[2022-11-29 14:46:13] - Starting fillSimpleValue for job
[2022-11-29 14:46:13] - Starting fillSimpleValue for lastName
[2022-11-29 14:46:13] - Starting fillSimpleValue for location
[2022-11-29 14:46:13] - Starting fillSimpleValue for orders
[2022-11-29 14:46:13] - Starting fillSimpleValue for user_id
[2022-11-29 14:46:13] - Starting fillSimpleValue for password
[2022-11-29 14:46:13] - Starting fillSimpleValue for username
[2022-11-29 14:46:13] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:46:13] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:46:13] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:46:13] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:46:13] - Building session factory
[2022-11-29 14:46:13] - SessionFactory name : null
[2022-11-29 14:46:13] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:46:13] - Automatic session close at end of transaction: disabled
[2022-11-29 14:46:13] - Statistics: disabled
[2022-11-29 14:46:13] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:46:13] - Default entity-mode: pojo
[2022-11-29 14:46:13] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:46:13] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:46:13] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:46:13] - Default batch fetch size: -1
[2022-11-29 14:46:13] - Maximum outer join fetch depth: 2
[2022-11-29 14:46:13] - Default null ordering: NONE
[2022-11-29 14:46:13] - Order SQL updates by primary key: disabled
[2022-11-29 14:46:13] - Order SQL inserts for batching: disabled
[2022-11-29 14:46:13] - multi-tenancy strategy : NONE
[2022-11-29 14:46:13] - JTA Track by Thread: enabled
[2022-11-29 14:46:13] - Query language substitutions: {}
[2022-11-29 14:46:13] - Named query checking : enabled
[2022-11-29 14:46:13] - Second-level cache: disabled
[2022-11-29 14:46:13] - Second-level query cache: disabled
[2022-11-29 14:46:13] - Second-level query cache factory: null
[2022-11-29 14:46:13] - Second-level cache region prefix: null
[2022-11-29 14:46:13] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:46:13] - Structured second-level cache entries: disabled
[2022-11-29 14:46:13] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:46:13] - Automatic eviction of collection cache: disabled
[2022-11-29 14:46:13] - JDBC batch size: 15
[2022-11-29 14:46:13] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:46:13] - Scrollable result sets: enabled
[2022-11-29 14:46:13] - Wrap result sets: disabled
[2022-11-29 14:46:13] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:46:13] - JDBC result set fetch size: null
[2022-11-29 14:46:13] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:46:13] - Generate SQL with comments: disabled
[2022-11-29 14:46:13] - JPA compliance - query : disabled
[2022-11-29 14:46:13] - JPA compliance - closed-handling : disabled
[2022-11-29 14:46:13] - JPA compliance - lists : disabled
[2022-11-29 14:46:13] - JPA compliance - transactions : disabled
[2022-11-29 14:46:13] - Session factory constructed with filter configurations : {}
[2022-11-29 14:46:13] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@244eadc4, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:46:13] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:46:13] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:46:13] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:46:13] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:46:13] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:46:13] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:46:13] - Loaded expression factory via original TCCL
[2022-11-29 14:46:13] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:46:13] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:46:13] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:46:13] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:46:13] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:46:13] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:46:13] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:46:13] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:46:13] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:46:13] - Skipping JACC integration as it was not enabled
[2022-11-29 14:46:13] - Instantiated session factory
[2022-11-29 14:46:13] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@614a1d96] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6361a7e4]
[2022-11-29 14:46:13] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:46:13] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:46:13] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:46:13] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:46:13] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:46:13] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:46:13] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:46:13] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:46:13] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:46:13] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:46:13] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:46:13] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:46:13] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:46:13] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:46:13] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:46:13] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3443fe11]
[2022-11-29 14:46:13] - Visiting attribute path : address
[2022-11-29 14:46:13] - Visiting attribute path : email
[2022-11-29 14:46:13] - Visiting attribute path : firstName
[2022-11-29 14:46:13] - Visiting attribute path : job
[2022-11-29 14:46:13] - Visiting attribute path : lastName
[2022-11-29 14:46:13] - Visiting attribute path : location
[2022-11-29 14:46:13] - Visiting attribute path : orders
[2022-11-29 14:46:13] - Building LoadPlan...
[2022-11-29 14:46:13] - processing queryspace <gen:0>
[2022-11-29 14:46:13] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:46:13] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:46:13] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c066ac]
[2022-11-29 14:46:13] - Visiting attribute path : address
[2022-11-29 14:46:13] - Visiting attribute path : email
[2022-11-29 14:46:13] - Visiting attribute path : firstName
[2022-11-29 14:46:13] - Visiting attribute path : job
[2022-11-29 14:46:13] - Visiting attribute path : lastName
[2022-11-29 14:46:13] - Visiting attribute path : location
[2022-11-29 14:46:13] - Visiting attribute path : orders
[2022-11-29 14:46:13] - Building LoadPlan...
[2022-11-29 14:46:13] - processing queryspace <gen:0>
[2022-11-29 14:46:13] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:46:13] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:46:13] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:46:13] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:46:13] - Static SQL for entity: com.app.code.User
[2022-11-29 14:46:13] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:46:13] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:46:13] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:46:13] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:46:13] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:46:13] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:46:13] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7851d07a]
[2022-11-29 14:46:13] - Visiting attribute path : customer
[2022-11-29 14:46:13] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eb03227]
[2022-11-29 14:46:13] - Visiting attribute path : customer.address
[2022-11-29 14:46:13] - Visiting attribute path : customer.email
[2022-11-29 14:46:13] - Visiting attribute path : customer.firstName
[2022-11-29 14:46:13] - Visiting attribute path : customer.job
[2022-11-29 14:46:13] - Visiting attribute path : customer.lastName
[2022-11-29 14:46:13] - Visiting attribute path : customer.location
[2022-11-29 14:46:13] - Visiting attribute path : customer.orders
[2022-11-29 14:46:13] - Visiting attribute path : password
[2022-11-29 14:46:13] - Visiting attribute path : username
[2022-11-29 14:46:13] - Building LoadPlan...
[2022-11-29 14:46:13] - processing queryspace <gen:0>
[2022-11-29 14:46:13] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:46:13] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:46:13] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@233d6ef3]
[2022-11-29 14:46:13] - Visiting attribute path : customer
[2022-11-29 14:46:13] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@754dcf18]
[2022-11-29 14:46:13] - Visiting attribute path : customer.address
[2022-11-29 14:46:13] - Visiting attribute path : customer.email
[2022-11-29 14:46:13] - Visiting attribute path : customer.firstName
[2022-11-29 14:46:13] - Visiting attribute path : customer.job
[2022-11-29 14:46:13] - Visiting attribute path : customer.lastName
[2022-11-29 14:46:13] - Visiting attribute path : customer.location
[2022-11-29 14:46:13] - Visiting attribute path : customer.orders
[2022-11-29 14:46:13] - Visiting attribute path : password
[2022-11-29 14:46:13] - Visiting attribute path : username
[2022-11-29 14:46:13] - Building LoadPlan...
[2022-11-29 14:46:13] - processing queryspace <gen:0>
[2022-11-29 14:46:13] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:46:13] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:46:13] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:46:13] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:46:13] - No actions specified; doing nothing
[2022-11-29 14:46:13] - Checking 0 named HQL queries
[2022-11-29 14:46:13] - Checking 0 named SQL queries
[2022-11-29 14:46:13] - Registering SessionFactory: 932d1fd6-91b2-43bb-8f44-61d59cf757c7 (<unnamed>)
[2022-11-29 14:46:13] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:46:13] - A sessionFactory was successfully created.
[2022-11-29 14:46:13] - Statistics initialized [enabled=false]
[2022-11-29 14:46:13] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:46:13] - Session was successfully created.
[2022-11-29 14:46:13] - begin
[2022-11-29 14:46:13] - Transaction for session was successfully started
[2022-11-29 14:46:13] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 14:46:13] - parse() - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:46:13] - throwQueryException() : no errors
[2022-11-29 14:46:13] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 14:46:13] - select << begin [level=1, statement=select]
[2022-11-29 14:46:13] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 14:46:13] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:46:13] - getDataType() : username -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:46:13] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 14:46:13] - select : finishing up [level=1, statement=select]
[2022-11-29 14:46:13] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
[2022-11-29 14:46:13] - Derived SELECT clause created.
[2022-11-29 14:46:13] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.User)
          | path: {synthetic-alias}.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

[2022-11-29 14:46:13] - Using FROM fragment [user_detail user0_]
[2022-11-29 14:46:13] - select >> end [level=1, statement=select]
[2022-11-29 14:46:13] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@23baf381}

[2022-11-29 14:46:13] - throwQueryException() : no errors
[2022-11-29 14:46:13] - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:46:13] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:46:13] - throwQueryException() : no errors
[2022-11-29 14:46:13] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:46:13] - Result set row: 0
[2022-11-29 14:46:13] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 14:46:13] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 14:46:13] - Processing attribute `customer` : value = 50
[2022-11-29 14:46:13] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 14:46:13] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:46:13] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 14:46:13] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:46:13] - Processing attribute `address` : value = 
[2022-11-29 14:46:13] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:46:13] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:46:13] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:46:13] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:46:13] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:46:13] - Processing attribute `job` : value = NONE
[2022-11-29 14:46:13] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:46:13] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:46:13] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:46:13] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:46:13] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:46:13] - Processing attribute `orders` : value = 9
[2022-11-29 14:46:13] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:46:13] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:46:13] - Done entity load : com.app.code.Customer#50
[2022-11-29 14:46:13] - Processing attribute `password` : value = test123
[2022-11-29 14:46:13] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 14:46:13] - Processing attribute `username` : value = kerbecs
[2022-11-29 14:46:13] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 14:46:13] - Done materializing entity [com.app.code.User#28]
[2022-11-29 14:46:13] - committing
[2022-11-29 14:46:13] - Processing flush-time cascades
[2022-11-29 14:46:13] - Dirty checking collections
[2022-11-29 14:46:13] - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
[2022-11-29 14:46:13] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:46:13] - Listing entities:
[2022-11-29 14:46:13] - com.app.code.Customer{firstName=, lastName=eduard, address=, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:46:13] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:46:13] - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:393)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1360)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:447)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3233)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2401)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.app.code.HibernateClass.updateProfile(HibernateClass.java:206)
	at com.app.code.ControllerConfig.updateProfile(ControllerConfig.java:112)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
[2022-11-29 14:46:13] - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.app.code.HibernateClass.updateProfile(HibernateClass.java:206)
	at com.app.code.ControllerConfig.updateProfile(ControllerConfig.java:112)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
[2022-11-29 14:46:13] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:46:13] - Clearing local Synchronizations
[2022-11-29 14:46:13] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:46:13] - Validation failed for classes [com.app.code.Customer] during update time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='Enter a first name between 2 and 20', propertyPath=firstName, rootBeanClass=class com.app.code.Customer, messageTemplate='Enter a first name between 2 and 20'}
]
[2022-11-29 14:46:13] - Transaction for session was successfully closed
[2022-11-29 14:46:13] - Can't modify profile of user kerbecs
[2022-11-29 14:46:43] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:47:34] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:47:34] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:47:34] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:47:35] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:47:35] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:47:35] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:47:35] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:47:35] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:47:35] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:47:35] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:47:35] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:47:35] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:47:35] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:47:35] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:47:35] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 14:47:35] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 14:47:35] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 14:47:35] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:47:35] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:47:35] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:47:35] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:47:35] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:47:35] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:47:35] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:47:35] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:47:35] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:47:35] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:47:35] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:47:35] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:47:35] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:47:35] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:47:35] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:47:35] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:47:35] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:47:35] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:47:35] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:47:35] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:47:35] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:47:35] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:47:35] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:47:35] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:47:35] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:47:35] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:47:35] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:47:35] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 14:47:35] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 14:47:35] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:47:35] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:47:35] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:47:35] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:47:35] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:47:35] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:47:35] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:47:35] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:47:35] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:47:35] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:47:35] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:47:35] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:47:35] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:47:35] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:47:35] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:47:35] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:47:35] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:47:35] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:47:35] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:47:35] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:47:35] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:47:35] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:47:35] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:47:35] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:47:35] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:47:35] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 14:47:35] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:47:35] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:47:35] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:47:35] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 14:47:35] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 14:47:35] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:47:35] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:47:35] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:47:35] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:47:35] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:47:35] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:47:35] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:47:35] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:47:35] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:47:35] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:47:35] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 14:47:35] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:47:35] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:47:35] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:47:35] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:47:35] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:47:35] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:47:35] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 14:47:35] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 14:47:35] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:47:35] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:47:35] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:47:35] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:47:35] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:47:35] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:47:35] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 14:47:35] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 14:47:35] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:47:35] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:47:35] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 14:47:35] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:47:35] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:47:35] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:47:35] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:47:35] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 14:47:35] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 14:47:35] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 14:47:35] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:47:35] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:47:35] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@62e6bb46
[2022-11-29 14:47:35] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3b6d0acf
[2022-11-29 14:47:35] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1349f5ec
[2022-11-29 14:47:35] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60c87da5
[2022-11-29 14:47:35] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3723c671
[2022-11-29 14:47:35] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@644b9928
[2022-11-29 14:47:35] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3871f6d8
[2022-11-29 14:47:35] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b778126
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:47:35] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:47:35] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:47:35] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:47:35] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:47:35] - HHH10001003: Autocommit mode: false
[2022-11-29 14:47:35] - Initializing Connection pool with 1 Connections
[2022-11-29 14:47:35] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:47:35] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:47:35] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:47:35] - JDBC version : 4.2
[2022-11-29 14:47:35] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:47:35] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:47:35] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:47:35] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:47:35] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b9d3b0d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4135e5b6]
[2022-11-29 14:47:35] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 14:47:35] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:47:35] - Import with entity name Product
[2022-11-29 14:47:35] - Bind entity com.app.code.Product on table product
[2022-11-29 14:47:35] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:35] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 14:47:35] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 14:47:35] - building SimpleValue for productId
[2022-11-29 14:47:35] - Building property productId
[2022-11-29 14:47:35] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 14:47:35] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:35] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 14:47:35] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 14:47:35] - building SimpleValue for ingredients
[2022-11-29 14:47:35] - Building property ingredients
[2022-11-29 14:47:35] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:35] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 14:47:35] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 14:47:35] - building SimpleValue for price
[2022-11-29 14:47:35] - Building property price
[2022-11-29 14:47:35] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:35] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 14:47:35] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 14:47:35] - building SimpleValue for title
[2022-11-29 14:47:35] - Building property title
[2022-11-29 14:47:35] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:35] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 14:47:35] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 14:47:35] - building SimpleValue for weight
[2022-11-29 14:47:35] - Building property weight
[2022-11-29 14:47:35] - Starting fillSimpleValue for productId
[2022-11-29 14:47:35] - Starting fillSimpleValue for ingredients
[2022-11-29 14:47:35] - Starting fillSimpleValue for price
[2022-11-29 14:47:35] - Starting fillSimpleValue for title
[2022-11-29 14:47:35] - Starting fillSimpleValue for weight
[2022-11-29 14:47:35] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 14:47:35] - Building session factory
[2022-11-29 14:47:35] - SessionFactory name : null
[2022-11-29 14:47:35] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:47:35] - Automatic session close at end of transaction: disabled
[2022-11-29 14:47:35] - Statistics: disabled
[2022-11-29 14:47:35] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:47:35] - Default entity-mode: pojo
[2022-11-29 14:47:35] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:47:35] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:47:35] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:47:35] - Default batch fetch size: -1
[2022-11-29 14:47:35] - Maximum outer join fetch depth: 2
[2022-11-29 14:47:35] - Default null ordering: NONE
[2022-11-29 14:47:35] - Order SQL updates by primary key: disabled
[2022-11-29 14:47:35] - Order SQL inserts for batching: disabled
[2022-11-29 14:47:35] - multi-tenancy strategy : NONE
[2022-11-29 14:47:35] - JTA Track by Thread: enabled
[2022-11-29 14:47:35] - Query language substitutions: {}
[2022-11-29 14:47:35] - Named query checking : enabled
[2022-11-29 14:47:35] - Second-level cache: disabled
[2022-11-29 14:47:35] - Second-level query cache: disabled
[2022-11-29 14:47:35] - Second-level query cache factory: null
[2022-11-29 14:47:35] - Second-level cache region prefix: null
[2022-11-29 14:47:35] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:47:35] - Structured second-level cache entries: disabled
[2022-11-29 14:47:35] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:47:35] - Automatic eviction of collection cache: disabled
[2022-11-29 14:47:35] - JDBC batch size: 15
[2022-11-29 14:47:35] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:47:35] - Scrollable result sets: enabled
[2022-11-29 14:47:35] - Wrap result sets: disabled
[2022-11-29 14:47:35] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:47:35] - JDBC result set fetch size: null
[2022-11-29 14:47:35] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:47:35] - Generate SQL with comments: disabled
[2022-11-29 14:47:35] - JPA compliance - query : disabled
[2022-11-29 14:47:35] - JPA compliance - closed-handling : disabled
[2022-11-29 14:47:35] - JPA compliance - lists : disabled
[2022-11-29 14:47:35] - JPA compliance - transactions : disabled
[2022-11-29 14:47:35] - Session factory constructed with filter configurations : {}
[2022-11-29 14:47:35] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5a57d45f, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:47:35] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:47:35] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:47:35] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:47:35] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:47:35] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:47:35] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:47:35] - Loaded expression factory via original TCCL
[2022-11-29 14:47:35] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:47:35] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:47:35] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:47:35] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:47:35] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:47:35] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:47:35] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:47:35] - Skipping JACC integration as it was not enabled
[2022-11-29 14:47:35] - Instantiated session factory
[2022-11-29 14:47:35] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b9d3b0d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@14aac63b]
[2022-11-29 14:47:35] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:47:35] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:47:35] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:47:35] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:47:35] - Static SQL for entity: com.app.code.Product
[2022-11-29 14:47:35] -  Version select: select product_id from product where product_id =?
[2022-11-29 14:47:35] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_0_, product_.price as price3_0_, product_.title as title4_0_, product_.weight as weight5_0_ from product product_ where product_.product_id=?
[2022-11-29 14:47:35] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 14:47:35] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 14:47:35] -  Delete 0: delete from product where product_id=?
[2022-11-29 14:47:35] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 14:47:35] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@790c3308]
[2022-11-29 14:47:35] - Visiting attribute path : ingredients
[2022-11-29 14:47:35] - Visiting attribute path : price
[2022-11-29 14:47:35] - Visiting attribute path : title
[2022-11-29 14:47:35] - Visiting attribute path : weight
[2022-11-29 14:47:35] - Building LoadPlan...
[2022-11-29 14:47:35] - processing queryspace <gen:0>
[2022-11-29 14:47:35] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:47:35] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:47:35] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f4efb84]
[2022-11-29 14:47:35] - Visiting attribute path : ingredients
[2022-11-29 14:47:35] - Visiting attribute path : price
[2022-11-29 14:47:35] - Visiting attribute path : title
[2022-11-29 14:47:35] - Visiting attribute path : weight
[2022-11-29 14:47:35] - Building LoadPlan...
[2022-11-29 14:47:35] - processing queryspace <gen:0>
[2022-11-29 14:47:35] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:47:35] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:47:35] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:47:35] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:47:35] - No actions specified; doing nothing
[2022-11-29 14:47:35] - Checking 0 named HQL queries
[2022-11-29 14:47:35] - Checking 0 named SQL queries
[2022-11-29 14:47:35] - Registering SessionFactory: 6f7bc93a-c8bc-4e5c-8092-152e66ed2b87 (<unnamed>)
[2022-11-29 14:47:35] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:47:35] - A sessionFactory was successfully created.
[2022-11-29 14:47:35] - Statistics initialized [enabled=false]
[2022-11-29 14:47:35] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:47:35] - Session was successfully created.
[2022-11-29 14:47:35] - begin
[2022-11-29 14:47:35] - Transaction for session was successfully started
[2022-11-29 14:47:35] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 14:47:35] - parse() - HQL: FROM com.app.code.Product
[2022-11-29 14:47:35] - throwQueryException() : no errors
[2022-11-29 14:47:35] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'code'
                \-[IDENT] Node: 'Product'

[2022-11-29 14:47:35] - select << begin [level=1, statement=select]
[2022-11-29 14:47:35] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 14:47:35] - select : finishing up [level=1, statement=select]
[2022-11-29 14:47:35] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
[2022-11-29 14:47:35] - Derived SELECT clause created.
[2022-11-29 14:47:35] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2022-11-29 14:47:35] - Using FROM fragment [product product0_]
[2022-11-29 14:47:35] - select >> end [level=1, statement=select]
[2022-11-29 14:47:35] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}

[2022-11-29 14:47:35] - throwQueryException() : no errors
[2022-11-29 14:47:35] - HQL: FROM com.app.code.Product
[2022-11-29 14:47:35] - SQL: select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:47:35] - throwQueryException() : no errors
[2022-11-29 14:47:35] - select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:47:35] - Result set row: 0
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 14:47:35] - Result set row: 1
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 14:47:35] - Result set row: 2
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 14:47:35] - Result set row: 3
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 14:47:35] - Result set row: 4
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 14:47:35] - Result set row: 5
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 14:47:35] - Result set row: 6
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#7]
[2022-11-29 14:47:35] - Result set row: 7
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#8]
[2022-11-29 14:47:35] - Result set row: 8
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#9]
[2022-11-29 14:47:35] - Result set row: 9
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#10]
[2022-11-29 14:47:35] - Result set row: 10
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#11]
[2022-11-29 14:47:35] - Result set row: 11
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#12]
[2022-11-29 14:47:35] - Result set row: 12
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#13]
[2022-11-29 14:47:35] - Result set row: 13
[2022-11-29 14:47:35] - Result row: EntityKey[com.app.code.Product#14]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 8
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 330
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 8
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 320
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 5
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 220
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 8
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Lasagna
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 350
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 5
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 350
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 4
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Apple Juice
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 320
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#7]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = pasta, spaghetti, salt, sauce, vegetables
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 6
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Spaghetti
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 260
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#7]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#8]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = chichken, water, rice, salt, sauce, tomatoes, pasta
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 6
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Chicken Soup
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 350
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#8]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#9]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = mango, orange, banana, kiwi, apple, ananas
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 7
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Fruit Salat
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 320
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#9]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#10]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = sugar, blat, eggs, flour, butter, strawberry, cream
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 6
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Cake
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 300
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#10]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#11]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = mentol, water, melisa
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 4
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Tea
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 300
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#11]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#12]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = brazilian coffe
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 4
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Coffee
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 200
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#12]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#13]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = crispy, sausage, cucumber, tomatoes, blat, cabbage
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 7
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Kebab
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 350
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#13]
[2022-11-29 14:47:35] - Resolving attributes for [com.app.code.Product#14]
[2022-11-29 14:47:35] - Processing attribute `ingredients` : value = eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat
[2022-11-29 14:47:35] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `price` : value = 7
[2022-11-29 14:47:35] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `title` : value = Taco
[2022-11-29 14:47:35] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Processing attribute `weight` : value = 340
[2022-11-29 14:47:35] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:35] - Done materializing entity [com.app.code.Product#14]
[2022-11-29 14:47:35] - committing
[2022-11-29 14:47:35] - Processing flush-time cascades
[2022-11-29 14:47:35] - Dirty checking collections
[2022-11-29 14:47:35] - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
[2022-11-29 14:47:35] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:47:35] - Listing entities:
[2022-11-29 14:47:35] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 14:47:35] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 14:47:35] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 14:47:35] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 14:47:35] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 14:47:35] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 14:47:35] - com.app.code.Product{productId=14, price=7, ingredients=eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat, weight=340, title=Taco}
[2022-11-29 14:47:35] - com.app.code.Product{productId=13, price=7, ingredients=crispy, sausage, cucumber, tomatoes, blat, cabbage, weight=350, title=Kebab}
[2022-11-29 14:47:35] - com.app.code.Product{productId=12, price=4, ingredients=brazilian coffe, weight=200, title=Coffee}
[2022-11-29 14:47:35] - com.app.code.Product{productId=11, price=4, ingredients=mentol, water, melisa, weight=300, title=Tea}
[2022-11-29 14:47:35] - com.app.code.Product{productId=10, price=6, ingredients=sugar, blat, eggs, flour, butter, strawberry, cream, weight=300, title=Cake}
[2022-11-29 14:47:35] - com.app.code.Product{productId=9, price=7, ingredients=mango, orange, banana, kiwi, apple, ananas, weight=320, title=Fruit Salat}
[2022-11-29 14:47:35] - com.app.code.Product{productId=8, price=6, ingredients=chichken, water, rice, salt, sauce, tomatoes, pasta, weight=350, title=Chicken Soup}
[2022-11-29 14:47:35] - com.app.code.Product{productId=7, price=6, ingredients=pasta, spaghetti, salt, sauce, vegetables, weight=260, title=Spaghetti}
[2022-11-29 14:47:35] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:47:35] - Clearing local Synchronizations
[2022-11-29 14:47:35] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:47:35] - Session with tenant id null was successfully committed
[2022-11-29 14:47:35] - Transaction for session was successfully closed
[2022-11-29 14:47:36] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:47:36] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:47:36] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:47:36] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:47:36] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:47:36] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:47:36] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:47:36] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:47:36] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:47:36] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:47:36] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:47:36] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:47:36] - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:47:36] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0e89a
[2022-11-29 14:47:36] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d67259e
[2022-11-29 14:47:36] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6787edd0
[2022-11-29 14:47:36] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bb3d053
[2022-11-29 14:47:36] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:47:36] - Adding type registration byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:47:36] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56df0783
[2022-11-29 14:47:36] - Adding type registration character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:47:36] - Adding type registration char -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:47:36] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c638f7e
[2022-11-29 14:47:36] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:47:36] - Adding type registration short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:47:36] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e6cea9e
[2022-11-29 14:47:36] - Adding type registration integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:47:36] - Adding type registration int -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:47:36] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:47:36] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:47:36] - Adding type registration long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:47:36] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2464a4d3
[2022-11-29 14:47:36] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:47:36] - Adding type registration float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:47:36] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a77b25
[2022-11-29 14:47:36] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:47:36] - Adding type registration double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:47:36] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@700026d0
[2022-11-29 14:47:36] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:47:36] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c0fc5e
[2022-11-29 14:47:36] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:47:36] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@634183fc
[2022-11-29 14:47:36] - Adding type registration string -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:47:36] - Adding type registration java.lang.String -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:47:36] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@716c1bc8
[2022-11-29 14:47:36] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4489010d
[2022-11-29 14:47:36] - Adding type registration url -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:47:36] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71847781
[2022-11-29 14:47:36] - Adding type registration Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:47:36] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d66a1c
[2022-11-29 14:47:36] - Adding type registration Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:47:36] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32c8cf95
[2022-11-29 14:47:36] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:47:36] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33b9db97
[2022-11-29 14:47:36] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:47:36] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47f726de
[2022-11-29 14:47:36] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:47:36] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f4d81d6
[2022-11-29 14:47:36] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:47:36] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@433bba52
[2022-11-29 14:47:36] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:47:36] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@241d1aca
[2022-11-29 14:47:36] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:47:36] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5493dcc9
[2022-11-29 14:47:36] - Adding type registration date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:47:36] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c03435e
[2022-11-29 14:47:36] - Adding type registration time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:47:36] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3129af0a
[2022-11-29 14:47:36] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:47:36] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:47:36] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f9c2f22
[2022-11-29 14:47:36] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574a19e7
[2022-11-29 14:47:36] - Adding type registration calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:47:36] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:47:36] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40980402
[2022-11-29 14:47:36] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@398df566
[2022-11-29 14:47:36] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@347b15c1
[2022-11-29 14:47:36] - Adding type registration locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:47:36] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67a4b248
[2022-11-29 14:47:36] - Adding type registration currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:47:36] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73702980
[2022-11-29 14:47:36] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:47:36] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c5ddf54
[2022-11-29 14:47:36] - Adding type registration class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:47:36] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@495ea168
[2022-11-29 14:47:36] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:47:36] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4679f897
[2022-11-29 14:47:36] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7914c153
[2022-11-29 14:47:36] - Adding type registration binary -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:47:36] - Adding type registration byte[] -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:47:36] - Adding type registration [B -> org.hibernate.type.BinaryType@a7d8e9a
[2022-11-29 14:47:36] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:47:36] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:47:36] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6275699
[2022-11-29 14:47:36] - Adding type registration row_version -> org.hibernate.type.RowVersionType@429960dd
[2022-11-29 14:47:36] - Adding type registration image -> org.hibernate.type.ImageType@7afeb022
[2022-11-29 14:47:36] - Adding type registration characters -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:47:36] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:47:36] - Adding type registration [C -> org.hibernate.type.CharArrayType@2791bd21
[2022-11-29 14:47:36] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:47:36] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:47:36] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71df38ca
[2022-11-29 14:47:36] - Adding type registration text -> org.hibernate.type.TextType@2a338dd3
[2022-11-29 14:47:36] - Adding type registration ntext -> org.hibernate.type.NTextType@1f9042b9
[2022-11-29 14:47:36] - Adding type registration blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:47:36] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d5d9b9
[2022-11-29 14:47:36] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b084ad0
[2022-11-29 14:47:36] - Adding type registration clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:47:36] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18c43fa6
[2022-11-29 14:47:36] - Adding type registration nclob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:47:36] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70a6089e
[2022-11-29 14:47:36] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@672da4f0
[2022-11-29 14:47:36] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74dcaa86
[2022-11-29 14:47:36] - Adding type registration serializable -> org.hibernate.type.SerializableType@3ebfd470
[2022-11-29 14:47:36] - Adding type registration object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:47:36] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72de6b68
[2022-11-29 14:47:36] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@87e3860
[2022-11-29 14:47:36] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@14c6c96f
[2022-11-29 14:47:36] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38dd54c
[2022-11-29 14:47:36] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@619df1e
[2022-11-29 14:47:36] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f5d5a85
[2022-11-29 14:47:36] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5df279b0
[2022-11-29 14:47:36] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30b8f0f7
[2022-11-29 14:47:36] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@789128d1
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:47:36] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:47:36] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:47:36] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:47:36] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:47:36] - HHH10001003: Autocommit mode: false
[2022-11-29 14:47:36] - Initializing Connection pool with 1 Connections
[2022-11-29 14:47:36] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:47:36] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:47:36] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:47:36] - JDBC version : 4.2
[2022-11-29 14:47:36] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:47:36] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:47:36] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:47:36] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:47:36] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@497fe5ea] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4e0da697]
[2022-11-29 14:47:36] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:47:36] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:47:36] - Import with entity name Customer
[2022-11-29 14:47:36] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:47:36] - building SimpleValue for id
[2022-11-29 14:47:36] - Building property id
[2022-11-29 14:47:36] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:47:36] - building SimpleValue for address
[2022-11-29 14:47:36] - Building property address
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:47:36] - building SimpleValue for email
[2022-11-29 14:47:36] - Building property email
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:47:36] - building SimpleValue for firstName
[2022-11-29 14:47:36] - Building property firstName
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:47:36] - building SimpleValue for job
[2022-11-29 14:47:36] - Building property job
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:47:36] - building SimpleValue for lastName
[2022-11-29 14:47:36] - Building property lastName
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:47:36] - building SimpleValue for location
[2022-11-29 14:47:36] - Building property location
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:47:36] - building SimpleValue for orders
[2022-11-29 14:47:36] - Building property orders
[2022-11-29 14:47:36] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:47:36] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:47:36] - Import with entity name User
[2022-11-29 14:47:36] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:47:36] - building SimpleValue for user_id
[2022-11-29 14:47:36] - Building property user_id
[2022-11-29 14:47:36] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:47:36] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - Building property customer
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:47:36] - building SimpleValue for password
[2022-11-29 14:47:36] - Building property password
[2022-11-29 14:47:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:47:36] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:47:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:47:36] - building SimpleValue for username
[2022-11-29 14:47:36] - Building property username
[2022-11-29 14:47:36] - Starting fillSimpleValue for id
[2022-11-29 14:47:36] - Starting fillSimpleValue for address
[2022-11-29 14:47:36] - Starting fillSimpleValue for email
[2022-11-29 14:47:36] - Starting fillSimpleValue for firstName
[2022-11-29 14:47:36] - Starting fillSimpleValue for job
[2022-11-29 14:47:36] - Starting fillSimpleValue for lastName
[2022-11-29 14:47:36] - Starting fillSimpleValue for location
[2022-11-29 14:47:36] - Starting fillSimpleValue for orders
[2022-11-29 14:47:36] - Starting fillSimpleValue for user_id
[2022-11-29 14:47:36] - Starting fillSimpleValue for password
[2022-11-29 14:47:36] - Starting fillSimpleValue for username
[2022-11-29 14:47:36] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:47:36] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:47:36] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:47:36] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:47:36] - Building session factory
[2022-11-29 14:47:36] - SessionFactory name : null
[2022-11-29 14:47:36] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:47:36] - Automatic session close at end of transaction: disabled
[2022-11-29 14:47:36] - Statistics: disabled
[2022-11-29 14:47:36] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:47:36] - Default entity-mode: pojo
[2022-11-29 14:47:36] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:47:36] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:47:36] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:47:36] - Default batch fetch size: -1
[2022-11-29 14:47:36] - Maximum outer join fetch depth: 2
[2022-11-29 14:47:36] - Default null ordering: NONE
[2022-11-29 14:47:36] - Order SQL updates by primary key: disabled
[2022-11-29 14:47:36] - Order SQL inserts for batching: disabled
[2022-11-29 14:47:36] - multi-tenancy strategy : NONE
[2022-11-29 14:47:36] - JTA Track by Thread: enabled
[2022-11-29 14:47:36] - Query language substitutions: {}
[2022-11-29 14:47:36] - Named query checking : enabled
[2022-11-29 14:47:36] - Second-level cache: disabled
[2022-11-29 14:47:36] - Second-level query cache: disabled
[2022-11-29 14:47:36] - Second-level query cache factory: null
[2022-11-29 14:47:36] - Second-level cache region prefix: null
[2022-11-29 14:47:36] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:47:36] - Structured second-level cache entries: disabled
[2022-11-29 14:47:36] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:47:36] - Automatic eviction of collection cache: disabled
[2022-11-29 14:47:36] - JDBC batch size: 15
[2022-11-29 14:47:36] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:47:36] - Scrollable result sets: enabled
[2022-11-29 14:47:36] - Wrap result sets: disabled
[2022-11-29 14:47:36] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:47:36] - JDBC result set fetch size: null
[2022-11-29 14:47:36] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:47:36] - Generate SQL with comments: disabled
[2022-11-29 14:47:36] - JPA compliance - query : disabled
[2022-11-29 14:47:36] - JPA compliance - closed-handling : disabled
[2022-11-29 14:47:36] - JPA compliance - lists : disabled
[2022-11-29 14:47:36] - JPA compliance - transactions : disabled
[2022-11-29 14:47:36] - Session factory constructed with filter configurations : {}
[2022-11-29 14:47:36] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@49555472, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:47:36] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:47:36] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:47:36] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:47:36] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:47:36] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:47:36] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:47:36] - Loaded expression factory via original TCCL
[2022-11-29 14:47:36] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:47:36] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:47:36] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:47:36] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:47:36] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:47:36] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:47:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:47:36] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:47:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:47:36] - Skipping JACC integration as it was not enabled
[2022-11-29 14:47:36] - Instantiated session factory
[2022-11-29 14:47:36] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@497fe5ea] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4dd79b52]
[2022-11-29 14:47:36] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:47:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:47:36] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:47:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:47:36] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:47:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:47:36] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:47:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:47:36] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:47:36] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:47:36] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:47:36] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:47:36] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:47:36] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:47:36] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:47:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f63b5dc]
[2022-11-29 14:47:36] - Visiting attribute path : address
[2022-11-29 14:47:36] - Visiting attribute path : email
[2022-11-29 14:47:36] - Visiting attribute path : firstName
[2022-11-29 14:47:36] - Visiting attribute path : job
[2022-11-29 14:47:36] - Visiting attribute path : lastName
[2022-11-29 14:47:36] - Visiting attribute path : location
[2022-11-29 14:47:36] - Visiting attribute path : orders
[2022-11-29 14:47:36] - Building LoadPlan...
[2022-11-29 14:47:36] - processing queryspace <gen:0>
[2022-11-29 14:47:36] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:47:36] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:47:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74abe21a]
[2022-11-29 14:47:36] - Visiting attribute path : address
[2022-11-29 14:47:36] - Visiting attribute path : email
[2022-11-29 14:47:36] - Visiting attribute path : firstName
[2022-11-29 14:47:36] - Visiting attribute path : job
[2022-11-29 14:47:36] - Visiting attribute path : lastName
[2022-11-29 14:47:36] - Visiting attribute path : location
[2022-11-29 14:47:36] - Visiting attribute path : orders
[2022-11-29 14:47:36] - Building LoadPlan...
[2022-11-29 14:47:36] - processing queryspace <gen:0>
[2022-11-29 14:47:36] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:47:36] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:47:36] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:47:36] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:47:36] - Static SQL for entity: com.app.code.User
[2022-11-29 14:47:36] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:47:36] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:47:36] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:47:36] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:47:36] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:47:36] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:47:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62c652f1]
[2022-11-29 14:47:36] - Visiting attribute path : customer
[2022-11-29 14:47:36] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59921c4c]
[2022-11-29 14:47:36] - Visiting attribute path : customer.address
[2022-11-29 14:47:36] - Visiting attribute path : customer.email
[2022-11-29 14:47:36] - Visiting attribute path : customer.firstName
[2022-11-29 14:47:36] - Visiting attribute path : customer.job
[2022-11-29 14:47:36] - Visiting attribute path : customer.lastName
[2022-11-29 14:47:36] - Visiting attribute path : customer.location
[2022-11-29 14:47:36] - Visiting attribute path : customer.orders
[2022-11-29 14:47:36] - Visiting attribute path : password
[2022-11-29 14:47:36] - Visiting attribute path : username
[2022-11-29 14:47:36] - Building LoadPlan...
[2022-11-29 14:47:36] - processing queryspace <gen:0>
[2022-11-29 14:47:36] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:47:36] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:47:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c7e61a]
[2022-11-29 14:47:36] - Visiting attribute path : customer
[2022-11-29 14:47:36] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48430672]
[2022-11-29 14:47:36] - Visiting attribute path : customer.address
[2022-11-29 14:47:36] - Visiting attribute path : customer.email
[2022-11-29 14:47:36] - Visiting attribute path : customer.firstName
[2022-11-29 14:47:36] - Visiting attribute path : customer.job
[2022-11-29 14:47:36] - Visiting attribute path : customer.lastName
[2022-11-29 14:47:36] - Visiting attribute path : customer.location
[2022-11-29 14:47:36] - Visiting attribute path : customer.orders
[2022-11-29 14:47:36] - Visiting attribute path : password
[2022-11-29 14:47:36] - Visiting attribute path : username
[2022-11-29 14:47:36] - Building LoadPlan...
[2022-11-29 14:47:36] - processing queryspace <gen:0>
[2022-11-29 14:47:36] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:47:36] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:47:36] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:47:36] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:47:36] - No actions specified; doing nothing
[2022-11-29 14:47:36] - Checking 0 named HQL queries
[2022-11-29 14:47:36] - Checking 0 named SQL queries
[2022-11-29 14:47:36] - Registering SessionFactory: a9865101-c6c7-48ca-b76e-ef6d2264d6b0 (<unnamed>)
[2022-11-29 14:47:36] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:47:36] - A sessionFactory was successfully created.
[2022-11-29 14:47:36] - Statistics initialized [enabled=false]
[2022-11-29 14:47:36] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:47:36] - Session was successfully created.
[2022-11-29 14:47:36] - begin
[2022-11-29 14:47:36] - Transaction for session was successfully started
[2022-11-29 14:47:36] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2b4b0c
[2022-11-29 14:47:36] - parse() - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:47:36] - throwQueryException() : no errors
[2022-11-29 14:47:36] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 14:47:36] - select << begin [level=1, statement=select]
[2022-11-29 14:47:36] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 14:47:36] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:47:36] - getDataType() : username -> org.hibernate.type.StringType@23baf381
[2022-11-29 14:47:36] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 14:47:36] - select : finishing up [level=1, statement=select]
[2022-11-29 14:47:36] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
[2022-11-29 14:47:36] - Derived SELECT clause created.
[2022-11-29 14:47:36] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.User)
          | path: {synthetic-alias}.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

[2022-11-29 14:47:36] - Using FROM fragment [user_detail user0_]
[2022-11-29 14:47:36] - select >> end [level=1, statement=select]
[2022-11-29 14:47:36] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@23baf381}

[2022-11-29 14:47:36] - throwQueryException() : no errors
[2022-11-29 14:47:36] - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:47:36] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:47:36] - throwQueryException() : no errors
[2022-11-29 14:47:36] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:47:36] - Result set row: 0
[2022-11-29 14:47:36] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 14:47:36] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 14:47:36] - Processing attribute `customer` : value = 50
[2022-11-29 14:47:36] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:36] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:47:36] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 14:47:36] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:47:36] - Processing attribute `address` : value = Alecu Ruso 2A
[2022-11-29 14:47:36] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:36] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:47:36] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:36] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:47:36] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:36] - Processing attribute `job` : value = NONE
[2022-11-29 14:47:36] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:36] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:47:36] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:36] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:47:36] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:36] - Processing attribute `orders` : value = 9
[2022-11-29 14:47:36] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:36] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:47:36] - Done entity load : com.app.code.Customer#50
[2022-11-29 14:47:36] - Processing attribute `password` : value = test123
[2022-11-29 14:47:36] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:36] - Processing attribute `username` : value = kerbecs
[2022-11-29 14:47:36] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 14:47:36] - Done materializing entity [com.app.code.User#28]
[2022-11-29 14:47:36] - parse() - HQL: FROM com.app.code.Customer WHERE id=?0
[2022-11-29 14:47:36] - throwQueryException() : no errors
[2022-11-29 14:47:36] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'Customer'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 14:47:36] - select << begin [level=1, statement=select]
[2022-11-29 14:47:36] - FromClause{level=1} : com.app.code.Customer (<no alias>) -> customer0_
[2022-11-29 14:47:36] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:47:36] - getDataType() : id -> org.hibernate.type.IntegerType@5aeccce6
[2022-11-29 14:47:36] - Resolved : {synthetic-alias}.id -> customer0_.customer_id
[2022-11-29 14:47:36] - select : finishing up [level=1, statement=select]
[2022-11-29 14:47:36] - processQuery() :  ( SELECT ( FromClause{level=1} customer customer0_ ) ( WHERE ( = ( customer0_.customer_id {synthetic-alias} id ) ? ) ) )
[2022-11-29 14:47:36] - Derived SELECT clause created.
[2022-11-29 14:47:36] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Customer): [customer]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.Customer)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.Customer)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

[2022-11-29 14:47:36] - Using FROM fragment [customer customer0_]
[2022-11-29 14:47:36] - select >> end [level=1, statement=select]
[2022-11-29 14:47:36] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_.customer_id as customer1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.customer_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.IntegerType@5aeccce6}

[2022-11-29 14:47:36] - throwQueryException() : no errors
[2022-11-29 14:47:36] - HQL: FROM com.app.code.Customer WHERE id=?0
[2022-11-29 14:47:36] - SQL: select customer0_.customer_id as customer1_0_, customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:47:36] - throwQueryException() : no errors
[2022-11-29 14:47:36] - Processing flush-time cascades
[2022-11-29 14:47:36] - Dirty checking collections
[2022-11-29 14:47:36] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 14:47:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:47:36] - Listing entities:
[2022-11-29 14:47:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Alecu Ruso 2A, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:47:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:47:36] - select customer0_.customer_id as customer1_0_, customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:47:36] - Result set row: 0
[2022-11-29 14:47:36] - Result row: EntityKey[com.app.code.Customer#50]
[2022-11-29 14:47:36] - committing
[2022-11-29 14:47:36] - Processing flush-time cascades
[2022-11-29 14:47:36] - Dirty checking collections
[2022-11-29 14:47:36] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 14:47:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:47:36] - Listing entities:
[2022-11-29 14:47:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Alecu Ruso 2A, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:47:36] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:47:36] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:47:36] - Clearing local Synchronizations
[2022-11-29 14:47:36] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:47:36] - Session was successfully committed
[2022-11-29 14:47:36] - Transaction for session was successfully closed

[2022-11-29 14:48:26] - Logging Provider: org.jboss.logging.Slf4jLoggerProvider
[2022-11-29 14:48:26] - HV000001: Hibernate Validator 6.0.21.Final
[2022-11-29 14:48:26] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:48:26] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:48:26] - Loaded expression factory via original TCCL
[2022-11-29 14:48:26] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2022-11-29 14:48:26] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2022-11-29 14:48:26] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2022-11-29 14:48:26] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:48:26] - Trying to load META-INF/validation.xml via user class loader
[2022-11-29 14:48:26] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:48:26] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:48:26] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:48:26] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:48:26] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:48:26] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:48:26] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:48:26] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:48:27] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:48:27] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:48:27] - Loaded expression factory via original TCCL
[2022-11-29 14:48:27] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2022-11-29 14:48:27] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2022-11-29 14:48:27] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2022-11-29 14:48:27] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:48:27] - Trying to load META-INF/validation.xml via user class loader
[2022-11-29 14:48:27] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:48:27] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:48:27] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:48:27] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:48:27] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:48:27] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:48:27] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:48:27] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:48:36] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:48:36] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:48:36] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:48:36] - HHH000412: Hibernate Core {5.4.11.Final}
[2022-11-29 14:48:36] - HHH000206: hibernate.properties not found
[2022-11-29 14:48:37] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:48:37] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:48:37] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:48:37] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:48:37] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:48:37] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:48:37] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:48:37] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:48:38] - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[2022-11-29 14:48:38] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:48:38] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:48:38] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:48:38] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:48:38] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:48:38] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:48:38] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:48:38] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:48:38] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:48:38] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:48:38] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:48:38] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:48:38] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:48:38] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:48:38] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:48:38] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:48:38] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:48:38] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:48:38] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:48:38] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:48:38] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:48:38] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:48:38] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:48:38] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:48:38] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:48:38] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:48:38] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:48:38] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:48:38] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:48:38] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:48:38] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:48:38] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:48:38] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:48:38] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:48:38] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:48:38] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:48:38] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:48:38] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:48:38] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:48:38] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:48:38] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:48:38] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:48:38] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:48:38] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:48:38] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:48:38] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:48:38] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:48:38] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:48:38] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:48:38] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:48:38] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:48:38] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:48:38] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:48:38] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:48:38] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:48:38] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:48:38] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:48:38] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:48:38] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:48:38] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:48:38] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:48:38] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:48:38] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:48:38] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:48:38] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:48:38] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:48:38] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:48:38] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:48:38] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:48:38] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:48:38] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:48:38] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:48:38] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:48:38] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:48:38] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:48:38] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:48:38] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:48:38] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:48:38] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:48:38] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:48:38] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:48:38] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:48:38] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:48:38] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:48:38] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:48:38] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:48:38] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:48:38] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:48:38] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:48:38] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:48:38] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:48:38] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:48:38] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:48:38] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:48:38] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:48:38] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:48:38] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:48:38] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:48:38] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:48:38] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:48:38] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:48:38] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:48:38] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:48:38] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:48:38] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:48:38] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@78e1abe5
[2022-11-29 14:48:38] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@327d0635
[2022-11-29 14:48:38] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@405d9543
[2022-11-29 14:48:38] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@740442d
[2022-11-29 14:48:38] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@728b79a3
[2022-11-29 14:48:38] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@281d9569
[2022-11-29 14:48:38] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@446faa4
[2022-11-29 14:48:38] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@122b72d
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:48:38] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:48:38] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:48:38] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:48:38] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:48:38] - HHH10001003: Autocommit mode: false
[2022-11-29 14:48:38] - Initializing Connection pool with 1 Connections
[2022-11-29 14:48:38] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:48:38] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:48:38] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:48:38] - JDBC version : 4.2
[2022-11-29 14:48:39] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:48:39] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:48:39] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:48:39] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:48:39] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@457fa66d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5256bdac]
[2022-11-29 14:48:39] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:48:39] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:48:39] - Import with entity name User
[2022-11-29 14:48:39] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:48:39] - building SimpleValue for user_id
[2022-11-29 14:48:39] - Building property user_id
[2022-11-29 14:48:39] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:48:39] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - Building property customer
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:48:39] - building SimpleValue for password
[2022-11-29 14:48:39] - Building property password
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:48:39] - building SimpleValue for username
[2022-11-29 14:48:39] - Building property username
[2022-11-29 14:48:39] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:48:39] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:48:39] - Import with entity name Customer
[2022-11-29 14:48:39] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:48:39] - building SimpleValue for id
[2022-11-29 14:48:39] - Building property id
[2022-11-29 14:48:39] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:48:39] - building SimpleValue for address
[2022-11-29 14:48:39] - Building property address
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:48:39] - building SimpleValue for email
[2022-11-29 14:48:39] - Building property email
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:48:39] - building SimpleValue for firstName
[2022-11-29 14:48:39] - Building property firstName
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:48:39] - building SimpleValue for job
[2022-11-29 14:48:39] - Building property job
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:48:39] - building SimpleValue for lastName
[2022-11-29 14:48:39] - Building property lastName
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:48:39] - building SimpleValue for location
[2022-11-29 14:48:39] - Building property location
[2022-11-29 14:48:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:39] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:48:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:48:39] - building SimpleValue for orders
[2022-11-29 14:48:39] - Building property orders
[2022-11-29 14:48:39] - Starting fillSimpleValue for user_id
[2022-11-29 14:48:39] - Starting fillSimpleValue for password
[2022-11-29 14:48:39] - Starting fillSimpleValue for username
[2022-11-29 14:48:39] - Starting fillSimpleValue for id
[2022-11-29 14:48:39] - Starting fillSimpleValue for address
[2022-11-29 14:48:39] - Starting fillSimpleValue for email
[2022-11-29 14:48:39] - Starting fillSimpleValue for firstName
[2022-11-29 14:48:39] - Starting fillSimpleValue for job
[2022-11-29 14:48:39] - Starting fillSimpleValue for lastName
[2022-11-29 14:48:39] - Starting fillSimpleValue for location
[2022-11-29 14:48:39] - Starting fillSimpleValue for orders
[2022-11-29 14:48:39] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:48:39] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:48:39] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:48:39] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:48:39] - Building session factory
[2022-11-29 14:48:39] - SessionFactory name : null
[2022-11-29 14:48:39] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:48:39] - Automatic session close at end of transaction: disabled
[2022-11-29 14:48:39] - Statistics: disabled
[2022-11-29 14:48:39] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:48:39] - Default entity-mode: pojo
[2022-11-29 14:48:39] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:48:39] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:48:39] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:48:39] - Default batch fetch size: -1
[2022-11-29 14:48:39] - Maximum outer join fetch depth: 2
[2022-11-29 14:48:39] - Default null ordering: NONE
[2022-11-29 14:48:39] - Order SQL updates by primary key: disabled
[2022-11-29 14:48:39] - Order SQL inserts for batching: disabled
[2022-11-29 14:48:39] - multi-tenancy strategy : NONE
[2022-11-29 14:48:39] - JTA Track by Thread: enabled
[2022-11-29 14:48:39] - Query language substitutions: {}
[2022-11-29 14:48:39] - Named query checking : enabled
[2022-11-29 14:48:39] - Second-level cache: disabled
[2022-11-29 14:48:39] - Second-level query cache: disabled
[2022-11-29 14:48:39] - Second-level query cache factory: null
[2022-11-29 14:48:39] - Second-level cache region prefix: null
[2022-11-29 14:48:39] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:48:39] - Structured second-level cache entries: disabled
[2022-11-29 14:48:39] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:48:39] - Automatic eviction of collection cache: disabled
[2022-11-29 14:48:39] - JDBC batch size: 15
[2022-11-29 14:48:39] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:48:39] - Scrollable result sets: enabled
[2022-11-29 14:48:39] - Wrap result sets: disabled
[2022-11-29 14:48:39] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:48:39] - JDBC result set fetch size: null
[2022-11-29 14:48:39] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:48:39] - Generate SQL with comments: disabled
[2022-11-29 14:48:39] - JPA compliance - query : disabled
[2022-11-29 14:48:39] - JPA compliance - closed-handling : disabled
[2022-11-29 14:48:39] - JPA compliance - lists : disabled
[2022-11-29 14:48:39] - JPA compliance - transactions : disabled
[2022-11-29 14:48:39] - Session factory constructed with filter configurations : {}
[2022-11-29 14:48:39] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@991f9f6, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:48:40] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:48:40] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:48:40] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:48:40] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:48:40] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:48:40] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:48:40] - Loaded expression factory via original TCCL
[2022-11-29 14:48:40] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:48:40] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:48:40] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:48:40] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:48:40] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:48:40] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:48:40] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:48:40] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:48:40] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:48:40] - Skipping JACC integration as it was not enabled
[2022-11-29 14:48:40] - Instantiated session factory
[2022-11-29 14:48:40] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@457fa66d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@11577343]
[2022-11-29 14:48:40] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:48:40] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:48:40] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:48:40] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:48:40] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:48:40] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:48:40] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:48:40] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:48:40] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:48:40] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:48:40] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:48:40] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:48:40] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:48:40] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:48:40] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:48:40] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d211a4b]
[2022-11-29 14:48:40] - Visiting attribute path : address
[2022-11-29 14:48:40] - Visiting attribute path : email
[2022-11-29 14:48:40] - Visiting attribute path : firstName
[2022-11-29 14:48:40] - Visiting attribute path : job
[2022-11-29 14:48:40] - Visiting attribute path : lastName
[2022-11-29 14:48:40] - Visiting attribute path : location
[2022-11-29 14:48:40] - Visiting attribute path : orders
[2022-11-29 14:48:40] - Building LoadPlan...
[2022-11-29 14:48:40] - processing queryspace <gen:0>
[2022-11-29 14:48:40] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:48:40] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:40] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@356f84de]
[2022-11-29 14:48:40] - Visiting attribute path : address
[2022-11-29 14:48:40] - Visiting attribute path : email
[2022-11-29 14:48:40] - Visiting attribute path : firstName
[2022-11-29 14:48:40] - Visiting attribute path : job
[2022-11-29 14:48:40] - Visiting attribute path : lastName
[2022-11-29 14:48:40] - Visiting attribute path : location
[2022-11-29 14:48:40] - Visiting attribute path : orders
[2022-11-29 14:48:40] - Building LoadPlan...
[2022-11-29 14:48:40] - processing queryspace <gen:0>
[2022-11-29 14:48:40] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:48:40] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:40] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:40] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:40] - Static SQL for entity: com.app.code.User
[2022-11-29 14:48:40] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:48:40] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:48:40] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:48:40] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:48:40] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:48:40] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:48:40] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8833ae]
[2022-11-29 14:48:40] - Visiting attribute path : customer
[2022-11-29 14:48:40] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@613e63a0]
[2022-11-29 14:48:40] - Visiting attribute path : customer.address
[2022-11-29 14:48:40] - Visiting attribute path : customer.email
[2022-11-29 14:48:40] - Visiting attribute path : customer.firstName
[2022-11-29 14:48:40] - Visiting attribute path : customer.job
[2022-11-29 14:48:40] - Visiting attribute path : customer.lastName
[2022-11-29 14:48:40] - Visiting attribute path : customer.location
[2022-11-29 14:48:40] - Visiting attribute path : customer.orders
[2022-11-29 14:48:40] - Visiting attribute path : password
[2022-11-29 14:48:40] - Visiting attribute path : username
[2022-11-29 14:48:40] - Building LoadPlan...
[2022-11-29 14:48:40] - processing queryspace <gen:0>
[2022-11-29 14:48:40] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:48:40] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:40] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@732054f]
[2022-11-29 14:48:40] - Visiting attribute path : customer
[2022-11-29 14:48:40] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ab33b11]
[2022-11-29 14:48:40] - Visiting attribute path : customer.address
[2022-11-29 14:48:40] - Visiting attribute path : customer.email
[2022-11-29 14:48:40] - Visiting attribute path : customer.firstName
[2022-11-29 14:48:40] - Visiting attribute path : customer.job
[2022-11-29 14:48:40] - Visiting attribute path : customer.lastName
[2022-11-29 14:48:40] - Visiting attribute path : customer.location
[2022-11-29 14:48:40] - Visiting attribute path : customer.orders
[2022-11-29 14:48:40] - Visiting attribute path : password
[2022-11-29 14:48:40] - Visiting attribute path : username
[2022-11-29 14:48:40] - Building LoadPlan...
[2022-11-29 14:48:40] - processing queryspace <gen:0>
[2022-11-29 14:48:40] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:48:40] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:40] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:40] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:40] - No actions specified; doing nothing
[2022-11-29 14:48:40] - Checking 0 named HQL queries
[2022-11-29 14:48:40] - Checking 0 named SQL queries
[2022-11-29 14:48:40] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3201fd7d
[2022-11-29 14:48:40] - Registering SessionFactory: 85fa5934-d0e7-4a82-827d-a93c6a053232 (<unnamed>)
[2022-11-29 14:48:40] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:48:40] - A sessionFactory was successfully created.
[2022-11-29 14:48:41] - Statistics initialized [enabled=false]
[2022-11-29 14:48:41] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:48:41] - Session  was successfully created.
[2022-11-29 14:48:41] - begin
[2022-11-29 14:48:41] - Transaction for session was successfully started
[2022-11-29 14:48:41] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ae1ce53
[2022-11-29 14:48:41] - parse() - HQL: FROM com.app.code.User WHERE username = ?0 AND password = ?1
[2022-11-29 14:48:41] - throwQueryException() : no errors
[2022-11-29 14:48:41] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '1'

[2022-11-29 14:48:41] - select << begin [level=1, statement=select]
[2022-11-29 14:48:41] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 14:48:41] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:48:41] - getDataType() : username -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:48:41] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 14:48:41] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:48:41] - getDataType() : password -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:48:41] - Resolved : {synthetic-alias}.password -> user0_.password
[2022-11-29 14:48:41] - select : finishing up [level=1, statement=select]
[2022-11-29 14:48:41] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( AND ( = ( user0_.username {synthetic-alias} username ) ? ) ( = ( user0_.password {synthetic-alias} password ) ? ) ) ) )
[2022-11-29 14:48:41] - Derived SELECT clause created.
[2022-11-29 14:48:41] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | path: {synthetic-alias}.username
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  |  | originalText: {synthetic-alias}
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: username
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.app.code.User)
             | path: {synthetic-alias}.password
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.app.code.User)
             |  | originalText: {synthetic-alias}
             |  \-IdentNode
             |    persister: null
             |    originalText: password
             \-ParameterNode

[2022-11-29 14:48:41] - Using FROM fragment [user_detail user0_]
[2022-11-29 14:48:41] - select >> end [level=1, statement=select]
[2022-11-29 14:48:41] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@5228ece5}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=user0_,className=com.app.code.User,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@5228ece5}

[2022-11-29 14:48:41] - throwQueryException() : no errors
[2022-11-29 14:48:41] - HQL: FROM com.app.code.User WHERE username = ?0 AND password = ?1
[2022-11-29 14:48:41] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=? and user0_.password=?
[2022-11-29 14:48:41] - throwQueryException() : no errors
[2022-11-29 14:48:41] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=? and user0_.password=?
[2022-11-29 14:48:41] - Result set row: 0
[2022-11-29 14:48:41] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 14:48:41] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 14:48:41] - Processing attribute `customer` : value = 50
[2022-11-29 14:48:41] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:41] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:41] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 14:48:41] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:48:41] - Processing attribute `address` : value = Alecu Ruso 2A
[2022-11-29 14:48:41] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:41] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:48:41] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:41] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:48:41] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:41] - Processing attribute `job` : value = NONE
[2022-11-29 14:48:41] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:41] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:48:41] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:41] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:48:41] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:41] - Processing attribute `orders` : value = 9
[2022-11-29 14:48:41] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:41] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:48:41] - Done entity load : com.app.code.Customer#50
[2022-11-29 14:48:41] - Processing attribute `password` : value = test123
[2022-11-29 14:48:41] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:41] - Processing attribute `username` : value = kerbecs
[2022-11-29 14:48:41] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:41] - Done materializing entity [com.app.code.User#28]
[2022-11-29 14:48:41] - committing
[2022-11-29 14:48:41] - Processing flush-time cascades
[2022-11-29 14:48:41] - Dirty checking collections
[2022-11-29 14:48:41] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 14:48:41] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:48:41] - Listing entities:
[2022-11-29 14:48:41] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Alecu Ruso 2A, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:48:41] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:48:41] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:48:41] - Clearing local Synchronizations
[2022-11-29 14:48:41] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:48:41] - Session was successfully committed
[2022-11-29 14:48:41] - Transaction for session with tenant id null was successfully closed
[2022-11-29 14:48:41] - User kerbecs was successfully logged.
[2022-11-29 14:48:42] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:48:42] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:48:42] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:48:42] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:48:42] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:48:42] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:48:42] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:48:42] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:48:42] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:48:42] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:48:42] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:48:42] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:48:42] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:48:42] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:48:42] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:48:42] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:48:42] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:48:42] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:48:42] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:48:42] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:48:42] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:48:42] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:48:42] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:48:42] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:48:42] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:48:42] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:48:42] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:48:42] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:48:42] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:48:42] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:48:42] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:48:42] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:48:42] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:48:42] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:48:42] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:48:42] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:48:42] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:48:42] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:48:42] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:48:42] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:48:42] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:48:42] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:48:42] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:48:42] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:48:42] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:48:42] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:48:42] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:48:42] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:48:42] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:48:42] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:48:42] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:48:42] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:48:42] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:48:42] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:48:42] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:48:42] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:48:42] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:48:42] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:48:42] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:48:42] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:48:42] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:48:42] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:48:42] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:48:42] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:48:42] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:48:42] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:48:42] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:48:42] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:48:42] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:48:42] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:48:42] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:48:42] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:48:42] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:48:42] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:48:42] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:48:42] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:48:42] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:48:42] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:48:42] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:48:42] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:48:42] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:48:42] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:48:42] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:48:42] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:48:42] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:48:42] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:48:42] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:48:42] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:48:42] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:48:42] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:48:42] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:48:42] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:48:42] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:48:42] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:48:42] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:48:42] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:48:42] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:48:42] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:48:42] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:48:42] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:48:42] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:48:42] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:48:42] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:48:42] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:48:42] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:48:42] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:48:42] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:48:42] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:48:42] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:48:42] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:48:42] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:48:42] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:48:42] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:48:42] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:48:42] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:48:42] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:48:42] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57cd71e8
[2022-11-29 14:48:42] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c2d0dc2
[2022-11-29 14:48:42] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26d43759
[2022-11-29 14:48:42] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48d85967
[2022-11-29 14:48:42] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@74a633a5
[2022-11-29 14:48:42] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@108173ee
[2022-11-29 14:48:42] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1768f058
[2022-11-29 14:48:42] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d7180b3
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:48:42] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:48:42] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:48:42] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:48:42] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:48:42] - HHH10001003: Autocommit mode: false
[2022-11-29 14:48:42] - Initializing Connection pool with 1 Connections
[2022-11-29 14:48:42] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:48:42] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:48:42] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:48:42] - JDBC version : 4.2
[2022-11-29 14:48:42] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:48:42] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:48:42] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:48:42] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:48:42] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3741fc1a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4b13b8f]
[2022-11-29 14:48:42] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:48:42] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:48:42] - Import with entity name Customer
[2022-11-29 14:48:42] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:48:42] - building SimpleValue for id
[2022-11-29 14:48:42] - Building property id
[2022-11-29 14:48:42] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:48:42] - building SimpleValue for address
[2022-11-29 14:48:42] - Building property address
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:48:42] - building SimpleValue for email
[2022-11-29 14:48:42] - Building property email
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:48:42] - building SimpleValue for firstName
[2022-11-29 14:48:42] - Building property firstName
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:48:42] - building SimpleValue for job
[2022-11-29 14:48:42] - Building property job
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:48:42] - building SimpleValue for lastName
[2022-11-29 14:48:42] - Building property lastName
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:48:42] - building SimpleValue for location
[2022-11-29 14:48:42] - Building property location
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:48:42] - building SimpleValue for orders
[2022-11-29 14:48:42] - Building property orders
[2022-11-29 14:48:42] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:48:42] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:48:42] - Import with entity name User
[2022-11-29 14:48:42] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:48:42] - building SimpleValue for user_id
[2022-11-29 14:48:42] - Building property user_id
[2022-11-29 14:48:42] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:48:42] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - Building property customer
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:48:42] - building SimpleValue for password
[2022-11-29 14:48:42] - Building property password
[2022-11-29 14:48:42] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:42] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:48:42] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:48:42] - building SimpleValue for username
[2022-11-29 14:48:42] - Building property username
[2022-11-29 14:48:42] - Starting fillSimpleValue for id
[2022-11-29 14:48:42] - Starting fillSimpleValue for address
[2022-11-29 14:48:42] - Starting fillSimpleValue for email
[2022-11-29 14:48:42] - Starting fillSimpleValue for firstName
[2022-11-29 14:48:42] - Starting fillSimpleValue for job
[2022-11-29 14:48:42] - Starting fillSimpleValue for lastName
[2022-11-29 14:48:42] - Starting fillSimpleValue for location
[2022-11-29 14:48:42] - Starting fillSimpleValue for orders
[2022-11-29 14:48:42] - Starting fillSimpleValue for user_id
[2022-11-29 14:48:42] - Starting fillSimpleValue for password
[2022-11-29 14:48:42] - Starting fillSimpleValue for username
[2022-11-29 14:48:42] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:48:42] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:48:42] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:48:42] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:48:42] - Building session factory
[2022-11-29 14:48:42] - SessionFactory name : null
[2022-11-29 14:48:42] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:48:42] - Automatic session close at end of transaction: disabled
[2022-11-29 14:48:42] - Statistics: disabled
[2022-11-29 14:48:42] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:48:42] - Default entity-mode: pojo
[2022-11-29 14:48:42] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:48:42] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:48:42] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:48:42] - Default batch fetch size: -1
[2022-11-29 14:48:42] - Maximum outer join fetch depth: 2
[2022-11-29 14:48:42] - Default null ordering: NONE
[2022-11-29 14:48:42] - Order SQL updates by primary key: disabled
[2022-11-29 14:48:42] - Order SQL inserts for batching: disabled
[2022-11-29 14:48:42] - multi-tenancy strategy : NONE
[2022-11-29 14:48:42] - JTA Track by Thread: enabled
[2022-11-29 14:48:42] - Query language substitutions: {}
[2022-11-29 14:48:42] - Named query checking : enabled
[2022-11-29 14:48:42] - Second-level cache: disabled
[2022-11-29 14:48:42] - Second-level query cache: disabled
[2022-11-29 14:48:42] - Second-level query cache factory: null
[2022-11-29 14:48:42] - Second-level cache region prefix: null
[2022-11-29 14:48:42] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:48:42] - Structured second-level cache entries: disabled
[2022-11-29 14:48:42] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:48:42] - Automatic eviction of collection cache: disabled
[2022-11-29 14:48:42] - JDBC batch size: 15
[2022-11-29 14:48:42] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:48:42] - Scrollable result sets: enabled
[2022-11-29 14:48:42] - Wrap result sets: disabled
[2022-11-29 14:48:42] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:48:42] - JDBC result set fetch size: null
[2022-11-29 14:48:42] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:48:42] - Generate SQL with comments: disabled
[2022-11-29 14:48:42] - JPA compliance - query : disabled
[2022-11-29 14:48:42] - JPA compliance - closed-handling : disabled
[2022-11-29 14:48:42] - JPA compliance - lists : disabled
[2022-11-29 14:48:42] - JPA compliance - transactions : disabled
[2022-11-29 14:48:42] - Session factory constructed with filter configurations : {}
[2022-11-29 14:48:42] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7e255190, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:48:42] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:48:42] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:48:42] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:48:42] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:48:42] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:48:42] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:48:42] - Loaded expression factory via original TCCL
[2022-11-29 14:48:42] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:48:42] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:48:42] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:48:42] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:48:42] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:48:42] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:48:42] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:48:42] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:48:42] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:48:42] - Skipping JACC integration as it was not enabled
[2022-11-29 14:48:42] - Instantiated session factory
[2022-11-29 14:48:42] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3741fc1a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@51bdce09]
[2022-11-29 14:48:42] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:48:42] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:48:42] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:48:42] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:48:42] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:48:42] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:48:42] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:48:42] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:48:42] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:48:42] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:48:42] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:48:42] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:48:42] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:48:42] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:48:42] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:48:42] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba58334]
[2022-11-29 14:48:42] - Visiting attribute path : address
[2022-11-29 14:48:42] - Visiting attribute path : email
[2022-11-29 14:48:42] - Visiting attribute path : firstName
[2022-11-29 14:48:42] - Visiting attribute path : job
[2022-11-29 14:48:42] - Visiting attribute path : lastName
[2022-11-29 14:48:42] - Visiting attribute path : location
[2022-11-29 14:48:42] - Visiting attribute path : orders
[2022-11-29 14:48:42] - Building LoadPlan...
[2022-11-29 14:48:42] - processing queryspace <gen:0>
[2022-11-29 14:48:42] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:48:42] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:42] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e2b9d0a]
[2022-11-29 14:48:42] - Visiting attribute path : address
[2022-11-29 14:48:42] - Visiting attribute path : email
[2022-11-29 14:48:42] - Visiting attribute path : firstName
[2022-11-29 14:48:42] - Visiting attribute path : job
[2022-11-29 14:48:42] - Visiting attribute path : lastName
[2022-11-29 14:48:42] - Visiting attribute path : location
[2022-11-29 14:48:42] - Visiting attribute path : orders
[2022-11-29 14:48:42] - Building LoadPlan...
[2022-11-29 14:48:42] - processing queryspace <gen:0>
[2022-11-29 14:48:42] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:48:42] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:42] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:42] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:42] - Static SQL for entity: com.app.code.User
[2022-11-29 14:48:42] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:48:42] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:48:42] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:48:42] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:48:42] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:48:42] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:48:42] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@223a0844]
[2022-11-29 14:48:42] - Visiting attribute path : customer
[2022-11-29 14:48:42] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bde9c0]
[2022-11-29 14:48:42] - Visiting attribute path : customer.address
[2022-11-29 14:48:42] - Visiting attribute path : customer.email
[2022-11-29 14:48:42] - Visiting attribute path : customer.firstName
[2022-11-29 14:48:42] - Visiting attribute path : customer.job
[2022-11-29 14:48:42] - Visiting attribute path : customer.lastName
[2022-11-29 14:48:42] - Visiting attribute path : customer.location
[2022-11-29 14:48:42] - Visiting attribute path : customer.orders
[2022-11-29 14:48:42] - Visiting attribute path : password
[2022-11-29 14:48:42] - Visiting attribute path : username
[2022-11-29 14:48:42] - Building LoadPlan...
[2022-11-29 14:48:42] - processing queryspace <gen:0>
[2022-11-29 14:48:42] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:48:42] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:42] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cf0490c]
[2022-11-29 14:48:42] - Visiting attribute path : customer
[2022-11-29 14:48:42] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3658b9bc]
[2022-11-29 14:48:42] - Visiting attribute path : customer.address
[2022-11-29 14:48:42] - Visiting attribute path : customer.email
[2022-11-29 14:48:42] - Visiting attribute path : customer.firstName
[2022-11-29 14:48:42] - Visiting attribute path : customer.job
[2022-11-29 14:48:42] - Visiting attribute path : customer.lastName
[2022-11-29 14:48:42] - Visiting attribute path : customer.location
[2022-11-29 14:48:42] - Visiting attribute path : customer.orders
[2022-11-29 14:48:42] - Visiting attribute path : password
[2022-11-29 14:48:42] - Visiting attribute path : username
[2022-11-29 14:48:42] - Building LoadPlan...
[2022-11-29 14:48:42] - processing queryspace <gen:0>
[2022-11-29 14:48:42] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:48:42] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:42] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:42] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:42] - No actions specified; doing nothing
[2022-11-29 14:48:42] - Checking 0 named HQL queries
[2022-11-29 14:48:42] - Checking 0 named SQL queries
[2022-11-29 14:48:42] - Registering SessionFactory: b9b88efd-508c-448a-ae9a-39138556d245 (<unnamed>)
[2022-11-29 14:48:42] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:48:42] - A sessionFactory was successfully created.
[2022-11-29 14:48:42] - Statistics initialized [enabled=false]
[2022-11-29 14:48:42] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:48:42] - Session was successfully created.
[2022-11-29 14:48:42] - begin
[2022-11-29 14:48:42] - Transaction for session was successfully started
[2022-11-29 14:48:42] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ae1ce53
[2022-11-29 14:48:42] - parse() - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:48:42] - throwQueryException() : no errors
[2022-11-29 14:48:42] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 14:48:42] - select << begin [level=1, statement=select]
[2022-11-29 14:48:42] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 14:48:42] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:48:42] - getDataType() : username -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:48:42] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 14:48:42] - select : finishing up [level=1, statement=select]
[2022-11-29 14:48:42] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
[2022-11-29 14:48:42] - Derived SELECT clause created.
[2022-11-29 14:48:42] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.User)
          | path: {synthetic-alias}.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

[2022-11-29 14:48:42] - Using FROM fragment [user_detail user0_]
[2022-11-29 14:48:42] - select >> end [level=1, statement=select]
[2022-11-29 14:48:42] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@5228ece5}

[2022-11-29 14:48:42] - throwQueryException() : no errors
[2022-11-29 14:48:42] - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:48:42] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:48:42] - throwQueryException() : no errors
[2022-11-29 14:48:42] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:48:42] - Result set row: 0
[2022-11-29 14:48:42] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 14:48:42] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 14:48:42] - Processing attribute `customer` : value = 50
[2022-11-29 14:48:42] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:42] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:42] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 14:48:42] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:48:42] - Processing attribute `address` : value = Alecu Ruso 2A
[2022-11-29 14:48:42] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:42] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:48:42] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:42] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:48:42] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:42] - Processing attribute `job` : value = NONE
[2022-11-29 14:48:42] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:42] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:48:42] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:42] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:48:42] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:42] - Processing attribute `orders` : value = 9
[2022-11-29 14:48:42] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:42] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:48:42] - Done entity load : com.app.code.Customer#50
[2022-11-29 14:48:42] - Processing attribute `password` : value = test123
[2022-11-29 14:48:42] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:42] - Processing attribute `username` : value = kerbecs
[2022-11-29 14:48:42] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:42] - Done materializing entity [com.app.code.User#28]
[2022-11-29 14:48:42] - parse() - HQL: FROM com.app.code.Customer WHERE id=?0
[2022-11-29 14:48:42] - throwQueryException() : no errors
[2022-11-29 14:48:42] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'Customer'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 14:48:42] - select << begin [level=1, statement=select]
[2022-11-29 14:48:42] - FromClause{level=1} : com.app.code.Customer (<no alias>) -> customer0_
[2022-11-29 14:48:42] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:48:42] - getDataType() : id -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:48:42] - Resolved : {synthetic-alias}.id -> customer0_.customer_id
[2022-11-29 14:48:42] - select : finishing up [level=1, statement=select]
[2022-11-29 14:48:42] - processQuery() :  ( SELECT ( FromClause{level=1} customer customer0_ ) ( WHERE ( = ( customer0_.customer_id {synthetic-alias} id ) ? ) ) )
[2022-11-29 14:48:42] - Derived SELECT clause created.
[2022-11-29 14:48:42] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Customer): [customer]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.Customer)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.Customer)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

[2022-11-29 14:48:42] - Using FROM fragment [customer customer0_]
[2022-11-29 14:48:42] - select >> end [level=1, statement=select]
[2022-11-29 14:48:42] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_.customer_id as customer1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.customer_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.IntegerType@7f14c9ef}

[2022-11-29 14:48:42] - throwQueryException() : no errors
[2022-11-29 14:48:42] - HQL: FROM com.app.code.Customer WHERE id=?0
[2022-11-29 14:48:42] - SQL: select customer0_.customer_id as customer1_0_, customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:42] - throwQueryException() : no errors
[2022-11-29 14:48:42] - Processing flush-time cascades
[2022-11-29 14:48:42] - Dirty checking collections
[2022-11-29 14:48:42] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 14:48:42] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:48:42] - Listing entities:
[2022-11-29 14:48:42] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Alecu Ruso 2A, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:48:42] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:48:42] - select customer0_.customer_id as customer1_0_, customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:42] - Result set row: 0
[2022-11-29 14:48:42] - Result row: EntityKey[com.app.code.Customer#50]
[2022-11-29 14:48:42] - committing
[2022-11-29 14:48:42] - Processing flush-time cascades
[2022-11-29 14:48:42] - Dirty checking collections
[2022-11-29 14:48:42] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2022-11-29 14:48:42] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:48:42] - Listing entities:
[2022-11-29 14:48:42] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Alecu Ruso 2A, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:48:42] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:48:42] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:48:42] - Clearing local Synchronizations
[2022-11-29 14:48:42] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:48:42] - Session was successfully committed
[2022-11-29 14:48:42] - Transaction for session was successfully closed
[2022-11-29 14:48:47] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:48:47] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:48:47] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:48:47] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:48:47] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:48:47] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:48:47] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:48:47] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:48:47] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:48:47] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:48:47] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:48:47] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:48:47] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:48:47] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:48:47] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:48:47] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:48:47] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:48:47] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:48:47] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:48:47] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:48:47] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:48:47] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:48:47] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:48:47] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:48:47] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:48:47] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:48:47] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:48:47] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:48:47] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:48:47] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:48:47] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:48:47] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:48:47] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:48:47] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:48:47] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:48:47] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:48:47] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:48:47] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:48:47] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:48:47] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:48:47] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:48:47] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:48:47] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:48:47] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:48:47] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:48:47] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:48:47] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:48:47] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:48:47] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:48:47] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:48:47] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:48:47] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:48:47] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:48:47] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:48:47] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:48:47] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:48:47] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:48:47] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:48:47] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:48:47] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:48:47] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:48:47] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:48:47] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:48:47] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:48:47] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:48:47] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:48:47] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:48:47] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:48:47] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:48:47] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:48:47] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:48:47] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:48:47] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:48:47] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:48:47] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:48:47] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:48:47] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:48:47] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:48:47] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:48:47] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:48:47] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:48:47] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:48:47] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:48:47] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:48:47] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:48:47] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:48:47] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:48:47] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:48:47] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:48:47] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:48:47] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:48:47] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:48:47] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:48:47] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:48:47] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:48:47] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:48:47] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:48:47] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:48:47] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:48:47] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:48:47] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:48:47] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:48:47] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:48:47] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:48:47] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:48:47] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:48:47] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:48:47] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:48:47] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:48:47] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:48:47] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:48:47] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:48:47] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:48:47] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:48:47] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:48:47] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:48:47] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1e0cc72
[2022-11-29 14:48:47] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7859cfee
[2022-11-29 14:48:47] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@28a388c4
[2022-11-29 14:48:47] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63b406db
[2022-11-29 14:48:47] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64b0c583
[2022-11-29 14:48:47] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@52a05044
[2022-11-29 14:48:47] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6671177c
[2022-11-29 14:48:47] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25b047b7
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:48:47] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:48:47] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:48:47] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:48:47] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:48:47] - HHH10001003: Autocommit mode: false
[2022-11-29 14:48:47] - Initializing Connection pool with 1 Connections
[2022-11-29 14:48:47] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:48:47] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:48:47] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:48:47] - JDBC version : 4.2
[2022-11-29 14:48:47] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:48:47] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:48:47] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:48:47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:48:47] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7258c896] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3c68a92a]
[2022-11-29 14:48:47] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:48:47] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:48:47] - Import with entity name Customer
[2022-11-29 14:48:47] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:48:47] - building SimpleValue for id
[2022-11-29 14:48:47] - Building property id
[2022-11-29 14:48:47] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:48:47] - building SimpleValue for address
[2022-11-29 14:48:47] - Building property address
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:48:47] - building SimpleValue for email
[2022-11-29 14:48:47] - Building property email
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:48:47] - building SimpleValue for firstName
[2022-11-29 14:48:47] - Building property firstName
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:48:47] - building SimpleValue for job
[2022-11-29 14:48:47] - Building property job
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:48:47] - building SimpleValue for lastName
[2022-11-29 14:48:47] - Building property lastName
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:48:47] - building SimpleValue for location
[2022-11-29 14:48:47] - Building property location
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:48:47] - building SimpleValue for orders
[2022-11-29 14:48:47] - Building property orders
[2022-11-29 14:48:47] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:48:47] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:48:47] - Import with entity name User
[2022-11-29 14:48:47] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:48:47] - building SimpleValue for user_id
[2022-11-29 14:48:47] - Building property user_id
[2022-11-29 14:48:47] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:48:47] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - Building property customer
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:48:47] - building SimpleValue for password
[2022-11-29 14:48:47] - Building property password
[2022-11-29 14:48:47] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:48:47] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:48:47] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:48:47] - building SimpleValue for username
[2022-11-29 14:48:47] - Building property username
[2022-11-29 14:48:47] - Starting fillSimpleValue for id
[2022-11-29 14:48:47] - Starting fillSimpleValue for address
[2022-11-29 14:48:47] - Starting fillSimpleValue for email
[2022-11-29 14:48:47] - Starting fillSimpleValue for firstName
[2022-11-29 14:48:47] - Starting fillSimpleValue for job
[2022-11-29 14:48:47] - Starting fillSimpleValue for lastName
[2022-11-29 14:48:47] - Starting fillSimpleValue for location
[2022-11-29 14:48:47] - Starting fillSimpleValue for orders
[2022-11-29 14:48:47] - Starting fillSimpleValue for user_id
[2022-11-29 14:48:47] - Starting fillSimpleValue for password
[2022-11-29 14:48:47] - Starting fillSimpleValue for username
[2022-11-29 14:48:47] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:48:47] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:48:47] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:48:47] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:48:47] - Building session factory
[2022-11-29 14:48:47] - SessionFactory name : null
[2022-11-29 14:48:47] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:48:47] - Automatic session close at end of transaction: disabled
[2022-11-29 14:48:47] - Statistics: disabled
[2022-11-29 14:48:47] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:48:47] - Default entity-mode: pojo
[2022-11-29 14:48:47] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:48:47] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:48:47] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:48:47] - Default batch fetch size: -1
[2022-11-29 14:48:47] - Maximum outer join fetch depth: 2
[2022-11-29 14:48:47] - Default null ordering: NONE
[2022-11-29 14:48:47] - Order SQL updates by primary key: disabled
[2022-11-29 14:48:47] - Order SQL inserts for batching: disabled
[2022-11-29 14:48:47] - multi-tenancy strategy : NONE
[2022-11-29 14:48:47] - JTA Track by Thread: enabled
[2022-11-29 14:48:47] - Query language substitutions: {}
[2022-11-29 14:48:47] - Named query checking : enabled
[2022-11-29 14:48:47] - Second-level cache: disabled
[2022-11-29 14:48:47] - Second-level query cache: disabled
[2022-11-29 14:48:47] - Second-level query cache factory: null
[2022-11-29 14:48:47] - Second-level cache region prefix: null
[2022-11-29 14:48:47] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:48:47] - Structured second-level cache entries: disabled
[2022-11-29 14:48:47] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:48:47] - Automatic eviction of collection cache: disabled
[2022-11-29 14:48:47] - JDBC batch size: 15
[2022-11-29 14:48:47] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:48:47] - Scrollable result sets: enabled
[2022-11-29 14:48:47] - Wrap result sets: disabled
[2022-11-29 14:48:47] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:48:47] - JDBC result set fetch size: null
[2022-11-29 14:48:47] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:48:47] - Generate SQL with comments: disabled
[2022-11-29 14:48:47] - JPA compliance - query : disabled
[2022-11-29 14:48:47] - JPA compliance - closed-handling : disabled
[2022-11-29 14:48:47] - JPA compliance - lists : disabled
[2022-11-29 14:48:47] - JPA compliance - transactions : disabled
[2022-11-29 14:48:47] - Session factory constructed with filter configurations : {}
[2022-11-29 14:48:47] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@48f84d5b, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:48:47] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:48:47] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:48:47] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:48:47] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:48:47] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:48:47] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:48:47] - Loaded expression factory via original TCCL
[2022-11-29 14:48:47] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:48:47] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:48:47] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:48:47] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:48:47] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:48:47] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:48:47] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:48:47] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:48:47] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:48:47] - Skipping JACC integration as it was not enabled
[2022-11-29 14:48:47] - Instantiated session factory
[2022-11-29 14:48:47] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7258c896] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4ec119d1]
[2022-11-29 14:48:47] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:48:47] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:48:47] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:48:47] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:48:47] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:48:47] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:48:47] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:48:47] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:48:47] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:48:47] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:48:47] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:48:47] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:48:47] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:48:47] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:48:47] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:48:47] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ddc75d0]
[2022-11-29 14:48:47] - Visiting attribute path : address
[2022-11-29 14:48:47] - Visiting attribute path : email
[2022-11-29 14:48:47] - Visiting attribute path : firstName
[2022-11-29 14:48:47] - Visiting attribute path : job
[2022-11-29 14:48:47] - Visiting attribute path : lastName
[2022-11-29 14:48:47] - Visiting attribute path : location
[2022-11-29 14:48:47] - Visiting attribute path : orders
[2022-11-29 14:48:47] - Building LoadPlan...
[2022-11-29 14:48:47] - processing queryspace <gen:0>
[2022-11-29 14:48:47] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:48:47] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:47] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2700ebd2]
[2022-11-29 14:48:47] - Visiting attribute path : address
[2022-11-29 14:48:47] - Visiting attribute path : email
[2022-11-29 14:48:47] - Visiting attribute path : firstName
[2022-11-29 14:48:47] - Visiting attribute path : job
[2022-11-29 14:48:47] - Visiting attribute path : lastName
[2022-11-29 14:48:47] - Visiting attribute path : location
[2022-11-29 14:48:47] - Visiting attribute path : orders
[2022-11-29 14:48:47] - Building LoadPlan...
[2022-11-29 14:48:47] - processing queryspace <gen:0>
[2022-11-29 14:48:47] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:48:47] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:47] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:47] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:47] - Static SQL for entity: com.app.code.User
[2022-11-29 14:48:47] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:48:47] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:48:47] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:48:47] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:48:47] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:48:47] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:48:47] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5680ce6d]
[2022-11-29 14:48:47] - Visiting attribute path : customer
[2022-11-29 14:48:47] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f42818b]
[2022-11-29 14:48:47] - Visiting attribute path : customer.address
[2022-11-29 14:48:47] - Visiting attribute path : customer.email
[2022-11-29 14:48:47] - Visiting attribute path : customer.firstName
[2022-11-29 14:48:47] - Visiting attribute path : customer.job
[2022-11-29 14:48:47] - Visiting attribute path : customer.lastName
[2022-11-29 14:48:47] - Visiting attribute path : customer.location
[2022-11-29 14:48:47] - Visiting attribute path : customer.orders
[2022-11-29 14:48:47] - Visiting attribute path : password
[2022-11-29 14:48:47] - Visiting attribute path : username
[2022-11-29 14:48:47] - Building LoadPlan...
[2022-11-29 14:48:47] - processing queryspace <gen:0>
[2022-11-29 14:48:47] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:48:47] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:47] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e517fd]
[2022-11-29 14:48:47] - Visiting attribute path : customer
[2022-11-29 14:48:47] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2488e224]
[2022-11-29 14:48:47] - Visiting attribute path : customer.address
[2022-11-29 14:48:47] - Visiting attribute path : customer.email
[2022-11-29 14:48:47] - Visiting attribute path : customer.firstName
[2022-11-29 14:48:47] - Visiting attribute path : customer.job
[2022-11-29 14:48:47] - Visiting attribute path : customer.lastName
[2022-11-29 14:48:47] - Visiting attribute path : customer.location
[2022-11-29 14:48:47] - Visiting attribute path : customer.orders
[2022-11-29 14:48:47] - Visiting attribute path : password
[2022-11-29 14:48:47] - Visiting attribute path : username
[2022-11-29 14:48:47] - Building LoadPlan...
[2022-11-29 14:48:47] - processing queryspace <gen:0>
[2022-11-29 14:48:47] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:48:47] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:47] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:47] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:48:47] - No actions specified; doing nothing
[2022-11-29 14:48:47] - Checking 0 named HQL queries
[2022-11-29 14:48:47] - Checking 0 named SQL queries
[2022-11-29 14:48:47] - Registering SessionFactory: cafcf977-3725-4421-8551-b2b12e77567d (<unnamed>)
[2022-11-29 14:48:47] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:48:47] - A sessionFactory was successfully created.
[2022-11-29 14:48:47] - Statistics initialized [enabled=false]
[2022-11-29 14:48:47] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:48:47] - Session was successfully created.
[2022-11-29 14:48:47] - begin
[2022-11-29 14:48:47] - Transaction for session was successfully started
[2022-11-29 14:48:47] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ae1ce53
[2022-11-29 14:48:47] - parse() - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:48:47] - throwQueryException() : no errors
[2022-11-29 14:48:47] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 14:48:47] - select << begin [level=1, statement=select]
[2022-11-29 14:48:47] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 14:48:47] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:48:47] - getDataType() : username -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:48:47] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 14:48:47] - select : finishing up [level=1, statement=select]
[2022-11-29 14:48:47] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
[2022-11-29 14:48:47] - Derived SELECT clause created.
[2022-11-29 14:48:47] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.User)
          | path: {synthetic-alias}.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

[2022-11-29 14:48:47] - Using FROM fragment [user_detail user0_]
[2022-11-29 14:48:47] - select >> end [level=1, statement=select]
[2022-11-29 14:48:47] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@5228ece5}

[2022-11-29 14:48:47] - throwQueryException() : no errors
[2022-11-29 14:48:47] - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:48:47] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:48:47] - throwQueryException() : no errors
[2022-11-29 14:48:47] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:48:47] - Result set row: 0
[2022-11-29 14:48:47] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 14:48:47] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 14:48:47] - Processing attribute `customer` : value = 50
[2022-11-29 14:48:47] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:47] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:48:47] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 14:48:47] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:48:47] - Processing attribute `address` : value = Alecu Ruso 2A
[2022-11-29 14:48:47] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:47] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:48:47] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:47] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:48:47] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:47] - Processing attribute `job` : value = NONE
[2022-11-29 14:48:47] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:47] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:48:47] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:47] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:48:47] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:47] - Processing attribute `orders` : value = 9
[2022-11-29 14:48:47] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:47] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:48:47] - Done entity load : com.app.code.Customer#50
[2022-11-29 14:48:47] - Processing attribute `password` : value = test123
[2022-11-29 14:48:47] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:47] - Processing attribute `username` : value = kerbecs
[2022-11-29 14:48:47] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 14:48:47] - Done materializing entity [com.app.code.User#28]
[2022-11-29 14:48:47] - committing
[2022-11-29 14:48:47] - Processing flush-time cascades
[2022-11-29 14:48:47] - Dirty checking collections
[2022-11-29 14:48:47] - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
[2022-11-29 14:48:47] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:48:47] - Listing entities:
[2022-11-29 14:48:47] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=, location=Chisinau, orders=9, id=50, job=NONE, email=edikutsu2002@mail.ru}
[2022-11-29 14:48:47] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:48:47] - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:393)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1360)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:447)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3233)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2401)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.app.code.HibernateClass.updateProfile(HibernateClass.java:206)
	at com.app.code.ControllerConfig.updateProfile(ControllerConfig.java:112)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
[2022-11-29 14:48:47] - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.app.code.HibernateClass.updateProfile(HibernateClass.java:206)
	at com.app.code.ControllerConfig.updateProfile(ControllerConfig.java:112)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
[2022-11-29 14:48:47] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:48:47] - Clearing local Synchronizations
[2022-11-29 14:48:47] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:48:47] - Validation failed for classes [com.app.code.Customer] during update time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='Enter an address between 2 and 20', propertyPath=address, rootBeanClass=class com.app.code.Customer, messageTemplate='Enter an address between 2 and 20'}
]
[2022-11-29 14:48:47] - Transaction for session was successfully closed
[2022-11-29 14:48:47] - Can't modify profile of user kerbecs
[2022-11-29 14:49:07] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:49:07] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:49:07] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:49:07] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:49:07] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:49:07] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:49:07] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:49:07] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:49:07] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:49:07] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:49:07] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:49:07] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:49:07] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:49:07] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:49:07] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:49:07] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:49:07] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:49:07] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:49:07] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:49:07] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:49:07] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:49:07] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:49:07] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:49:07] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:49:07] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:49:07] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:49:07] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:49:07] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:49:07] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:49:07] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:49:07] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:49:07] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:49:07] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:49:07] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:49:07] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:49:07] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:49:07] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:49:07] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:49:07] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:49:07] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:49:07] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:49:07] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:49:07] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:49:07] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:49:07] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:49:07] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:49:07] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:49:07] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:49:07] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:49:07] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:49:07] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:49:07] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:49:07] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:49:07] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:49:07] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:49:07] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:49:07] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:49:07] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:49:07] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:49:07] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:49:07] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:49:07] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:49:07] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:49:07] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:49:07] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:49:07] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:49:07] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:49:07] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:49:07] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:49:07] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:49:07] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:49:07] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:49:07] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:49:07] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:49:07] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:49:07] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:49:07] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:49:07] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:49:07] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:49:07] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:49:07] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:49:07] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:49:07] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:49:07] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:49:07] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:49:07] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:49:07] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:49:07] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:49:07] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:49:07] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:49:07] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:49:07] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:49:07] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:49:07] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:49:07] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:49:07] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:49:07] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:49:07] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:49:07] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:49:07] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:49:07] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:49:07] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:49:07] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:49:07] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:49:07] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:49:07] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:49:07] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:49:07] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:49:07] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:49:07] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:49:07] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:49:07] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:49:07] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:49:07] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:49:07] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:49:07] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:49:07] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@758f2544
[2022-11-29 14:49:07] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4493a3d9
[2022-11-29 14:49:07] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@398a800d
[2022-11-29 14:49:07] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20af083c
[2022-11-29 14:49:07] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c06bc68
[2022-11-29 14:49:07] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75d24f5a
[2022-11-29 14:49:07] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@18353305
[2022-11-29 14:49:07] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@400326d7
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:49:07] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:49:07] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:49:07] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:49:07] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:49:07] - HHH10001003: Autocommit mode: false
[2022-11-29 14:49:07] - Initializing Connection pool with 1 Connections
[2022-11-29 14:49:07] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:49:07] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:49:07] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:49:07] - JDBC version : 4.2
[2022-11-29 14:49:07] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:49:07] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:49:07] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:49:07] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:49:07] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78ec5466] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@78858b8]
[2022-11-29 14:49:07] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:49:07] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:49:07] - Import with entity name Customer
[2022-11-29 14:49:07] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:49:07] - building SimpleValue for id
[2022-11-29 14:49:07] - Building property id
[2022-11-29 14:49:07] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:49:07] - building SimpleValue for address
[2022-11-29 14:49:07] - Building property address
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:49:07] - building SimpleValue for email
[2022-11-29 14:49:07] - Building property email
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:49:07] - building SimpleValue for firstName
[2022-11-29 14:49:07] - Building property firstName
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:49:07] - building SimpleValue for job
[2022-11-29 14:49:07] - Building property job
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:49:07] - building SimpleValue for lastName
[2022-11-29 14:49:07] - Building property lastName
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:49:07] - building SimpleValue for location
[2022-11-29 14:49:07] - Building property location
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:49:07] - building SimpleValue for orders
[2022-11-29 14:49:07] - Building property orders
[2022-11-29 14:49:07] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:49:07] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:49:07] - Import with entity name User
[2022-11-29 14:49:07] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:49:07] - building SimpleValue for user_id
[2022-11-29 14:49:07] - Building property user_id
[2022-11-29 14:49:07] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:49:07] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - Building property customer
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:49:07] - building SimpleValue for password
[2022-11-29 14:49:07] - Building property password
[2022-11-29 14:49:07] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:07] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:49:07] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:49:07] - building SimpleValue for username
[2022-11-29 14:49:07] - Building property username
[2022-11-29 14:49:07] - Starting fillSimpleValue for id
[2022-11-29 14:49:07] - Starting fillSimpleValue for address
[2022-11-29 14:49:07] - Starting fillSimpleValue for email
[2022-11-29 14:49:07] - Starting fillSimpleValue for firstName
[2022-11-29 14:49:07] - Starting fillSimpleValue for job
[2022-11-29 14:49:07] - Starting fillSimpleValue for lastName
[2022-11-29 14:49:07] - Starting fillSimpleValue for location
[2022-11-29 14:49:07] - Starting fillSimpleValue for orders
[2022-11-29 14:49:07] - Starting fillSimpleValue for user_id
[2022-11-29 14:49:07] - Starting fillSimpleValue for password
[2022-11-29 14:49:07] - Starting fillSimpleValue for username
[2022-11-29 14:49:07] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:49:07] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:49:07] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:49:07] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:49:07] - Building session factory
[2022-11-29 14:49:07] - SessionFactory name : null
[2022-11-29 14:49:07] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:49:07] - Automatic session close at end of transaction: disabled
[2022-11-29 14:49:07] - Statistics: disabled
[2022-11-29 14:49:07] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:49:07] - Default entity-mode: pojo
[2022-11-29 14:49:07] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:49:07] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:49:07] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:49:07] - Default batch fetch size: -1
[2022-11-29 14:49:07] - Maximum outer join fetch depth: 2
[2022-11-29 14:49:07] - Default null ordering: NONE
[2022-11-29 14:49:07] - Order SQL updates by primary key: disabled
[2022-11-29 14:49:07] - Order SQL inserts for batching: disabled
[2022-11-29 14:49:07] - multi-tenancy strategy : NONE
[2022-11-29 14:49:07] - JTA Track by Thread: enabled
[2022-11-29 14:49:07] - Query language substitutions: {}
[2022-11-29 14:49:07] - Named query checking : enabled
[2022-11-29 14:49:07] - Second-level cache: disabled
[2022-11-29 14:49:07] - Second-level query cache: disabled
[2022-11-29 14:49:07] - Second-level query cache factory: null
[2022-11-29 14:49:07] - Second-level cache region prefix: null
[2022-11-29 14:49:07] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:49:07] - Structured second-level cache entries: disabled
[2022-11-29 14:49:07] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:49:07] - Automatic eviction of collection cache: disabled
[2022-11-29 14:49:07] - JDBC batch size: 15
[2022-11-29 14:49:07] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:49:07] - Scrollable result sets: enabled
[2022-11-29 14:49:07] - Wrap result sets: disabled
[2022-11-29 14:49:07] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:49:07] - JDBC result set fetch size: null
[2022-11-29 14:49:07] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:49:07] - Generate SQL with comments: disabled
[2022-11-29 14:49:07] - JPA compliance - query : disabled
[2022-11-29 14:49:07] - JPA compliance - closed-handling : disabled
[2022-11-29 14:49:07] - JPA compliance - lists : disabled
[2022-11-29 14:49:07] - JPA compliance - transactions : disabled
[2022-11-29 14:49:07] - Session factory constructed with filter configurations : {}
[2022-11-29 14:49:07] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5685dcf5, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:49:07] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:49:07] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:49:07] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:49:07] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:49:07] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:49:07] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:49:07] - Loaded expression factory via original TCCL
[2022-11-29 14:49:07] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:49:07] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:49:07] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:49:07] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:49:07] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:49:07] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:49:07] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:49:07] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:49:07] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:49:07] - Skipping JACC integration as it was not enabled
[2022-11-29 14:49:07] - Instantiated session factory
[2022-11-29 14:49:07] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78ec5466] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@34637514]
[2022-11-29 14:49:07] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:49:07] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:49:07] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:49:07] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:49:07] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:49:07] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:49:07] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:49:07] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:49:07] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:49:07] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:49:07] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:49:07] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:49:07] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:49:07] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:49:07] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:49:07] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d169a5c]
[2022-11-29 14:49:07] - Visiting attribute path : address
[2022-11-29 14:49:07] - Visiting attribute path : email
[2022-11-29 14:49:07] - Visiting attribute path : firstName
[2022-11-29 14:49:07] - Visiting attribute path : job
[2022-11-29 14:49:07] - Visiting attribute path : lastName
[2022-11-29 14:49:07] - Visiting attribute path : location
[2022-11-29 14:49:07] - Visiting attribute path : orders
[2022-11-29 14:49:07] - Building LoadPlan...
[2022-11-29 14:49:07] - processing queryspace <gen:0>
[2022-11-29 14:49:07] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:49:07] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:49:07] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cf7a8c5]
[2022-11-29 14:49:07] - Visiting attribute path : address
[2022-11-29 14:49:07] - Visiting attribute path : email
[2022-11-29 14:49:07] - Visiting attribute path : firstName
[2022-11-29 14:49:07] - Visiting attribute path : job
[2022-11-29 14:49:07] - Visiting attribute path : lastName
[2022-11-29 14:49:07] - Visiting attribute path : location
[2022-11-29 14:49:07] - Visiting attribute path : orders
[2022-11-29 14:49:07] - Building LoadPlan...
[2022-11-29 14:49:07] - processing queryspace <gen:0>
[2022-11-29 14:49:07] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:49:07] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:49:07] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:49:07] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:49:07] - Static SQL for entity: com.app.code.User
[2022-11-29 14:49:07] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:49:07] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:49:07] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:49:07] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:49:07] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:49:07] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:49:07] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c75855e]
[2022-11-29 14:49:07] - Visiting attribute path : customer
[2022-11-29 14:49:07] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5acee74f]
[2022-11-29 14:49:07] - Visiting attribute path : customer.address
[2022-11-29 14:49:07] - Visiting attribute path : customer.email
[2022-11-29 14:49:07] - Visiting attribute path : customer.firstName
[2022-11-29 14:49:07] - Visiting attribute path : customer.job
[2022-11-29 14:49:07] - Visiting attribute path : customer.lastName
[2022-11-29 14:49:07] - Visiting attribute path : customer.location
[2022-11-29 14:49:07] - Visiting attribute path : customer.orders
[2022-11-29 14:49:07] - Visiting attribute path : password
[2022-11-29 14:49:07] - Visiting attribute path : username
[2022-11-29 14:49:07] - Building LoadPlan...
[2022-11-29 14:49:07] - processing queryspace <gen:0>
[2022-11-29 14:49:07] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:49:07] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:49:07] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e13702c]
[2022-11-29 14:49:07] - Visiting attribute path : customer
[2022-11-29 14:49:07] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e32ae93]
[2022-11-29 14:49:07] - Visiting attribute path : customer.address
[2022-11-29 14:49:07] - Visiting attribute path : customer.email
[2022-11-29 14:49:07] - Visiting attribute path : customer.firstName
[2022-11-29 14:49:07] - Visiting attribute path : customer.job
[2022-11-29 14:49:07] - Visiting attribute path : customer.lastName
[2022-11-29 14:49:07] - Visiting attribute path : customer.location
[2022-11-29 14:49:07] - Visiting attribute path : customer.orders
[2022-11-29 14:49:07] - Visiting attribute path : password
[2022-11-29 14:49:07] - Visiting attribute path : username
[2022-11-29 14:49:07] - Building LoadPlan...
[2022-11-29 14:49:07] - processing queryspace <gen:0>
[2022-11-29 14:49:07] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:49:07] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:49:07] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:49:07] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:49:07] - No actions specified; doing nothing
[2022-11-29 14:49:07] - Checking 0 named HQL queries
[2022-11-29 14:49:07] - Checking 0 named SQL queries
[2022-11-29 14:49:07] - Registering SessionFactory: 7b665922-72b7-4d6b-8f77-055b69f7b799 (<unnamed>)
[2022-11-29 14:49:07] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:49:07] - A sessionFactory was successfully created.
[2022-11-29 14:49:07] - Statistics initialized [enabled=false]
[2022-11-29 14:49:07] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:49:07] - Session was successfully created.
[2022-11-29 14:49:07] - begin
[2022-11-29 14:49:07] - Transaction for session was successfully started
[2022-11-29 14:49:07] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ae1ce53
[2022-11-29 14:49:07] - parse() - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:49:07] - throwQueryException() : no errors
[2022-11-29 14:49:07] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '0'

[2022-11-29 14:49:07] - select << begin [level=1, statement=select]
[2022-11-29 14:49:07] - FromClause{level=1} : com.app.code.User (<no alias>) -> user0_
[2022-11-29 14:49:07] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:49:07] - getDataType() : username -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:49:07] - Resolved : {synthetic-alias}.username -> user0_.username
[2022-11-29 14:49:07] - select : finishing up [level=1, statement=select]
[2022-11-29 14:49:07] - processQuery() :  ( SELECT ( FromClause{level=1} user_detail user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
[2022-11-29 14:49:07] - Derived SELECT clause created.
[2022-11-29 14:49:07] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user_detail]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.User)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.app.code.User)
          | path: {synthetic-alias}.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.app.code.User)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

[2022-11-29 14:49:07] - Using FROM fragment [user_detail user0_]
[2022-11-29 14:49:07] - select >> end [level=1, statement=select]
[2022-11-29 14:49:07] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_detail)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_detail user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_detail,tableAlias=user0_,origin=null,columns={,className=com.app.code.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.app.code.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@5228ece5}

[2022-11-29 14:49:07] - throwQueryException() : no errors
[2022-11-29 14:49:07] - HQL: FROM com.app.code.User WHERE username=?0
[2022-11-29 14:49:07] - SQL: select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:49:07] - throwQueryException() : no errors
[2022-11-29 14:49:07] - select user0_.user_id as user_id1_1_, user0_.customer_id as customer4_1_, user0_.password as password2_1_, user0_.username as username3_1_ from user_detail user0_ where user0_.username=?
[2022-11-29 14:49:07] - Result set row: 0
[2022-11-29 14:49:07] - Result row: EntityKey[com.app.code.User#28]
[2022-11-29 14:49:07] - Resolving attributes for [com.app.code.User#28]
[2022-11-29 14:49:07] - Processing attribute `customer` : value = 50
[2022-11-29 14:49:07] - Attribute (`customer`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:07] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:49:07] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 14:49:07] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:49:07] - Processing attribute `address` : value = Alecu Ruso 2A
[2022-11-29 14:49:07] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:07] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:49:07] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:07] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:49:07] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:07] - Processing attribute `job` : value = NONE
[2022-11-29 14:49:07] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:07] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:49:07] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:07] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:49:07] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:07] - Processing attribute `orders` : value = 9
[2022-11-29 14:49:07] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:07] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:49:07] - Done entity load : com.app.code.Customer#50
[2022-11-29 14:49:07] - Processing attribute `password` : value = test123
[2022-11-29 14:49:07] - Attribute (`password`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:07] - Processing attribute `username` : value = kerbecs
[2022-11-29 14:49:07] - Attribute (`username`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:07] - Done materializing entity [com.app.code.User#28]
[2022-11-29 14:49:07] - committing
[2022-11-29 14:49:07] - Processing flush-time cascades
[2022-11-29 14:49:07] - Dirty checking collections
[2022-11-29 14:49:07] - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
[2022-11-29 14:49:07] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:49:07] - Listing entities:
[2022-11-29 14:49:07] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Alecu Ruso 2A, location=Chisinau, orders=9, id=50, job=Software Deeveloper, email=edikutsu2002@mail.ru}
[2022-11-29 14:49:07] - com.app.code.User{password=test123, user_id=28, customer=com.app.code.Customer#50, username=kerbecs}
[2022-11-29 14:49:07] - update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:49:07] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:49:07] - Clearing local Synchronizations
[2022-11-29 14:49:07] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:49:07] - Session was successfully committed
[2022-11-29 14:49:07] - Transaction for session was successfully closed
[2022-11-29 14:49:07] - User profile for user kerbecs was successfully edited.
[2022-11-29 14:49:08] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:49:12] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:49:17] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:49:19] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:49:19] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:49:19] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:49:19] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:49:19] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:49:19] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:49:19] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:49:19] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:49:19] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:49:19] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:49:19] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:49:19] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:49:19] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:49:19] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:49:19] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:49:19] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:49:19] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:49:19] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:49:19] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:49:19] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:49:19] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:49:19] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:49:19] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:49:19] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:49:19] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:49:19] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:49:19] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:49:19] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:49:19] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:49:19] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:49:19] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:49:19] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:49:19] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:49:19] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:49:19] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:49:19] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:49:19] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:49:19] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:49:19] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:49:19] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:49:19] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:49:19] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:49:19] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:49:19] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:49:19] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:49:19] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:49:19] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:49:19] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:49:19] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:49:19] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:49:19] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:49:19] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:49:19] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:49:19] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:49:19] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:49:19] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:49:19] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:49:19] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:49:19] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:49:19] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:49:19] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:49:19] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:49:19] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:49:19] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:49:19] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:49:19] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:49:19] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:49:19] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:49:19] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:49:19] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:49:19] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:49:19] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:49:19] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:49:19] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:49:19] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:49:19] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:49:19] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:49:19] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:49:19] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:49:19] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:49:19] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:49:19] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:49:19] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:49:19] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:49:19] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:49:19] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:49:19] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:49:19] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:49:19] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:49:19] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:49:19] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:49:19] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:49:19] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:49:19] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:49:19] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:49:19] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:49:19] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:49:19] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:49:19] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:49:19] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:49:19] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:49:19] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:49:19] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:49:19] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:49:19] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:49:19] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:49:19] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:49:19] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:49:19] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:49:19] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:49:19] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:49:19] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:49:19] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:49:19] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:49:19] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:49:19] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:49:19] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@679785e9
[2022-11-29 14:49:19] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5e87e8a8
[2022-11-29 14:49:19] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d6838ff
[2022-11-29 14:49:19] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@519964b
[2022-11-29 14:49:19] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e7af3cc
[2022-11-29 14:49:19] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f599203
[2022-11-29 14:49:19] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@438aead7
[2022-11-29 14:49:19] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@a689723
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:49:19] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:49:19] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:49:19] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:49:19] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:49:19] - HHH10001003: Autocommit mode: false
[2022-11-29 14:49:19] - Initializing Connection pool with 1 Connections
[2022-11-29 14:49:19] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:49:19] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:49:19] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:49:19] - JDBC version : 4.2
[2022-11-29 14:49:19] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:49:19] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:49:19] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:49:19] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:49:19] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2624c2fb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1feac1e4]
[2022-11-29 14:49:19] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 14:49:19] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:49:19] - Import with entity name Product
[2022-11-29 14:49:19] - Bind entity com.app.code.Product on table product
[2022-11-29 14:49:19] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:19] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 14:49:19] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 14:49:19] - building SimpleValue for productId
[2022-11-29 14:49:19] - Building property productId
[2022-11-29 14:49:19] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 14:49:19] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:19] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 14:49:19] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 14:49:19] - building SimpleValue for ingredients
[2022-11-29 14:49:19] - Building property ingredients
[2022-11-29 14:49:19] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:19] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 14:49:19] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 14:49:19] - building SimpleValue for price
[2022-11-29 14:49:19] - Building property price
[2022-11-29 14:49:19] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:19] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 14:49:19] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 14:49:19] - building SimpleValue for title
[2022-11-29 14:49:19] - Building property title
[2022-11-29 14:49:19] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:19] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 14:49:19] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 14:49:19] - building SimpleValue for weight
[2022-11-29 14:49:19] - Building property weight
[2022-11-29 14:49:19] - Starting fillSimpleValue for productId
[2022-11-29 14:49:19] - Starting fillSimpleValue for ingredients
[2022-11-29 14:49:19] - Starting fillSimpleValue for price
[2022-11-29 14:49:19] - Starting fillSimpleValue for title
[2022-11-29 14:49:19] - Starting fillSimpleValue for weight
[2022-11-29 14:49:19] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 14:49:19] - Building session factory
[2022-11-29 14:49:19] - SessionFactory name : null
[2022-11-29 14:49:19] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:49:19] - Automatic session close at end of transaction: disabled
[2022-11-29 14:49:19] - Statistics: disabled
[2022-11-29 14:49:19] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:49:19] - Default entity-mode: pojo
[2022-11-29 14:49:19] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:49:19] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:49:19] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:49:19] - Default batch fetch size: -1
[2022-11-29 14:49:19] - Maximum outer join fetch depth: 2
[2022-11-29 14:49:19] - Default null ordering: NONE
[2022-11-29 14:49:19] - Order SQL updates by primary key: disabled
[2022-11-29 14:49:19] - Order SQL inserts for batching: disabled
[2022-11-29 14:49:19] - multi-tenancy strategy : NONE
[2022-11-29 14:49:19] - JTA Track by Thread: enabled
[2022-11-29 14:49:19] - Query language substitutions: {}
[2022-11-29 14:49:19] - Named query checking : enabled
[2022-11-29 14:49:19] - Second-level cache: disabled
[2022-11-29 14:49:19] - Second-level query cache: disabled
[2022-11-29 14:49:19] - Second-level query cache factory: null
[2022-11-29 14:49:19] - Second-level cache region prefix: null
[2022-11-29 14:49:19] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:49:19] - Structured second-level cache entries: disabled
[2022-11-29 14:49:19] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:49:19] - Automatic eviction of collection cache: disabled
[2022-11-29 14:49:19] - JDBC batch size: 15
[2022-11-29 14:49:19] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:49:19] - Scrollable result sets: enabled
[2022-11-29 14:49:19] - Wrap result sets: disabled
[2022-11-29 14:49:19] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:49:19] - JDBC result set fetch size: null
[2022-11-29 14:49:19] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:49:19] - Generate SQL with comments: disabled
[2022-11-29 14:49:19] - JPA compliance - query : disabled
[2022-11-29 14:49:19] - JPA compliance - closed-handling : disabled
[2022-11-29 14:49:19] - JPA compliance - lists : disabled
[2022-11-29 14:49:19] - JPA compliance - transactions : disabled
[2022-11-29 14:49:19] - Session factory constructed with filter configurations : {}
[2022-11-29 14:49:19] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5581648f, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:49:19] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:49:19] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:49:19] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:49:19] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:49:19] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:49:19] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:49:19] - Loaded expression factory via original TCCL
[2022-11-29 14:49:19] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:49:19] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:49:19] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:49:19] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:49:19] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:49:19] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:49:19] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:49:19] - Skipping JACC integration as it was not enabled
[2022-11-29 14:49:19] - Instantiated session factory
[2022-11-29 14:49:19] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2624c2fb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2d49d689]
[2022-11-29 14:49:19] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:49:19] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:49:19] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:49:19] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:49:19] - Static SQL for entity: com.app.code.Product
[2022-11-29 14:49:19] -  Version select: select product_id from product where product_id =?
[2022-11-29 14:49:19] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_0_, product_.price as price3_0_, product_.title as title4_0_, product_.weight as weight5_0_ from product product_ where product_.product_id=?
[2022-11-29 14:49:19] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 14:49:19] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 14:49:19] -  Delete 0: delete from product where product_id=?
[2022-11-29 14:49:19] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 14:49:19] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b23c762]
[2022-11-29 14:49:19] - Visiting attribute path : ingredients
[2022-11-29 14:49:19] - Visiting attribute path : price
[2022-11-29 14:49:19] - Visiting attribute path : title
[2022-11-29 14:49:19] - Visiting attribute path : weight
[2022-11-29 14:49:19] - Building LoadPlan...
[2022-11-29 14:49:19] - processing queryspace <gen:0>
[2022-11-29 14:49:19] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:49:19] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:49:19] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a2095f0]
[2022-11-29 14:49:19] - Visiting attribute path : ingredients
[2022-11-29 14:49:19] - Visiting attribute path : price
[2022-11-29 14:49:19] - Visiting attribute path : title
[2022-11-29 14:49:19] - Visiting attribute path : weight
[2022-11-29 14:49:19] - Building LoadPlan...
[2022-11-29 14:49:19] - processing queryspace <gen:0>
[2022-11-29 14:49:19] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:49:19] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:49:19] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:49:19] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:49:19] - No actions specified; doing nothing
[2022-11-29 14:49:19] - Checking 0 named HQL queries
[2022-11-29 14:49:19] - Checking 0 named SQL queries
[2022-11-29 14:49:19] - Registering SessionFactory: a63fc783-ed74-4687-bf47-20f90b806cb2 (<unnamed>)
[2022-11-29 14:49:19] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:49:19] - A sessionFactory was successfully created.
[2022-11-29 14:49:19] - Statistics initialized [enabled=false]
[2022-11-29 14:49:19] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:49:19] - Session was successfully created.
[2022-11-29 14:49:19] - begin
[2022-11-29 14:49:19] - Transaction for session was successfully started
[2022-11-29 14:49:19] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ae1ce53
[2022-11-29 14:49:19] - parse() - HQL: FROM com.app.code.Product
[2022-11-29 14:49:19] - throwQueryException() : no errors
[2022-11-29 14:49:19] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'code'
                \-[IDENT] Node: 'Product'

[2022-11-29 14:49:19] - select << begin [level=1, statement=select]
[2022-11-29 14:49:19] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 14:49:19] - select : finishing up [level=1, statement=select]
[2022-11-29 14:49:19] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
[2022-11-29 14:49:19] - Derived SELECT clause created.
[2022-11-29 14:49:19] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2022-11-29 14:49:19] - Using FROM fragment [product product0_]
[2022-11-29 14:49:19] - select >> end [level=1, statement=select]
[2022-11-29 14:49:19] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}

[2022-11-29 14:49:19] - throwQueryException() : no errors
[2022-11-29 14:49:19] - HQL: FROM com.app.code.Product
[2022-11-29 14:49:19] - SQL: select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:49:19] - throwQueryException() : no errors
[2022-11-29 14:49:19] - select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:49:19] - Result set row: 0
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 14:49:19] - Result set row: 1
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 14:49:19] - Result set row: 2
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 14:49:19] - Result set row: 3
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 14:49:19] - Result set row: 4
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 14:49:19] - Result set row: 5
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 14:49:19] - Result set row: 6
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#7]
[2022-11-29 14:49:19] - Result set row: 7
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#8]
[2022-11-29 14:49:19] - Result set row: 8
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#9]
[2022-11-29 14:49:19] - Result set row: 9
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#10]
[2022-11-29 14:49:19] - Result set row: 10
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#11]
[2022-11-29 14:49:19] - Result set row: 11
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#12]
[2022-11-29 14:49:19] - Result set row: 12
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#13]
[2022-11-29 14:49:19] - Result set row: 13
[2022-11-29 14:49:19] - Result row: EntityKey[com.app.code.Product#14]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 8
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 330
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 8
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 320
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 5
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 220
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 8
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Lasagna
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 350
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 5
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 350
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 4
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Apple Juice
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 320
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#7]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = pasta, spaghetti, salt, sauce, vegetables
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 6
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Spaghetti
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 260
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#7]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#8]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = chichken, water, rice, salt, sauce, tomatoes, pasta
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 6
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Chicken Soup
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 350
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#8]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#9]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = mango, orange, banana, kiwi, apple, ananas
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 7
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Fruit Salat
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 320
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#9]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#10]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = sugar, blat, eggs, flour, butter, strawberry, cream
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 6
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Cake
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 300
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#10]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#11]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = mentol, water, melisa
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 4
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Tea
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 300
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#11]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#12]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = brazilian coffe
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 4
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Coffee
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 200
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#12]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#13]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = crispy, sausage, cucumber, tomatoes, blat, cabbage
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 7
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Kebab
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 350
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#13]
[2022-11-29 14:49:19] - Resolving attributes for [com.app.code.Product#14]
[2022-11-29 14:49:19] - Processing attribute `ingredients` : value = eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat
[2022-11-29 14:49:19] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `price` : value = 7
[2022-11-29 14:49:19] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `title` : value = Taco
[2022-11-29 14:49:19] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Processing attribute `weight` : value = 340
[2022-11-29 14:49:19] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:19] - Done materializing entity [com.app.code.Product#14]
[2022-11-29 14:49:19] - committing
[2022-11-29 14:49:19] - Processing flush-time cascades
[2022-11-29 14:49:19] - Dirty checking collections
[2022-11-29 14:49:19] - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
[2022-11-29 14:49:19] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:49:19] - Listing entities:
[2022-11-29 14:49:19] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 14:49:19] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 14:49:19] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 14:49:19] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 14:49:19] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 14:49:19] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 14:49:19] - com.app.code.Product{productId=14, price=7, ingredients=eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat, weight=340, title=Taco}
[2022-11-29 14:49:19] - com.app.code.Product{productId=13, price=7, ingredients=crispy, sausage, cucumber, tomatoes, blat, cabbage, weight=350, title=Kebab}
[2022-11-29 14:49:19] - com.app.code.Product{productId=12, price=4, ingredients=brazilian coffe, weight=200, title=Coffee}
[2022-11-29 14:49:19] - com.app.code.Product{productId=11, price=4, ingredients=mentol, water, melisa, weight=300, title=Tea}
[2022-11-29 14:49:19] - com.app.code.Product{productId=10, price=6, ingredients=sugar, blat, eggs, flour, butter, strawberry, cream, weight=300, title=Cake}
[2022-11-29 14:49:19] - com.app.code.Product{productId=9, price=7, ingredients=mango, orange, banana, kiwi, apple, ananas, weight=320, title=Fruit Salat}
[2022-11-29 14:49:19] - com.app.code.Product{productId=8, price=6, ingredients=chichken, water, rice, salt, sauce, tomatoes, pasta, weight=350, title=Chicken Soup}
[2022-11-29 14:49:19] - com.app.code.Product{productId=7, price=6, ingredients=pasta, spaghetti, salt, sauce, vegetables, weight=260, title=Spaghetti}
[2022-11-29 14:49:19] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:49:19] - Clearing local Synchronizations
[2022-11-29 14:49:19] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:49:19] - Session with tenant id null was successfully committed
[2022-11-29 14:49:19] - Transaction for session was successfully closed
[2022-11-29 14:49:28] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:49:28] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:49:28] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:49:28] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:49:28] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:49:28] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:49:28] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:49:28] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:49:28] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:49:28] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:49:28] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:49:28] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:49:28] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:49:28] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:49:28] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:49:28] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:49:28] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:49:28] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:49:28] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:49:28] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:49:28] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:49:28] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:49:28] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:49:28] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:49:28] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:49:28] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:49:28] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:49:28] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:49:28] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:49:28] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:49:28] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:49:28] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:49:28] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:49:28] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:49:28] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:49:28] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:49:28] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:49:28] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:49:28] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:49:28] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:49:28] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:49:28] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:49:28] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:49:28] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:49:28] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:49:28] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:49:28] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:49:28] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:49:28] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:49:28] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:49:28] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:49:28] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:49:28] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:49:28] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:49:28] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:49:28] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:49:28] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:49:28] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:49:28] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:49:28] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:49:28] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:49:28] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:49:28] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:49:28] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:49:28] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:49:28] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:49:28] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:49:28] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:49:28] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:49:28] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:49:28] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:49:28] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:49:28] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:49:28] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:49:28] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:49:28] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:49:28] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:49:28] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:49:28] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:49:28] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:49:28] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:49:28] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:49:28] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:49:28] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:49:28] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:49:28] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:49:28] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:49:28] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:49:28] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:49:28] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:49:28] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:49:28] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:49:28] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:49:28] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:49:28] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:49:28] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:49:28] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:49:28] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:49:28] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:49:28] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:49:28] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:49:28] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:49:28] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:49:28] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:49:28] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:49:28] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:49:28] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:49:28] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:49:28] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:49:28] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:49:28] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:49:28] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:49:28] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:49:28] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:49:28] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:49:28] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:49:28] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43ca1a0c
[2022-11-29 14:49:28] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f6fc67f
[2022-11-29 14:49:28] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@524ffedf
[2022-11-29 14:49:28] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4fa7f272
[2022-11-29 14:49:28] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5cae8bf0
[2022-11-29 14:49:28] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@da3f224
[2022-11-29 14:49:28] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@20b75c49
[2022-11-29 14:49:28] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@50730e4f
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:49:28] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:49:28] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:49:28] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:49:28] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:49:28] - HHH10001003: Autocommit mode: false
[2022-11-29 14:49:28] - Initializing Connection pool with 1 Connections
[2022-11-29 14:49:28] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:49:28] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:49:28] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:49:28] - JDBC version : 4.2
[2022-11-29 14:49:28] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:49:28] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:49:28] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:49:28] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:49:28] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5061315b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7039aa85]
[2022-11-29 14:49:28] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 14:49:28] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:49:28] - Import with entity name Product
[2022-11-29 14:49:28] - Bind entity com.app.code.Product on table product
[2022-11-29 14:49:28] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:28] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 14:49:28] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 14:49:28] - building SimpleValue for productId
[2022-11-29 14:49:28] - Building property productId
[2022-11-29 14:49:28] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 14:49:28] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:28] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 14:49:28] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 14:49:28] - building SimpleValue for ingredients
[2022-11-29 14:49:28] - Building property ingredients
[2022-11-29 14:49:28] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:28] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 14:49:28] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 14:49:28] - building SimpleValue for price
[2022-11-29 14:49:28] - Building property price
[2022-11-29 14:49:28] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:28] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 14:49:28] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 14:49:28] - building SimpleValue for title
[2022-11-29 14:49:28] - Building property title
[2022-11-29 14:49:28] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 14:49:28] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 14:49:28] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 14:49:28] - building SimpleValue for weight
[2022-11-29 14:49:28] - Building property weight
[2022-11-29 14:49:28] - Starting fillSimpleValue for productId
[2022-11-29 14:49:28] - Starting fillSimpleValue for ingredients
[2022-11-29 14:49:28] - Starting fillSimpleValue for price
[2022-11-29 14:49:28] - Starting fillSimpleValue for title
[2022-11-29 14:49:28] - Starting fillSimpleValue for weight
[2022-11-29 14:49:28] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 14:49:28] - Building session factory
[2022-11-29 14:49:28] - SessionFactory name : null
[2022-11-29 14:49:28] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:49:28] - Automatic session close at end of transaction: disabled
[2022-11-29 14:49:28] - Statistics: disabled
[2022-11-29 14:49:28] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:49:28] - Default entity-mode: pojo
[2022-11-29 14:49:28] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:49:28] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:49:28] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:49:28] - Default batch fetch size: -1
[2022-11-29 14:49:28] - Maximum outer join fetch depth: 2
[2022-11-29 14:49:28] - Default null ordering: NONE
[2022-11-29 14:49:28] - Order SQL updates by primary key: disabled
[2022-11-29 14:49:28] - Order SQL inserts for batching: disabled
[2022-11-29 14:49:28] - multi-tenancy strategy : NONE
[2022-11-29 14:49:28] - JTA Track by Thread: enabled
[2022-11-29 14:49:28] - Query language substitutions: {}
[2022-11-29 14:49:28] - Named query checking : enabled
[2022-11-29 14:49:28] - Second-level cache: disabled
[2022-11-29 14:49:28] - Second-level query cache: disabled
[2022-11-29 14:49:28] - Second-level query cache factory: null
[2022-11-29 14:49:28] - Second-level cache region prefix: null
[2022-11-29 14:49:28] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:49:28] - Structured second-level cache entries: disabled
[2022-11-29 14:49:28] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:49:28] - Automatic eviction of collection cache: disabled
[2022-11-29 14:49:28] - JDBC batch size: 15
[2022-11-29 14:49:28] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:49:28] - Scrollable result sets: enabled
[2022-11-29 14:49:28] - Wrap result sets: disabled
[2022-11-29 14:49:28] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:49:28] - JDBC result set fetch size: null
[2022-11-29 14:49:28] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:49:28] - Generate SQL with comments: disabled
[2022-11-29 14:49:28] - JPA compliance - query : disabled
[2022-11-29 14:49:28] - JPA compliance - closed-handling : disabled
[2022-11-29 14:49:28] - JPA compliance - lists : disabled
[2022-11-29 14:49:28] - JPA compliance - transactions : disabled
[2022-11-29 14:49:28] - Session factory constructed with filter configurations : {}
[2022-11-29 14:49:28] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2a716a97, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:49:28] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:49:28] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:49:28] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:49:28] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:49:28] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:49:28] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:49:28] - Loaded expression factory via original TCCL
[2022-11-29 14:49:28] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:49:28] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:49:28] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:49:28] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:49:28] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:49:28] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:49:28] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:49:28] - Skipping JACC integration as it was not enabled
[2022-11-29 14:49:28] - Instantiated session factory
[2022-11-29 14:49:28] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5061315b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4aa16924]
[2022-11-29 14:49:28] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:49:28] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:49:28] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:49:28] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:49:28] - Static SQL for entity: com.app.code.Product
[2022-11-29 14:49:28] -  Version select: select product_id from product where product_id =?
[2022-11-29 14:49:28] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_0_, product_.price as price3_0_, product_.title as title4_0_, product_.weight as weight5_0_ from product product_ where product_.product_id=?
[2022-11-29 14:49:28] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 14:49:28] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 14:49:28] -  Delete 0: delete from product where product_id=?
[2022-11-29 14:49:28] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 14:49:28] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ee8685e]
[2022-11-29 14:49:28] - Visiting attribute path : ingredients
[2022-11-29 14:49:28] - Visiting attribute path : price
[2022-11-29 14:49:28] - Visiting attribute path : title
[2022-11-29 14:49:28] - Visiting attribute path : weight
[2022-11-29 14:49:28] - Building LoadPlan...
[2022-11-29 14:49:28] - processing queryspace <gen:0>
[2022-11-29 14:49:28] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:49:28] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:49:28] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f4fdbbe]
[2022-11-29 14:49:28] - Visiting attribute path : ingredients
[2022-11-29 14:49:28] - Visiting attribute path : price
[2022-11-29 14:49:28] - Visiting attribute path : title
[2022-11-29 14:49:28] - Visiting attribute path : weight
[2022-11-29 14:49:28] - Building LoadPlan...
[2022-11-29 14:49:28] - processing queryspace <gen:0>
[2022-11-29 14:49:28] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:49:28] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:49:28] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:49:28] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:49:28] - No actions specified; doing nothing
[2022-11-29 14:49:28] - Checking 0 named HQL queries
[2022-11-29 14:49:28] - Checking 0 named SQL queries
[2022-11-29 14:49:28] - Registering SessionFactory: ec87c9ff-a8d3-4b6a-a38c-a0bb32dcd9ae (<unnamed>)
[2022-11-29 14:49:28] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:49:28] - A sessionFactory was successfully created.
[2022-11-29 14:49:28] - Statistics initialized [enabled=false]
[2022-11-29 14:49:28] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:49:28] - Session was successfully created.
[2022-11-29 14:49:28] - begin
[2022-11-29 14:49:28] - Transaction for session was successfully started
[2022-11-29 14:49:28] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ae1ce53
[2022-11-29 14:49:28] - parse() - HQL: FROM com.app.code.Product
[2022-11-29 14:49:28] - throwQueryException() : no errors
[2022-11-29 14:49:28] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'code'
                \-[IDENT] Node: 'Product'

[2022-11-29 14:49:28] - select << begin [level=1, statement=select]
[2022-11-29 14:49:28] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 14:49:28] - select : finishing up [level=1, statement=select]
[2022-11-29 14:49:28] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
[2022-11-29 14:49:28] - Derived SELECT clause created.
[2022-11-29 14:49:28] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2022-11-29 14:49:28] - Using FROM fragment [product product0_]
[2022-11-29 14:49:28] - select >> end [level=1, statement=select]
[2022-11-29 14:49:28] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}

[2022-11-29 14:49:28] - throwQueryException() : no errors
[2022-11-29 14:49:28] - HQL: FROM com.app.code.Product
[2022-11-29 14:49:28] - SQL: select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:49:28] - throwQueryException() : no errors
[2022-11-29 14:49:28] - select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:49:28] - Result set row: 0
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 14:49:28] - Result set row: 1
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 14:49:28] - Result set row: 2
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 14:49:28] - Result set row: 3
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 14:49:28] - Result set row: 4
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 14:49:28] - Result set row: 5
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 14:49:28] - Result set row: 6
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#7]
[2022-11-29 14:49:28] - Result set row: 7
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#8]
[2022-11-29 14:49:28] - Result set row: 8
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#9]
[2022-11-29 14:49:28] - Result set row: 9
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#10]
[2022-11-29 14:49:28] - Result set row: 10
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#11]
[2022-11-29 14:49:28] - Result set row: 11
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#12]
[2022-11-29 14:49:28] - Result set row: 12
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#13]
[2022-11-29 14:49:28] - Result set row: 13
[2022-11-29 14:49:28] - Result row: EntityKey[com.app.code.Product#14]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 8
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 330
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 8
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 320
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 5
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 220
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 8
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Lasagna
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 350
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 5
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 350
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 4
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Apple Juice
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 320
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#7]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = pasta, spaghetti, salt, sauce, vegetables
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 6
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Spaghetti
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 260
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#7]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#8]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = chichken, water, rice, salt, sauce, tomatoes, pasta
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 6
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Chicken Soup
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 350
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#8]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#9]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = mango, orange, banana, kiwi, apple, ananas
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 7
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Fruit Salat
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 320
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#9]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#10]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = sugar, blat, eggs, flour, butter, strawberry, cream
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 6
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Cake
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 300
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#10]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#11]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = mentol, water, melisa
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 4
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Tea
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 300
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#11]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#12]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = brazilian coffe
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 4
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Coffee
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 200
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#12]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#13]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = crispy, sausage, cucumber, tomatoes, blat, cabbage
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 7
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Kebab
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 350
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#13]
[2022-11-29 14:49:28] - Resolving attributes for [com.app.code.Product#14]
[2022-11-29 14:49:28] - Processing attribute `ingredients` : value = eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat
[2022-11-29 14:49:28] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `price` : value = 7
[2022-11-29 14:49:28] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `title` : value = Taco
[2022-11-29 14:49:28] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Processing attribute `weight` : value = 340
[2022-11-29 14:49:28] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:49:28] - Done materializing entity [com.app.code.Product#14]
[2022-11-29 14:49:28] - committing
[2022-11-29 14:49:28] - Processing flush-time cascades
[2022-11-29 14:49:28] - Dirty checking collections
[2022-11-29 14:49:28] - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
[2022-11-29 14:49:28] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:49:28] - Listing entities:
[2022-11-29 14:49:28] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 14:49:28] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 14:49:28] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 14:49:28] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 14:49:28] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 14:49:28] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 14:49:28] - com.app.code.Product{productId=14, price=7, ingredients=eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat, weight=340, title=Taco}
[2022-11-29 14:49:28] - com.app.code.Product{productId=13, price=7, ingredients=crispy, sausage, cucumber, tomatoes, blat, cabbage, weight=350, title=Kebab}
[2022-11-29 14:49:28] - com.app.code.Product{productId=12, price=4, ingredients=brazilian coffe, weight=200, title=Coffee}
[2022-11-29 14:49:28] - com.app.code.Product{productId=11, price=4, ingredients=mentol, water, melisa, weight=300, title=Tea}
[2022-11-29 14:49:28] - com.app.code.Product{productId=10, price=6, ingredients=sugar, blat, eggs, flour, butter, strawberry, cream, weight=300, title=Cake}
[2022-11-29 14:49:28] - com.app.code.Product{productId=9, price=7, ingredients=mango, orange, banana, kiwi, apple, ananas, weight=320, title=Fruit Salat}
[2022-11-29 14:49:28] - com.app.code.Product{productId=8, price=6, ingredients=chichken, water, rice, salt, sauce, tomatoes, pasta, weight=350, title=Chicken Soup}
[2022-11-29 14:49:28] - com.app.code.Product{productId=7, price=6, ingredients=pasta, spaghetti, salt, sauce, vegetables, weight=260, title=Spaghetti}
[2022-11-29 14:49:28] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:49:28] - Clearing local Synchronizations
[2022-11-29 14:49:28] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:49:28] - Session with tenant id null was successfully committed
[2022-11-29 14:49:28] - Transaction for session was successfully closed
[2022-11-29 14:49:36] - User kerbecs was successfully disconnected.
[2022-11-29 14:49:37] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:49:49] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:49:58] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:50:10] - Registration failed.
[2022-11-29 14:50:19] - Registration failed.
[2022-11-29 14:51:08] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:51:08] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:51:08] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:51:08] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:51:08] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:51:08] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:51:08] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:51:08] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:51:08] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:51:08] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:51:08] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:51:08] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:51:08] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:51:08] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:51:08] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:51:08] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:51:08] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:51:08] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:51:08] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:51:08] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:51:08] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:51:08] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:51:08] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:51:08] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:51:08] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:51:08] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:51:08] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:51:08] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:51:08] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:51:08] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:51:08] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:51:08] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:51:08] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:51:08] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:51:08] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:51:08] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:51:08] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:51:08] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:51:08] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:51:08] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:51:08] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:51:08] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:51:08] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:51:08] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:51:08] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:51:08] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:51:08] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:51:08] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:51:08] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:51:08] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:51:08] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:51:08] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:51:08] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:51:08] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:51:08] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:51:08] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:51:08] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:51:08] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:51:08] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:51:08] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:51:08] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:51:08] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:51:08] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:51:08] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:51:08] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:51:08] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:51:08] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:51:08] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:51:08] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:51:08] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:51:08] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:51:08] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:51:08] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:51:08] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:51:08] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:51:08] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:51:08] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:51:08] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:51:08] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:51:08] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:51:08] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:51:08] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:51:08] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:51:08] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:51:08] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:51:08] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:51:08] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:51:08] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:51:08] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:51:08] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:51:08] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:51:08] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:51:08] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:51:08] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:51:08] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:51:08] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:51:08] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:51:08] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:51:08] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:51:08] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:51:08] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:51:08] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:51:08] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:51:08] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:51:08] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:51:08] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:51:08] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:51:08] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:51:08] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:51:08] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:51:08] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:51:08] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:51:08] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:51:08] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:51:08] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:51:08] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:51:08] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@41e7aa6f
[2022-11-29 14:51:08] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3afd859c
[2022-11-29 14:51:08] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5420b42e
[2022-11-29 14:51:08] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@374c8d4d
[2022-11-29 14:51:08] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b84fd19
[2022-11-29 14:51:08] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d835090
[2022-11-29 14:51:08] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c5316ca
[2022-11-29 14:51:08] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1fa6dce8
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:51:08] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:51:08] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:51:08] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:51:08] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:51:08] - HHH10001003: Autocommit mode: false
[2022-11-29 14:51:08] - Initializing Connection pool with 1 Connections
[2022-11-29 14:51:08] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:51:08] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:51:08] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:51:08] - JDBC version : 4.2
[2022-11-29 14:51:08] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:51:08] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:51:08] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:51:08] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:51:08] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c6b9a50] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54396819]
[2022-11-29 14:51:08] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 14:51:08] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:51:08] - Import with entity name Product
[2022-11-29 14:51:08] - Bind entity com.app.code.Product on table product
[2022-11-29 14:51:08] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:51:08] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 14:51:08] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 14:51:08] - building SimpleValue for productId
[2022-11-29 14:51:08] - Building property productId
[2022-11-29 14:51:08] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 14:51:08] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 14:51:08] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 14:51:08] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 14:51:08] - building SimpleValue for ingredients
[2022-11-29 14:51:08] - Building property ingredients
[2022-11-29 14:51:08] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 14:51:08] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 14:51:08] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 14:51:08] - building SimpleValue for price
[2022-11-29 14:51:08] - Building property price
[2022-11-29 14:51:08] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 14:51:08] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 14:51:08] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 14:51:08] - building SimpleValue for title
[2022-11-29 14:51:08] - Building property title
[2022-11-29 14:51:08] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 14:51:08] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 14:51:08] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 14:51:08] - building SimpleValue for weight
[2022-11-29 14:51:08] - Building property weight
[2022-11-29 14:51:08] - Starting fillSimpleValue for productId
[2022-11-29 14:51:08] - Starting fillSimpleValue for ingredients
[2022-11-29 14:51:08] - Starting fillSimpleValue for price
[2022-11-29 14:51:08] - Starting fillSimpleValue for title
[2022-11-29 14:51:08] - Starting fillSimpleValue for weight
[2022-11-29 14:51:08] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 14:51:08] - Building session factory
[2022-11-29 14:51:08] - SessionFactory name : null
[2022-11-29 14:51:08] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:51:08] - Automatic session close at end of transaction: disabled
[2022-11-29 14:51:08] - Statistics: disabled
[2022-11-29 14:51:08] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:51:08] - Default entity-mode: pojo
[2022-11-29 14:51:08] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:51:08] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:51:08] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:51:08] - Default batch fetch size: -1
[2022-11-29 14:51:08] - Maximum outer join fetch depth: 2
[2022-11-29 14:51:08] - Default null ordering: NONE
[2022-11-29 14:51:08] - Order SQL updates by primary key: disabled
[2022-11-29 14:51:08] - Order SQL inserts for batching: disabled
[2022-11-29 14:51:08] - multi-tenancy strategy : NONE
[2022-11-29 14:51:08] - JTA Track by Thread: enabled
[2022-11-29 14:51:08] - Query language substitutions: {}
[2022-11-29 14:51:08] - Named query checking : enabled
[2022-11-29 14:51:08] - Second-level cache: disabled
[2022-11-29 14:51:08] - Second-level query cache: disabled
[2022-11-29 14:51:08] - Second-level query cache factory: null
[2022-11-29 14:51:08] - Second-level cache region prefix: null
[2022-11-29 14:51:08] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:51:08] - Structured second-level cache entries: disabled
[2022-11-29 14:51:08] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:51:08] - Automatic eviction of collection cache: disabled
[2022-11-29 14:51:08] - JDBC batch size: 15
[2022-11-29 14:51:08] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:51:08] - Scrollable result sets: enabled
[2022-11-29 14:51:08] - Wrap result sets: disabled
[2022-11-29 14:51:08] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:51:08] - JDBC result set fetch size: null
[2022-11-29 14:51:08] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:51:08] - Generate SQL with comments: disabled
[2022-11-29 14:51:08] - JPA compliance - query : disabled
[2022-11-29 14:51:08] - JPA compliance - closed-handling : disabled
[2022-11-29 14:51:08] - JPA compliance - lists : disabled
[2022-11-29 14:51:08] - JPA compliance - transactions : disabled
[2022-11-29 14:51:08] - Session factory constructed with filter configurations : {}
[2022-11-29 14:51:08] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7db12aeb, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:51:08] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:51:08] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:51:08] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:51:08] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:51:08] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:51:08] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:51:08] - Loaded expression factory via original TCCL
[2022-11-29 14:51:08] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:51:08] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:51:08] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:51:08] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:51:08] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:51:08] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:51:08] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:51:08] - Skipping JACC integration as it was not enabled
[2022-11-29 14:51:08] - Instantiated session factory
[2022-11-29 14:51:08] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c6b9a50] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5127f5c9]
[2022-11-29 14:51:08] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:51:08] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:51:08] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:51:08] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:51:08] - Static SQL for entity: com.app.code.Product
[2022-11-29 14:51:08] -  Version select: select product_id from product where product_id =?
[2022-11-29 14:51:08] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_0_, product_.price as price3_0_, product_.title as title4_0_, product_.weight as weight5_0_ from product product_ where product_.product_id=?
[2022-11-29 14:51:08] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 14:51:08] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 14:51:08] -  Delete 0: delete from product where product_id=?
[2022-11-29 14:51:08] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 14:51:08] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46287c16]
[2022-11-29 14:51:08] - Visiting attribute path : ingredients
[2022-11-29 14:51:08] - Visiting attribute path : price
[2022-11-29 14:51:08] - Visiting attribute path : title
[2022-11-29 14:51:08] - Visiting attribute path : weight
[2022-11-29 14:51:08] - Building LoadPlan...
[2022-11-29 14:51:08] - processing queryspace <gen:0>
[2022-11-29 14:51:08] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:51:08] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:51:08] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b38d0bb]
[2022-11-29 14:51:08] - Visiting attribute path : ingredients
[2022-11-29 14:51:08] - Visiting attribute path : price
[2022-11-29 14:51:08] - Visiting attribute path : title
[2022-11-29 14:51:08] - Visiting attribute path : weight
[2022-11-29 14:51:08] - Building LoadPlan...
[2022-11-29 14:51:08] - processing queryspace <gen:0>
[2022-11-29 14:51:08] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:51:08] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:51:08] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:51:08] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:51:08] - No actions specified; doing nothing
[2022-11-29 14:51:08] - Checking 0 named HQL queries
[2022-11-29 14:51:08] - Checking 0 named SQL queries
[2022-11-29 14:51:08] - Registering SessionFactory: 31cac257-ceae-4418-816f-3837c317e885 (<unnamed>)
[2022-11-29 14:51:08] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:51:08] - A sessionFactory was successfully created.
[2022-11-29 14:51:08] - Statistics initialized [enabled=false]
[2022-11-29 14:51:08] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:51:08] - Session was successfully created.
[2022-11-29 14:51:08] - begin
[2022-11-29 14:51:08] - Transaction for session was successfully started
[2022-11-29 14:51:08] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ae1ce53
[2022-11-29 14:51:08] - parse() - HQL: FROM com.app.code.Product
[2022-11-29 14:51:08] - throwQueryException() : no errors
[2022-11-29 14:51:08] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'code'
                \-[IDENT] Node: 'Product'

[2022-11-29 14:51:08] - select << begin [level=1, statement=select]
[2022-11-29 14:51:08] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 14:51:08] - select : finishing up [level=1, statement=select]
[2022-11-29 14:51:08] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
[2022-11-29 14:51:08] - Derived SELECT clause created.
[2022-11-29 14:51:08] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2022-11-29 14:51:08] - Using FROM fragment [product product0_]
[2022-11-29 14:51:08] - select >> end [level=1, statement=select]
[2022-11-29 14:51:08] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}

[2022-11-29 14:51:08] - throwQueryException() : no errors
[2022-11-29 14:51:08] - HQL: FROM com.app.code.Product
[2022-11-29 14:51:08] - SQL: select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:51:08] - throwQueryException() : no errors
[2022-11-29 14:51:08] - select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:51:08] - Result set row: 0
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 14:51:08] - Result set row: 1
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 14:51:08] - Result set row: 2
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 14:51:08] - Result set row: 3
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 14:51:08] - Result set row: 4
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 14:51:08] - Result set row: 5
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 14:51:08] - Result set row: 6
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#7]
[2022-11-29 14:51:08] - Result set row: 7
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#8]
[2022-11-29 14:51:08] - Result set row: 8
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#9]
[2022-11-29 14:51:08] - Result set row: 9
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#10]
[2022-11-29 14:51:08] - Result set row: 10
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#11]
[2022-11-29 14:51:08] - Result set row: 11
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#12]
[2022-11-29 14:51:08] - Result set row: 12
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#13]
[2022-11-29 14:51:08] - Result set row: 13
[2022-11-29 14:51:08] - Result row: EntityKey[com.app.code.Product#14]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 8
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 330
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 8
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 320
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 5
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 220
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 8
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Lasagna
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 350
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 5
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 350
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 4
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Apple Juice
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 320
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#7]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = pasta, spaghetti, salt, sauce, vegetables
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 6
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Spaghetti
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 260
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#7]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#8]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = chichken, water, rice, salt, sauce, tomatoes, pasta
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 6
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Chicken Soup
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 350
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#8]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#9]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = mango, orange, banana, kiwi, apple, ananas
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 7
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Fruit Salat
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 320
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#9]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#10]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = sugar, blat, eggs, flour, butter, strawberry, cream
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 6
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Cake
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 300
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#10]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#11]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = mentol, water, melisa
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 4
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Tea
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 300
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#11]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#12]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = brazilian coffe
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 4
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Coffee
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 200
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#12]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#13]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = crispy, sausage, cucumber, tomatoes, blat, cabbage
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 7
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Kebab
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 350
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#13]
[2022-11-29 14:51:08] - Resolving attributes for [com.app.code.Product#14]
[2022-11-29 14:51:08] - Processing attribute `ingredients` : value = eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat
[2022-11-29 14:51:08] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `price` : value = 7
[2022-11-29 14:51:08] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `title` : value = Taco
[2022-11-29 14:51:08] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Processing attribute `weight` : value = 340
[2022-11-29 14:51:08] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:51:08] - Done materializing entity [com.app.code.Product#14]
[2022-11-29 14:51:08] - committing
[2022-11-29 14:51:08] - Processing flush-time cascades
[2022-11-29 14:51:08] - Dirty checking collections
[2022-11-29 14:51:08] - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
[2022-11-29 14:51:08] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:51:08] - Listing entities:
[2022-11-29 14:51:08] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 14:51:08] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 14:51:08] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 14:51:08] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 14:51:08] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 14:51:08] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 14:51:08] - com.app.code.Product{productId=14, price=7, ingredients=eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat, weight=340, title=Taco}
[2022-11-29 14:51:08] - com.app.code.Product{productId=13, price=7, ingredients=crispy, sausage, cucumber, tomatoes, blat, cabbage, weight=350, title=Kebab}
[2022-11-29 14:51:08] - com.app.code.Product{productId=12, price=4, ingredients=brazilian coffe, weight=200, title=Coffee}
[2022-11-29 14:51:08] - com.app.code.Product{productId=11, price=4, ingredients=mentol, water, melisa, weight=300, title=Tea}
[2022-11-29 14:51:08] - com.app.code.Product{productId=10, price=6, ingredients=sugar, blat, eggs, flour, butter, strawberry, cream, weight=300, title=Cake}
[2022-11-29 14:51:08] - com.app.code.Product{productId=9, price=7, ingredients=mango, orange, banana, kiwi, apple, ananas, weight=320, title=Fruit Salat}
[2022-11-29 14:51:08] - com.app.code.Product{productId=8, price=6, ingredients=chichken, water, rice, salt, sauce, tomatoes, pasta, weight=350, title=Chicken Soup}
[2022-11-29 14:51:08] - com.app.code.Product{productId=7, price=6, ingredients=pasta, spaghetti, salt, sauce, vegetables, weight=260, title=Spaghetti}
[2022-11-29 14:51:08] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:51:08] - Clearing local Synchronizations
[2022-11-29 14:51:08] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:51:08] - Session with tenant id null was successfully committed
[2022-11-29 14:51:08] - Transaction for session was successfully closed
[2022-11-29 14:51:38] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:52:21] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:52:21] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:52:21] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:52:21] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:52:21] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:52:21] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:52:21] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:52:21] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:52:21] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:52:21] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:52:21] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:52:21] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:21] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:21] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:21] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:52:21] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:52:21] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:52:21] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:21] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:21] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:21] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:21] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:21] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:21] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:21] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:21] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:21] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:21] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:21] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:21] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:21] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:21] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:21] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:21] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:21] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:21] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:21] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:21] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:21] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:52:21] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:52:21] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:52:21] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:52:21] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:21] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:21] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:52:21] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:52:21] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:52:21] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:52:21] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:52:21] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:52:21] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:52:21] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:52:21] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:52:21] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:52:21] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:52:21] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:52:21] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:52:21] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:52:21] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:52:21] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:52:21] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:52:21] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:52:21] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:52:21] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:52:21] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:52:21] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:52:21] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:52:21] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:52:21] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:21] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:21] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:21] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:52:21] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:21] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:21] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:21] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:52:21] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:52:21] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:52:21] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:52:21] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:52:21] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:52:21] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:52:21] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:52:21] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:52:21] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:52:21] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:52:21] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:52:21] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:52:21] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:21] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:21] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:21] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:21] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:21] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:21] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:52:21] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:52:21] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:21] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:21] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:21] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:21] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:21] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:21] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:52:21] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:52:21] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:52:21] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:52:21] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:52:21] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:52:21] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:52:21] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:52:21] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:52:21] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:52:21] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:52:21] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:52:21] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:52:21] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:52:21] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@344e887c
[2022-11-29 14:52:21] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68558f63
[2022-11-29 14:52:21] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@74fc24bc
[2022-11-29 14:52:21] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@24e6d3fa
[2022-11-29 14:52:21] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@642bb272
[2022-11-29 14:52:21] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@20c11703
[2022-11-29 14:52:21] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@358d0e63
[2022-11-29 14:52:21] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@27e6622b
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:52:21] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:52:21] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:52:21] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:52:21] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:52:21] - HHH10001003: Autocommit mode: false
[2022-11-29 14:52:21] - Initializing Connection pool with 1 Connections
[2022-11-29 14:52:21] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:52:21] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:52:21] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:52:21] - JDBC version : 4.2
[2022-11-29 14:52:21] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:52:21] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:52:21] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:52:21] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:52:21] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66ff9dd8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@75828b33]
[2022-11-29 14:52:21] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 14:52:21] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:21] - Import with entity name Product
[2022-11-29 14:52:21] - Bind entity com.app.code.Product on table product
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 14:52:21] - building SimpleValue for productId
[2022-11-29 14:52:21] - Building property productId
[2022-11-29 14:52:21] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 14:52:21] - building SimpleValue for ingredients
[2022-11-29 14:52:21] - Building property ingredients
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 14:52:21] - building SimpleValue for price
[2022-11-29 14:52:21] - Building property price
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 14:52:21] - building SimpleValue for title
[2022-11-29 14:52:21] - Building property title
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 14:52:21] - building SimpleValue for weight
[2022-11-29 14:52:21] - Building property weight
[2022-11-29 14:52:21] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:52:21] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:21] - Import with entity name User
[2022-11-29 14:52:21] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:52:21] - building SimpleValue for user_id
[2022-11-29 14:52:21] - Building property user_id
[2022-11-29 14:52:21] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:52:21] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - Building property customer
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:52:21] - building SimpleValue for password
[2022-11-29 14:52:21] - Building property password
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:52:21] - building SimpleValue for username
[2022-11-29 14:52:21] - Building property username
[2022-11-29 14:52:21] - Binding entity from annotated class: com.app.code.Order
[2022-11-29 14:52:21] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:21] - Import with entity name Order
[2022-11-29 14:52:21] - Bind entity com.app.code.Order on table order_list
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order_list), mappingColumn=order_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property orderId with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Order:orderId]
[2022-11-29 14:52:21] - building SimpleValue for orderId
[2022-11-29 14:52:21] - Building property orderId
[2022-11-29 14:52:21] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(order_id)]), orderId, identity, , ...)
[2022-11-29 14:52:21] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order_list), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - Building property customer
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order_list), mappingColumn=order_time, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property orderTime with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Order:orderTime]
[2022-11-29 14:52:21] - building SimpleValue for orderTime
[2022-11-29 14:52:21] - Building property orderTime
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order_list), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Order:price]
[2022-11-29 14:52:21] - building SimpleValue for price
[2022-11-29 14:52:21] - Building property price
[2022-11-29 14:52:21] - Binding column: Ejb3JoinColumn{logicalColumnName='product_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order_list), mappingColumn=product, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - Building property product
[2022-11-29 14:52:21] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:52:21] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:21] - Import with entity name Customer
[2022-11-29 14:52:21] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:52:21] - building SimpleValue for id
[2022-11-29 14:52:21] - Building property id
[2022-11-29 14:52:21] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:52:21] - building SimpleValue for address
[2022-11-29 14:52:21] - Building property address
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:52:21] - building SimpleValue for email
[2022-11-29 14:52:21] - Building property email
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:52:21] - building SimpleValue for firstName
[2022-11-29 14:52:21] - Building property firstName
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:52:21] - building SimpleValue for job
[2022-11-29 14:52:21] - Building property job
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:52:21] - building SimpleValue for lastName
[2022-11-29 14:52:21] - Building property lastName
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:52:21] - building SimpleValue for location
[2022-11-29 14:52:21] - Building property location
[2022-11-29 14:52:21] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:21] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:52:21] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:52:21] - building SimpleValue for orders
[2022-11-29 14:52:21] - Building property orders
[2022-11-29 14:52:21] - Starting fillSimpleValue for productId
[2022-11-29 14:52:21] - Starting fillSimpleValue for ingredients
[2022-11-29 14:52:21] - Starting fillSimpleValue for price
[2022-11-29 14:52:21] - Starting fillSimpleValue for title
[2022-11-29 14:52:21] - Starting fillSimpleValue for weight
[2022-11-29 14:52:21] - Starting fillSimpleValue for user_id
[2022-11-29 14:52:21] - Starting fillSimpleValue for password
[2022-11-29 14:52:21] - Starting fillSimpleValue for username
[2022-11-29 14:52:21] - Starting fillSimpleValue for orderId
[2022-11-29 14:52:21] - Starting fillSimpleValue for orderTime
[2022-11-29 14:52:21] - Starting fillSimpleValue for price
[2022-11-29 14:52:21] - Starting fillSimpleValue for id
[2022-11-29 14:52:21] - Starting fillSimpleValue for address
[2022-11-29 14:52:21] - Starting fillSimpleValue for email
[2022-11-29 14:52:21] - Starting fillSimpleValue for firstName
[2022-11-29 14:52:21] - Starting fillSimpleValue for job
[2022-11-29 14:52:21] - Starting fillSimpleValue for lastName
[2022-11-29 14:52:21] - Starting fillSimpleValue for location
[2022-11-29 14:52:21] - Starting fillSimpleValue for orders
[2022-11-29 14:52:21] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 14:52:21] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:52:21] - Forcing column [order_id] to be non-null as it is part of the primary key for table [order_list]
[2022-11-29 14:52:21] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:52:21] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:21] - Resolving reference to class: com.app.code.Product
[2022-11-29 14:52:21] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:21] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:21] - Resolving reference to class: com.app.code.Product
[2022-11-29 14:52:21] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:21] - Building session factory
[2022-11-29 14:52:21] - SessionFactory name : null
[2022-11-29 14:52:21] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:52:21] - Automatic session close at end of transaction: disabled
[2022-11-29 14:52:21] - Statistics: disabled
[2022-11-29 14:52:21] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:52:21] - Default entity-mode: pojo
[2022-11-29 14:52:21] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:52:21] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:52:21] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:52:21] - Default batch fetch size: -1
[2022-11-29 14:52:21] - Maximum outer join fetch depth: 2
[2022-11-29 14:52:21] - Default null ordering: NONE
[2022-11-29 14:52:21] - Order SQL updates by primary key: disabled
[2022-11-29 14:52:21] - Order SQL inserts for batching: disabled
[2022-11-29 14:52:21] - multi-tenancy strategy : NONE
[2022-11-29 14:52:21] - JTA Track by Thread: enabled
[2022-11-29 14:52:21] - Query language substitutions: {}
[2022-11-29 14:52:21] - Named query checking : enabled
[2022-11-29 14:52:21] - Second-level cache: disabled
[2022-11-29 14:52:21] - Second-level query cache: disabled
[2022-11-29 14:52:21] - Second-level query cache factory: null
[2022-11-29 14:52:21] - Second-level cache region prefix: null
[2022-11-29 14:52:21] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:52:21] - Structured second-level cache entries: disabled
[2022-11-29 14:52:21] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:52:21] - Automatic eviction of collection cache: disabled
[2022-11-29 14:52:21] - JDBC batch size: 15
[2022-11-29 14:52:21] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:52:21] - Scrollable result sets: enabled
[2022-11-29 14:52:21] - Wrap result sets: disabled
[2022-11-29 14:52:21] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:52:21] - JDBC result set fetch size: null
[2022-11-29 14:52:21] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:52:21] - Generate SQL with comments: disabled
[2022-11-29 14:52:21] - JPA compliance - query : disabled
[2022-11-29 14:52:21] - JPA compliance - closed-handling : disabled
[2022-11-29 14:52:21] - JPA compliance - lists : disabled
[2022-11-29 14:52:21] - JPA compliance - transactions : disabled
[2022-11-29 14:52:21] - Session factory constructed with filter configurations : {}
[2022-11-29 14:52:21] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@320ff955, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:52:21] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:52:21] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:52:21] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:52:21] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:52:21] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:52:21] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:52:21] - Loaded expression factory via original TCCL
[2022-11-29 14:52:21] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:52:21] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:52:21] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:52:21] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:52:21] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.Order] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Order
[2022-11-29 14:52:21] - Skipping JACC integration as it was not enabled
[2022-11-29 14:52:21] - Instantiated session factory
[2022-11-29 14:52:21] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66ff9dd8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4b2eb62c]
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.Order] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Order
[2022-11-29 14:52:21] - Not known whether passed class name [com.app.code.Order] is safe
[2022-11-29 14:52:21] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Order
[2022-11-29 14:52:21] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:52:21] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:52:21] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:52:21] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:52:21] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:52:21] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:52:21] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@147ee267]
[2022-11-29 14:52:21] - Visiting attribute path : address
[2022-11-29 14:52:21] - Visiting attribute path : email
[2022-11-29 14:52:21] - Visiting attribute path : firstName
[2022-11-29 14:52:21] - Visiting attribute path : job
[2022-11-29 14:52:21] - Visiting attribute path : lastName
[2022-11-29 14:52:21] - Visiting attribute path : location
[2022-11-29 14:52:21] - Visiting attribute path : orders
[2022-11-29 14:52:21] - Building LoadPlan...
[2022-11-29 14:52:21] - processing queryspace <gen:0>
[2022-11-29 14:52:21] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:52:21] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601a0247]
[2022-11-29 14:52:21] - Visiting attribute path : address
[2022-11-29 14:52:21] - Visiting attribute path : email
[2022-11-29 14:52:21] - Visiting attribute path : firstName
[2022-11-29 14:52:21] - Visiting attribute path : job
[2022-11-29 14:52:21] - Visiting attribute path : lastName
[2022-11-29 14:52:21] - Visiting attribute path : location
[2022-11-29 14:52:21] - Visiting attribute path : orders
[2022-11-29 14:52:21] - Building LoadPlan...
[2022-11-29 14:52:21] - processing queryspace <gen:0>
[2022-11-29 14:52:21] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:52:21] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:21] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:21] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:21] - Static SQL for entity: com.app.code.Product
[2022-11-29 14:52:21] -  Version select: select product_id from product where product_id =?
[2022-11-29 14:52:21] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_2_, product_.price as price3_2_, product_.title as title4_2_, product_.weight as weight5_2_ from product product_ where product_.product_id=?
[2022-11-29 14:52:21] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 14:52:21] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 14:52:21] -  Delete 0: delete from product where product_id=?
[2022-11-29 14:52:21] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@117eb4]
[2022-11-29 14:52:21] - Visiting attribute path : ingredients
[2022-11-29 14:52:21] - Visiting attribute path : price
[2022-11-29 14:52:21] - Visiting attribute path : title
[2022-11-29 14:52:21] - Visiting attribute path : weight
[2022-11-29 14:52:21] - Building LoadPlan...
[2022-11-29 14:52:21] - processing queryspace <gen:0>
[2022-11-29 14:52:21] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

[2022-11-29 14:52:21] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_2_0_, product0_.ingredients as ingredie2_2_0_, product0_.price as price3_2_0_, product0_.title as title4_2_0_, product0_.weight as weight5_2_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dba9dcb]
[2022-11-29 14:52:21] - Visiting attribute path : ingredients
[2022-11-29 14:52:21] - Visiting attribute path : price
[2022-11-29 14:52:21] - Visiting attribute path : title
[2022-11-29 14:52:21] - Visiting attribute path : weight
[2022-11-29 14:52:21] - Building LoadPlan...
[2022-11-29 14:52:21] - processing queryspace <gen:0>
[2022-11-29 14:52:21] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

[2022-11-29 14:52:21] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_2_0_, product0_.ingredients as ingredie2_2_0_, product0_.price as price3_2_0_, product0_.title as title4_2_0_, product0_.weight as weight5_2_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:52:21] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_2_0_, product0_.ingredients as ingredie2_2_0_, product0_.price as price3_2_0_, product0_.title as title4_2_0_, product0_.weight as weight5_2_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:52:21] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_2_0_, product0_.ingredients as ingredie2_2_0_, product0_.price as price3_2_0_, product0_.title as title4_2_0_, product0_.weight as weight5_2_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:52:21] - Static SQL for entity: com.app.code.User
[2022-11-29 14:52:21] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:52:21] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_3_, user_.password as password2_3_, user_.username as username3_3_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:52:21] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:52:21] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:52:21] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:52:21] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bfc95fb]
[2022-11-29 14:52:21] - Visiting attribute path : customer
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aab6b70]
[2022-11-29 14:52:21] - Visiting attribute path : customer.address
[2022-11-29 14:52:21] - Visiting attribute path : customer.email
[2022-11-29 14:52:21] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:21] - Visiting attribute path : customer.job
[2022-11-29 14:52:21] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:21] - Visiting attribute path : customer.location
[2022-11-29 14:52:21] - Visiting attribute path : customer.orders
[2022-11-29 14:52:21] - Visiting attribute path : password
[2022-11-29 14:52:21] - Visiting attribute path : username
[2022-11-29 14:52:21] - Building LoadPlan...
[2022-11-29 14:52:21] - processing queryspace <gen:0>
[2022-11-29 14:52:21] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:52:21] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.customer_id as customer4_3_0_, user0_.password as password2_3_0_, user0_.username as username3_3_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28c51ed8]
[2022-11-29 14:52:21] - Visiting attribute path : customer
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dc6ffcd]
[2022-11-29 14:52:21] - Visiting attribute path : customer.address
[2022-11-29 14:52:21] - Visiting attribute path : customer.email
[2022-11-29 14:52:21] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:21] - Visiting attribute path : customer.job
[2022-11-29 14:52:21] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:21] - Visiting attribute path : customer.location
[2022-11-29 14:52:21] - Visiting attribute path : customer.orders
[2022-11-29 14:52:21] - Visiting attribute path : password
[2022-11-29 14:52:21] - Visiting attribute path : username
[2022-11-29 14:52:21] - Building LoadPlan...
[2022-11-29 14:52:21] - processing queryspace <gen:0>
[2022-11-29 14:52:21] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:52:21] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_3_0_, user0_.customer_id as customer4_3_0_, user0_.password as password2_3_0_, user0_.username as username3_3_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:21] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_3_1_, user0_.customer_id as customer4_3_1_, user0_.password as password2_3_1_, user0_.username as username3_3_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:21] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_3_1_, user0_.customer_id as customer4_3_1_, user0_.password as password2_3_1_, user0_.username as username3_3_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:21] - Static SQL for entity: com.app.code.Order
[2022-11-29 14:52:21] -  Version select: select order_id from order_list where order_id =?
[2022-11-29 14:52:21] -  Snapshot select: select order_.order_id, order_.customer_id as customer4_1_, order_.order_time as order_ti2_1_, order_.price as price3_1_, order_.product_id as product_5_1_ from order_list order_ where order_.order_id=?
[2022-11-29 14:52:21] -  Insert 0: insert into order_list (customer_id, order_time, price, product_id, order_id) values (?, ?, ?, ?, ?)
[2022-11-29 14:52:21] -  Update 0: update order_list set customer_id=?, order_time=?, price=?, product_id=? where order_id=?
[2022-11-29 14:52:21] -  Delete 0: delete from order_list where order_id=?
[2022-11-29 14:52:21] -  Identity insert: insert into order_list (customer_id, order_time, price, product_id) values (?, ?, ?, ?)
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e71e98]
[2022-11-29 14:52:21] - Visiting attribute path : customer
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6ffb86]
[2022-11-29 14:52:21] - Visiting attribute path : customer.address
[2022-11-29 14:52:21] - Visiting attribute path : customer.email
[2022-11-29 14:52:21] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:21] - Visiting attribute path : customer.job
[2022-11-29 14:52:21] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:21] - Visiting attribute path : customer.location
[2022-11-29 14:52:21] - Visiting attribute path : customer.orders
[2022-11-29 14:52:21] - Visiting attribute path : orderTime
[2022-11-29 14:52:21] - Visiting attribute path : price
[2022-11-29 14:52:21] - Visiting attribute path : product
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14a9bbea]
[2022-11-29 14:52:21] - Visiting attribute path : product.ingredients
[2022-11-29 14:52:21] - Visiting attribute path : product.price
[2022-11-29 14:52:21] - Visiting attribute path : product.title
[2022-11-29 14:52:21] - Visiting attribute path : product.weight
[2022-11-29 14:52:21] - Building LoadPlan...
[2022-11-29 14:52:21] - processing queryspace <gen:0>
[2022-11-29 14:52:21] - LoadPlan(entity=com.app.code.Order)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Order, querySpaceUid=<gen:0>, path=com.app.code.Order)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.Order.customer)
          - EntityAttributeFetchImpl(entity=com.app.code.Product, querySpaceUid=<gen:2>, path=com.app.code.Order.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.app.code.Product)
                - SQL table alias mapping - product2_
                - alias suffix - 2_
                - suffixed key columns - {product_1_2_2_}

[2022-11-29 14:52:21] - Static select for entity com.app.code.Order [NONE]: select order0_.order_id as order_id1_1_0_, order0_.customer_id as customer4_1_0_, order0_.order_time as order_ti2_1_0_, order0_.price as price3_1_0_, order0_.product_id as product_5_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_, product2_.product_id as product_1_2_2_, product2_.ingredients as ingredie2_2_2_, product2_.price as price3_2_2_, product2_.title as title4_2_2_, product2_.weight as weight5_2_2_ from order_list order0_ left outer join customer customer1_ on order0_.customer_id=customer1_.customer_id left outer join product product2_ on order0_.product_id=product2_.product_id where order0_.order_id=?
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1befc85c]
[2022-11-29 14:52:21] - Visiting attribute path : customer
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ff6d894]
[2022-11-29 14:52:21] - Visiting attribute path : customer.address
[2022-11-29 14:52:21] - Visiting attribute path : customer.email
[2022-11-29 14:52:21] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:21] - Visiting attribute path : customer.job
[2022-11-29 14:52:21] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:21] - Visiting attribute path : customer.location
[2022-11-29 14:52:21] - Visiting attribute path : customer.orders
[2022-11-29 14:52:21] - Visiting attribute path : orderTime
[2022-11-29 14:52:21] - Visiting attribute path : price
[2022-11-29 14:52:21] - Visiting attribute path : product
[2022-11-29 14:52:21] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@205302c4]
[2022-11-29 14:52:21] - Visiting attribute path : product.ingredients
[2022-11-29 14:52:21] - Visiting attribute path : product.price
[2022-11-29 14:52:21] - Visiting attribute path : product.title
[2022-11-29 14:52:21] - Visiting attribute path : product.weight
[2022-11-29 14:52:21] - Building LoadPlan...
[2022-11-29 14:52:21] - processing queryspace <gen:0>
[2022-11-29 14:52:21] - LoadPlan(entity=com.app.code.Order)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Order, querySpaceUid=<gen:0>, path=com.app.code.Order)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.Order.customer)
          - EntityAttributeFetchImpl(entity=com.app.code.Product, querySpaceUid=<gen:2>, path=com.app.code.Order.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.app.code.Product)
                - SQL table alias mapping - product2_
                - alias suffix - 2_
                - suffixed key columns - {product_1_2_2_}

[2022-11-29 14:52:21] - Static select for entity com.app.code.Order [READ]: select order0_.order_id as order_id1_1_0_, order0_.customer_id as customer4_1_0_, order0_.order_time as order_ti2_1_0_, order0_.price as price3_1_0_, order0_.product_id as product_5_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_, product2_.product_id as product_1_2_2_, product2_.ingredients as ingredie2_2_2_, product2_.price as price3_2_2_, product2_.title as title4_2_2_, product2_.weight as weight5_2_2_ from order_list order0_ left outer join customer customer1_ on order0_.customer_id=customer1_.customer_id left outer join product product2_ on order0_.product_id=product2_.product_id where order0_.order_id=?
[2022-11-29 14:52:21] - Static select for action ACTION_MERGE on entity com.app.code.Order: select order0_.order_id as order_id1_1_2_, order0_.customer_id as customer4_1_2_, order0_.order_time as order_ti2_1_2_, order0_.price as price3_1_2_, order0_.product_id as product_5_1_2_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_, product2_.product_id as product_1_2_1_, product2_.ingredients as ingredie2_2_1_, product2_.price as price3_2_1_, product2_.title as title4_2_1_, product2_.weight as weight5_2_1_ from order_list order0_ left outer join customer customer1_ on order0_.customer_id=customer1_.customer_id left outer join product product2_ on order0_.product_id=product2_.product_id where order0_.order_id=?
[2022-11-29 14:52:21] - Static select for action ACTION_REFRESH on entity com.app.code.Order: select order0_.order_id as order_id1_1_2_, order0_.customer_id as customer4_1_2_, order0_.order_time as order_ti2_1_2_, order0_.price as price3_1_2_, order0_.product_id as product_5_1_2_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_, product2_.product_id as product_1_2_1_, product2_.ingredients as ingredie2_2_1_, product2_.price as price3_2_1_, product2_.title as title4_2_1_, product2_.weight as weight5_2_1_ from order_list order0_ left outer join customer customer1_ on order0_.customer_id=customer1_.customer_id left outer join product product2_ on order0_.product_id=product2_.product_id where order0_.order_id=?
[2022-11-29 14:52:21] - No actions specified; doing nothing
[2022-11-29 14:52:21] - Checking 0 named HQL queries
[2022-11-29 14:52:21] - Checking 0 named SQL queries
[2022-11-29 14:52:21] - Registering SessionFactory: d87d9e06-0b7e-461b-8268-5fa7a5b9fe7d (<unnamed>)
[2022-11-29 14:52:21] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:52:21] - A sessionFactory was successfully created.
[2022-11-29 14:52:21] - Statistics initialized [enabled=false]
[2022-11-29 14:52:21] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:52:21] - Session was successfully created.
[2022-11-29 14:52:21] - begin
[2022-11-29 14:52:21] - Transaction for session was successfully started
[2022-11-29 14:52:21] - Executing identity-insert immediately
[2022-11-29 14:52:21] - Validation failed for classes [com.app.code.Customer] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='Enter a first name between 2 and 20', propertyPath=firstName, rootBeanClass=class com.app.code.Customer, messageTemplate='Enter a first name between 2 and 20'}
]
[2022-11-29 14:52:21] - Transaction for session was successfully closed
[2022-11-29 14:52:21] - Something is wrong with your data. Verify your data and try again
[2022-11-29 14:52:22] - Something is wrong with your data. Verify your data and try again
[2022-11-29 14:52:30] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:52:30] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:52:30] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:52:30] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:52:30] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:52:30] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:52:30] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:52:30] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:52:30] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:52:30] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:52:30] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:52:30] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:30] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:30] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:30] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:52:30] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:52:30] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:52:30] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:30] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:30] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:30] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:30] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:30] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:30] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:30] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:30] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:30] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:30] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:30] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:30] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:30] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:30] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:30] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:30] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:30] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:30] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:30] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:30] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:30] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:52:30] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:52:30] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:52:30] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:52:30] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:30] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:30] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:52:30] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:52:30] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:52:30] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:52:30] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:52:30] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:52:30] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:52:30] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:52:30] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:52:30] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:52:30] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:52:30] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:52:30] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:52:30] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:52:30] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:52:30] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:52:30] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:52:30] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:52:30] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:52:30] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:52:30] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:52:30] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:52:30] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:52:30] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:52:30] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:30] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:30] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:30] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:52:30] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:30] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:30] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:30] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:52:30] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:52:30] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:52:30] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:52:30] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:52:30] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:52:30] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:52:30] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:52:30] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:52:30] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:52:30] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:52:30] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:52:30] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:52:30] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:30] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:30] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:30] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:30] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:30] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:30] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:52:30] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:52:30] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:30] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:30] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:30] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:30] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:30] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:30] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:52:30] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:52:30] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:52:30] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:52:30] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:52:30] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:52:30] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:52:30] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:52:30] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:52:30] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:52:30] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:52:30] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:52:30] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:52:30] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:52:30] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4fed50d9
[2022-11-29 14:52:30] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ba108ac
[2022-11-29 14:52:30] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@295d3b9a
[2022-11-29 14:52:30] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@36127813
[2022-11-29 14:52:30] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@135c9d90
[2022-11-29 14:52:30] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10bb033f
[2022-11-29 14:52:30] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@507a7b59
[2022-11-29 14:52:30] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@758d53a5
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:52:30] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:52:30] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:52:30] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:52:30] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:52:30] - HHH10001003: Autocommit mode: false
[2022-11-29 14:52:30] - Initializing Connection pool with 1 Connections
[2022-11-29 14:52:30] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:52:30] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:52:30] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:52:30] - JDBC version : 4.2
[2022-11-29 14:52:30] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:52:30] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:52:30] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:52:30] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:52:30] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43b409b6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72420607]
[2022-11-29 14:52:30] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:52:30] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:30] - Import with entity name User
[2022-11-29 14:52:30] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:52:30] - building SimpleValue for user_id
[2022-11-29 14:52:30] - Building property user_id
[2022-11-29 14:52:30] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:52:30] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - Building property customer
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:52:30] - building SimpleValue for password
[2022-11-29 14:52:30] - Building property password
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:52:30] - building SimpleValue for username
[2022-11-29 14:52:30] - Building property username
[2022-11-29 14:52:30] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:52:30] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:30] - Import with entity name Customer
[2022-11-29 14:52:30] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:52:30] - building SimpleValue for id
[2022-11-29 14:52:30] - Building property id
[2022-11-29 14:52:30] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:52:30] - building SimpleValue for address
[2022-11-29 14:52:30] - Building property address
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:52:30] - building SimpleValue for email
[2022-11-29 14:52:30] - Building property email
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:52:30] - building SimpleValue for firstName
[2022-11-29 14:52:30] - Building property firstName
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:52:30] - building SimpleValue for job
[2022-11-29 14:52:30] - Building property job
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:52:30] - building SimpleValue for lastName
[2022-11-29 14:52:30] - Building property lastName
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:52:30] - building SimpleValue for location
[2022-11-29 14:52:30] - Building property location
[2022-11-29 14:52:30] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:30] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:52:30] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:52:30] - building SimpleValue for orders
[2022-11-29 14:52:30] - Building property orders
[2022-11-29 14:52:30] - Starting fillSimpleValue for user_id
[2022-11-29 14:52:30] - Starting fillSimpleValue for password
[2022-11-29 14:52:30] - Starting fillSimpleValue for username
[2022-11-29 14:52:30] - Starting fillSimpleValue for id
[2022-11-29 14:52:30] - Starting fillSimpleValue for address
[2022-11-29 14:52:30] - Starting fillSimpleValue for email
[2022-11-29 14:52:30] - Starting fillSimpleValue for firstName
[2022-11-29 14:52:30] - Starting fillSimpleValue for job
[2022-11-29 14:52:30] - Starting fillSimpleValue for lastName
[2022-11-29 14:52:30] - Starting fillSimpleValue for location
[2022-11-29 14:52:30] - Starting fillSimpleValue for orders
[2022-11-29 14:52:30] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:52:30] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:52:30] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:30] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:30] - Building session factory
[2022-11-29 14:52:30] - SessionFactory name : null
[2022-11-29 14:52:30] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:52:30] - Automatic session close at end of transaction: disabled
[2022-11-29 14:52:30] - Statistics: disabled
[2022-11-29 14:52:30] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:52:30] - Default entity-mode: pojo
[2022-11-29 14:52:30] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:52:30] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:52:30] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:52:30] - Default batch fetch size: -1
[2022-11-29 14:52:30] - Maximum outer join fetch depth: 2
[2022-11-29 14:52:30] - Default null ordering: NONE
[2022-11-29 14:52:30] - Order SQL updates by primary key: disabled
[2022-11-29 14:52:30] - Order SQL inserts for batching: disabled
[2022-11-29 14:52:30] - multi-tenancy strategy : NONE
[2022-11-29 14:52:30] - JTA Track by Thread: enabled
[2022-11-29 14:52:30] - Query language substitutions: {}
[2022-11-29 14:52:30] - Named query checking : enabled
[2022-11-29 14:52:30] - Second-level cache: disabled
[2022-11-29 14:52:30] - Second-level query cache: disabled
[2022-11-29 14:52:30] - Second-level query cache factory: null
[2022-11-29 14:52:30] - Second-level cache region prefix: null
[2022-11-29 14:52:30] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:52:30] - Structured second-level cache entries: disabled
[2022-11-29 14:52:30] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:52:30] - Automatic eviction of collection cache: disabled
[2022-11-29 14:52:30] - JDBC batch size: 15
[2022-11-29 14:52:30] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:52:30] - Scrollable result sets: enabled
[2022-11-29 14:52:30] - Wrap result sets: disabled
[2022-11-29 14:52:30] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:52:30] - JDBC result set fetch size: null
[2022-11-29 14:52:30] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:52:30] - Generate SQL with comments: disabled
[2022-11-29 14:52:30] - JPA compliance - query : disabled
[2022-11-29 14:52:30] - JPA compliance - closed-handling : disabled
[2022-11-29 14:52:30] - JPA compliance - lists : disabled
[2022-11-29 14:52:30] - JPA compliance - transactions : disabled
[2022-11-29 14:52:30] - Session factory constructed with filter configurations : {}
[2022-11-29 14:52:30] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@56026316, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:52:30] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:52:30] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:52:30] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:52:30] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:52:30] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:52:30] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:52:30] - Loaded expression factory via original TCCL
[2022-11-29 14:52:30] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:52:30] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:52:30] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:52:30] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:52:30] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:52:30] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:30] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:30] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:30] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:30] - Skipping JACC integration as it was not enabled
[2022-11-29 14:52:30] - Instantiated session factory
[2022-11-29 14:52:30] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43b409b6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@610c01a9]
[2022-11-29 14:52:30] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:30] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:30] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:30] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:30] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:30] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:30] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:30] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:30] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:52:30] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:52:30] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:52:30] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:52:30] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:52:30] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:52:30] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:52:30] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12acffbe]
[2022-11-29 14:52:30] - Visiting attribute path : address
[2022-11-29 14:52:30] - Visiting attribute path : email
[2022-11-29 14:52:30] - Visiting attribute path : firstName
[2022-11-29 14:52:30] - Visiting attribute path : job
[2022-11-29 14:52:30] - Visiting attribute path : lastName
[2022-11-29 14:52:30] - Visiting attribute path : location
[2022-11-29 14:52:30] - Visiting attribute path : orders
[2022-11-29 14:52:30] - Building LoadPlan...
[2022-11-29 14:52:30] - processing queryspace <gen:0>
[2022-11-29 14:52:30] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:52:30] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:30] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d0b655]
[2022-11-29 14:52:30] - Visiting attribute path : address
[2022-11-29 14:52:30] - Visiting attribute path : email
[2022-11-29 14:52:30] - Visiting attribute path : firstName
[2022-11-29 14:52:30] - Visiting attribute path : job
[2022-11-29 14:52:30] - Visiting attribute path : lastName
[2022-11-29 14:52:30] - Visiting attribute path : location
[2022-11-29 14:52:30] - Visiting attribute path : orders
[2022-11-29 14:52:30] - Building LoadPlan...
[2022-11-29 14:52:30] - processing queryspace <gen:0>
[2022-11-29 14:52:30] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:52:30] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:30] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:30] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:30] - Static SQL for entity: com.app.code.User
[2022-11-29 14:52:30] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:52:30] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:52:30] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:52:30] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:52:30] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:52:30] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:52:30] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5400f92e]
[2022-11-29 14:52:30] - Visiting attribute path : customer
[2022-11-29 14:52:30] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5036d14d]
[2022-11-29 14:52:30] - Visiting attribute path : customer.address
[2022-11-29 14:52:30] - Visiting attribute path : customer.email
[2022-11-29 14:52:30] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:30] - Visiting attribute path : customer.job
[2022-11-29 14:52:30] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:30] - Visiting attribute path : customer.location
[2022-11-29 14:52:30] - Visiting attribute path : customer.orders
[2022-11-29 14:52:30] - Visiting attribute path : password
[2022-11-29 14:52:30] - Visiting attribute path : username
[2022-11-29 14:52:30] - Building LoadPlan...
[2022-11-29 14:52:30] - processing queryspace <gen:0>
[2022-11-29 14:52:30] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:52:30] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:30] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@791d32d]
[2022-11-29 14:52:30] - Visiting attribute path : customer
[2022-11-29 14:52:30] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@94fc612]
[2022-11-29 14:52:30] - Visiting attribute path : customer.address
[2022-11-29 14:52:30] - Visiting attribute path : customer.email
[2022-11-29 14:52:30] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:30] - Visiting attribute path : customer.job
[2022-11-29 14:52:30] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:30] - Visiting attribute path : customer.location
[2022-11-29 14:52:30] - Visiting attribute path : customer.orders
[2022-11-29 14:52:30] - Visiting attribute path : password
[2022-11-29 14:52:30] - Visiting attribute path : username
[2022-11-29 14:52:30] - Building LoadPlan...
[2022-11-29 14:52:30] - processing queryspace <gen:0>
[2022-11-29 14:52:30] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:52:30] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:30] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:30] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:30] - No actions specified; doing nothing
[2022-11-29 14:52:30] - Checking 0 named HQL queries
[2022-11-29 14:52:30] - Checking 0 named SQL queries
[2022-11-29 14:52:30] - Registering SessionFactory: 9ffe1288-440d-4f47-8cc7-013532990163 (<unnamed>)
[2022-11-29 14:52:30] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:52:30] - A sessionFactory was successfully created.
[2022-11-29 14:52:30] - Statistics initialized [enabled=false]
[2022-11-29 14:52:30] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:52:30] - Session was successfully created.
[2022-11-29 14:52:30] - begin
[2022-11-29 14:52:30] - Transaction for session was successfully started
[2022-11-29 14:52:30] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ae1ce53
[2022-11-29 14:52:30] - parse() - HQL: SELECT firstName,lastName,email,job,orders FROM com.app.code.Customer ORDER BY firstName,lastName
[2022-11-29 14:52:30] - throwQueryException() : no errors
[2022-11-29 14:52:30] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[IDENT] Node: 'com'
    |  |        |  |  \-[IDENT] Node: 'app'
    |  |        |  \-[IDENT] Node: 'code'
    |  |        \-[IDENT] Node: 'Customer'
    |  \-[SELECT] Node: 'SELECT'
    |     +-[IDENT] Node: 'firstName'
    |     +-[IDENT] Node: 'lastName'
    |     +-[IDENT] Node: 'email'
    |     +-[IDENT] Node: 'job'
    |     \-[IDENT] Node: 'orders'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'firstName'
       \-[IDENT] Node: 'lastName'

[2022-11-29 14:52:30] - select << begin [level=1, statement=select]
[2022-11-29 14:52:30] - FromClause{level=1} : com.app.code.Customer (<no alias>) -> customer0_
[2022-11-29 14:52:30] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:52:30] - getDataType() : firstName -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:30] - Resolved : {synthetic-alias}.firstName -> customer0_.first_name
[2022-11-29 14:52:30] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:52:30] - getDataType() : lastName -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:30] - Resolved : {synthetic-alias}.lastName -> customer0_.last_name
[2022-11-29 14:52:30] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:52:30] - getDataType() : email -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:30] - Resolved : {synthetic-alias}.email -> customer0_.email
[2022-11-29 14:52:30] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:52:30] - getDataType() : job -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:30] - Resolved : {synthetic-alias}.job -> customer0_.job
[2022-11-29 14:52:30] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:52:30] - getDataType() : orders -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:30] - Resolved : {synthetic-alias}.orders -> customer0_.orders
[2022-11-29 14:52:30] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:52:30] - getDataType() : firstName -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:30] - Resolved : {synthetic-alias}.firstName -> customer0_.first_name
[2022-11-29 14:52:30] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:52:30] - getDataType() : lastName -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:30] - Resolved : {synthetic-alias}.lastName -> customer0_.last_name
[2022-11-29 14:52:30] - select : finishing up [level=1, statement=select]
[2022-11-29 14:52:30] - processQuery() :  ( SELECT ( {select clause} ( customer0_.first_name {synthetic-alias} firstName ) ( customer0_.last_name {synthetic-alias} lastName ) ( customer0_.email {synthetic-alias} email ) ( customer0_.job {synthetic-alias} job ) ( customer0_.orders {synthetic-alias} orders ) ) ( FromClause{level=1} customer customer0_ ) ( ORDER ( customer0_.first_name {synthetic-alias} firstName ) ( customer0_.last_name {synthetic-alias} lastName ) ) )
[2022-11-29 14:52:30] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  | path: {synthetic-alias}.firstName
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  |  | originalText: {synthetic-alias}
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: firstName
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  | path: {synthetic-alias}.lastName
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  |  | originalText: {synthetic-alias}
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: lastName
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  | path: {synthetic-alias}.email
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  |  | originalText: {synthetic-alias}
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: email
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  | path: {synthetic-alias}.job
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  |  | originalText: {synthetic-alias}
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: job
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  | path: {synthetic-alias}.orders
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  |  | originalText: {synthetic-alias}
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: orders
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.app.code.Customer)
       | path: {synthetic-alias}.firstName
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.app.code.Customer)
       |  | originalText: {synthetic-alias}
       |  \-IdentNode
       |    persister: null
       |    originalText: firstName
       \-DotNode
         persister: SingleTableEntityPersister(com.app.code.Customer)
         path: {synthetic-alias}.lastName
          +-IdentNode
          | persister: SingleTableEntityPersister(com.app.code.Customer)
          | originalText: {synthetic-alias}
          \-IdentNode
            persister: null
            originalText: lastName

[2022-11-29 14:52:30] - Using FROM fragment [customer customer0_]
[2022-11-29 14:52:30] - select >> end [level=1, statement=select]
[2022-11-29 14:52:30] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path={synthetic-alias}.lastName,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[DOT] DotNode: 'customer0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path={synthetic-alias}.email,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |  +-[DOT] DotNode: 'customer0_.job' {propertyName=job,dereferenceType=PRIMITIVE,getPropertyPath=job,path={synthetic-alias}.job,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'job' {originalText=job}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    |  +-[DOT] DotNode: 'customer0_.orders' {propertyName=orders,dereferenceType=PRIMITIVE,getPropertyPath=orders,path={synthetic-alias}.orders,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'orders' {originalText=orders}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_4_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path={synthetic-alias}.lastName,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
          +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          \-[IDENT] IdentNode: 'lastName' {originalText=lastName}

[2022-11-29 14:52:30] - throwQueryException() : no errors
[2022-11-29 14:52:30] - HQL: SELECT firstName,lastName,email,job,orders FROM com.app.code.Customer ORDER BY firstName,lastName
[2022-11-29 14:52:30] - SQL: select customer0_.first_name as col_0_0_, customer0_.last_name as col_1_0_, customer0_.email as col_2_0_, customer0_.job as col_3_0_, customer0_.orders as col_4_0_ from customer customer0_ order by customer0_.first_name, customer0_.last_name
[2022-11-29 14:52:30] - throwQueryException() : no errors
[2022-11-29 14:52:30] - select customer0_.first_name as col_0_0_, customer0_.last_name as col_1_0_, customer0_.email as col_2_0_, customer0_.job as col_3_0_, customer0_.orders as col_4_0_ from customer customer0_ order by customer0_.first_name, customer0_.last_name
[2022-11-29 14:52:30] - Result set row: 0
[2022-11-29 14:52:30] - Result row: 
[2022-11-29 14:52:30] - Result set row: 1
[2022-11-29 14:52:30] - Result row: 
[2022-11-29 14:52:30] - Result set row: 2
[2022-11-29 14:52:30] - Result row: 
[2022-11-29 14:52:30] - committing
[2022-11-29 14:52:30] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:52:30] - Clearing local Synchronizations
[2022-11-29 14:52:30] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:52:30] - Session was successfully committed
[2022-11-29 14:52:30] - Transaction for session was successfully closed
[2022-11-29 14:52:36] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:52:36] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:52:36] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:52:36] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:52:36] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:52:36] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:52:36] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:52:36] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:52:36] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:52:36] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:52:36] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:52:36] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:36] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:36] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:36] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:52:36] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:52:36] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:52:36] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:36] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:36] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:36] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:36] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:36] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:36] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:36] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:36] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:36] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:36] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:36] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:36] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:36] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:36] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:36] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:36] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:36] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:36] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:36] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:36] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:36] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:52:36] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:52:36] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:52:36] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:52:36] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:36] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:36] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:52:36] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:52:36] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:52:36] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:52:36] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:52:36] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:52:36] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:52:36] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:52:36] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:52:36] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:52:36] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:52:36] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:52:36] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:52:36] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:52:36] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:52:36] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:52:36] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:52:36] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:52:36] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:52:36] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:52:36] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:52:36] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:52:36] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:52:36] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:52:36] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:36] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:36] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:36] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:52:36] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:36] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:36] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:36] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:52:36] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:52:36] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:52:36] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:52:36] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:52:36] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:52:36] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:52:36] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:52:36] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:52:36] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:52:36] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:52:36] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:52:36] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:52:36] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:36] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:36] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:36] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:36] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:36] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:36] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:52:36] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:52:36] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:36] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:36] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:36] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:36] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:36] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:36] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:52:36] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:52:36] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:52:36] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:52:36] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:52:36] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:52:36] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:52:36] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:52:36] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:52:36] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:52:36] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:52:36] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:52:36] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:52:36] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:52:36] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@381fef0f
[2022-11-29 14:52:36] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5f384ac9
[2022-11-29 14:52:36] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@554d83aa
[2022-11-29 14:52:36] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ad3b397
[2022-11-29 14:52:36] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d735c55
[2022-11-29 14:52:36] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@20003730
[2022-11-29 14:52:36] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1969b049
[2022-11-29 14:52:36] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e41f7f8
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:52:36] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:52:36] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:52:36] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:52:36] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:52:36] - HHH10001003: Autocommit mode: false
[2022-11-29 14:52:36] - Initializing Connection pool with 1 Connections
[2022-11-29 14:52:36] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:52:36] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:52:36] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:52:36] - JDBC version : 4.2
[2022-11-29 14:52:36] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:52:36] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:52:36] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:52:36] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:52:36] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5df43681] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2d792b1a]
[2022-11-29 14:52:36] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:52:36] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:36] - Import with entity name User
[2022-11-29 14:52:36] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:52:36] - building SimpleValue for user_id
[2022-11-29 14:52:36] - Building property user_id
[2022-11-29 14:52:36] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:52:36] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - Building property customer
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:52:36] - building SimpleValue for password
[2022-11-29 14:52:36] - Building property password
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:52:36] - building SimpleValue for username
[2022-11-29 14:52:36] - Building property username
[2022-11-29 14:52:36] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:52:36] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:36] - Import with entity name Customer
[2022-11-29 14:52:36] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:52:36] - building SimpleValue for id
[2022-11-29 14:52:36] - Building property id
[2022-11-29 14:52:36] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:52:36] - building SimpleValue for address
[2022-11-29 14:52:36] - Building property address
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:52:36] - building SimpleValue for email
[2022-11-29 14:52:36] - Building property email
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:52:36] - building SimpleValue for firstName
[2022-11-29 14:52:36] - Building property firstName
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:52:36] - building SimpleValue for job
[2022-11-29 14:52:36] - Building property job
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:52:36] - building SimpleValue for lastName
[2022-11-29 14:52:36] - Building property lastName
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:52:36] - building SimpleValue for location
[2022-11-29 14:52:36] - Building property location
[2022-11-29 14:52:36] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:36] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:52:36] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:52:36] - building SimpleValue for orders
[2022-11-29 14:52:36] - Building property orders
[2022-11-29 14:52:36] - Starting fillSimpleValue for user_id
[2022-11-29 14:52:36] - Starting fillSimpleValue for password
[2022-11-29 14:52:36] - Starting fillSimpleValue for username
[2022-11-29 14:52:36] - Starting fillSimpleValue for id
[2022-11-29 14:52:36] - Starting fillSimpleValue for address
[2022-11-29 14:52:36] - Starting fillSimpleValue for email
[2022-11-29 14:52:36] - Starting fillSimpleValue for firstName
[2022-11-29 14:52:36] - Starting fillSimpleValue for job
[2022-11-29 14:52:36] - Starting fillSimpleValue for lastName
[2022-11-29 14:52:36] - Starting fillSimpleValue for location
[2022-11-29 14:52:36] - Starting fillSimpleValue for orders
[2022-11-29 14:52:36] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:52:36] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:52:36] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:36] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:36] - Building session factory
[2022-11-29 14:52:36] - SessionFactory name : null
[2022-11-29 14:52:36] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:52:36] - Automatic session close at end of transaction: disabled
[2022-11-29 14:52:36] - Statistics: disabled
[2022-11-29 14:52:36] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:52:36] - Default entity-mode: pojo
[2022-11-29 14:52:36] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:52:36] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:52:36] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:52:36] - Default batch fetch size: -1
[2022-11-29 14:52:36] - Maximum outer join fetch depth: 2
[2022-11-29 14:52:36] - Default null ordering: NONE
[2022-11-29 14:52:36] - Order SQL updates by primary key: disabled
[2022-11-29 14:52:36] - Order SQL inserts for batching: disabled
[2022-11-29 14:52:36] - multi-tenancy strategy : NONE
[2022-11-29 14:52:36] - JTA Track by Thread: enabled
[2022-11-29 14:52:36] - Query language substitutions: {}
[2022-11-29 14:52:36] - Named query checking : enabled
[2022-11-29 14:52:36] - Second-level cache: disabled
[2022-11-29 14:52:36] - Second-level query cache: disabled
[2022-11-29 14:52:36] - Second-level query cache factory: null
[2022-11-29 14:52:36] - Second-level cache region prefix: null
[2022-11-29 14:52:36] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:52:36] - Structured second-level cache entries: disabled
[2022-11-29 14:52:36] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:52:36] - Automatic eviction of collection cache: disabled
[2022-11-29 14:52:36] - JDBC batch size: 15
[2022-11-29 14:52:36] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:52:36] - Scrollable result sets: enabled
[2022-11-29 14:52:36] - Wrap result sets: disabled
[2022-11-29 14:52:36] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:52:36] - JDBC result set fetch size: null
[2022-11-29 14:52:36] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:52:36] - Generate SQL with comments: disabled
[2022-11-29 14:52:36] - JPA compliance - query : disabled
[2022-11-29 14:52:36] - JPA compliance - closed-handling : disabled
[2022-11-29 14:52:36] - JPA compliance - lists : disabled
[2022-11-29 14:52:36] - JPA compliance - transactions : disabled
[2022-11-29 14:52:36] - Session factory constructed with filter configurations : {}
[2022-11-29 14:52:36] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1d30d412, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:52:36] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:52:36] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:52:36] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:52:36] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:52:36] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:52:36] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:52:36] - Loaded expression factory via original TCCL
[2022-11-29 14:52:36] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:52:36] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:52:36] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:52:36] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:52:36] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:52:36] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:36] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:36] - Skipping JACC integration as it was not enabled
[2022-11-29 14:52:36] - Instantiated session factory
[2022-11-29 14:52:36] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5df43681] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c21ad67]
[2022-11-29 14:52:36] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:36] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:36] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:36] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:36] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:36] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:52:36] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:52:36] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:52:36] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:52:36] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:52:36] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:52:36] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:52:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bfa0ad8]
[2022-11-29 14:52:36] - Visiting attribute path : address
[2022-11-29 14:52:36] - Visiting attribute path : email
[2022-11-29 14:52:36] - Visiting attribute path : firstName
[2022-11-29 14:52:36] - Visiting attribute path : job
[2022-11-29 14:52:36] - Visiting attribute path : lastName
[2022-11-29 14:52:36] - Visiting attribute path : location
[2022-11-29 14:52:36] - Visiting attribute path : orders
[2022-11-29 14:52:36] - Building LoadPlan...
[2022-11-29 14:52:36] - processing queryspace <gen:0>
[2022-11-29 14:52:36] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:52:36] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3413c76]
[2022-11-29 14:52:36] - Visiting attribute path : address
[2022-11-29 14:52:36] - Visiting attribute path : email
[2022-11-29 14:52:36] - Visiting attribute path : firstName
[2022-11-29 14:52:36] - Visiting attribute path : job
[2022-11-29 14:52:36] - Visiting attribute path : lastName
[2022-11-29 14:52:36] - Visiting attribute path : location
[2022-11-29 14:52:36] - Visiting attribute path : orders
[2022-11-29 14:52:36] - Building LoadPlan...
[2022-11-29 14:52:36] - processing queryspace <gen:0>
[2022-11-29 14:52:36] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:52:36] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:36] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:36] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:36] - Static SQL for entity: com.app.code.User
[2022-11-29 14:52:36] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:52:36] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:52:36] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:52:36] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:52:36] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:52:36] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:52:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464c110f]
[2022-11-29 14:52:36] - Visiting attribute path : customer
[2022-11-29 14:52:36] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f29cac]
[2022-11-29 14:52:36] - Visiting attribute path : customer.address
[2022-11-29 14:52:36] - Visiting attribute path : customer.email
[2022-11-29 14:52:36] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:36] - Visiting attribute path : customer.job
[2022-11-29 14:52:36] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:36] - Visiting attribute path : customer.location
[2022-11-29 14:52:36] - Visiting attribute path : customer.orders
[2022-11-29 14:52:36] - Visiting attribute path : password
[2022-11-29 14:52:36] - Visiting attribute path : username
[2022-11-29 14:52:36] - Building LoadPlan...
[2022-11-29 14:52:36] - processing queryspace <gen:0>
[2022-11-29 14:52:36] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:52:36] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:36] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5098d3c5]
[2022-11-29 14:52:36] - Visiting attribute path : customer
[2022-11-29 14:52:36] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1be65aac]
[2022-11-29 14:52:36] - Visiting attribute path : customer.address
[2022-11-29 14:52:36] - Visiting attribute path : customer.email
[2022-11-29 14:52:36] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:36] - Visiting attribute path : customer.job
[2022-11-29 14:52:36] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:36] - Visiting attribute path : customer.location
[2022-11-29 14:52:36] - Visiting attribute path : customer.orders
[2022-11-29 14:52:36] - Visiting attribute path : password
[2022-11-29 14:52:36] - Visiting attribute path : username
[2022-11-29 14:52:36] - Building LoadPlan...
[2022-11-29 14:52:36] - processing queryspace <gen:0>
[2022-11-29 14:52:36] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:52:36] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:36] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:36] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:36] - No actions specified; doing nothing
[2022-11-29 14:52:36] - Checking 0 named HQL queries
[2022-11-29 14:52:36] - Checking 0 named SQL queries
[2022-11-29 14:52:36] - Registering SessionFactory: 98a22859-897f-447f-9373-81daa64c47b9 (<unnamed>)
[2022-11-29 14:52:36] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:52:36] - A sessionFactory was successfully created.
[2022-11-29 14:52:36] - Statistics initialized [enabled=false]
[2022-11-29 14:52:36] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:52:36] - Session was successfully created.
[2022-11-29 14:52:36] - begin
[2022-11-29 14:52:36] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:36] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2022-11-29 14:52:36] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:52:36] - Processing attribute `address` : value = Alecu Ruso 2A
[2022-11-29 14:52:36] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:36] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:52:36] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:36] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:52:36] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:36] - Processing attribute `job` : value = Software Deeveloper
[2022-11-29 14:52:36] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:36] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:52:36] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:36] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:52:36] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:36] - Processing attribute `orders` : value = 9
[2022-11-29 14:52:36] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:36] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:52:36] - Done entity load : com.app.code.Customer#50
[2022-11-29 14:52:36] - committing
[2022-11-29 14:52:36] - Processing flush-time cascades
[2022-11-29 14:52:36] - Dirty checking collections
[2022-11-29 14:52:36] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2022-11-29 14:52:36] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:52:36] - Listing entities:
[2022-11-29 14:52:36] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Alecu Ruso 2A, location=Chisinau, orders=9, id=50, job=Software Deeveloper, email=edikutsu2002@mail.ru}
[2022-11-29 14:52:36] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:52:36] - Clearing local Synchronizations
[2022-11-29 14:52:36] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:52:36] - Session was successfully committed
[2022-11-29 14:52:36] - Transaction for session was successfully closed
[2022-11-29 14:52:39] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:52:39] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:52:39] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:52:39] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:52:39] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:52:39] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:52:39] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:52:39] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:52:39] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:52:39] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:52:39] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:52:39] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:39] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:39] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:39] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:52:39] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:52:39] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:52:39] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:39] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:39] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:39] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:39] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:39] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:39] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:39] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:39] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:39] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:39] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:39] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:39] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:39] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:39] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:39] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:39] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:39] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:39] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:39] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:39] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:39] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:52:39] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:52:39] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:52:39] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:52:39] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:39] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:39] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:52:39] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:52:39] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:52:39] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:52:39] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:52:39] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:52:39] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:52:39] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:52:39] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:52:39] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:52:39] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:52:39] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:52:39] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:52:39] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:52:39] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:52:39] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:52:39] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:52:39] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:52:39] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:52:39] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:52:39] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:52:39] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:52:39] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:52:39] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:52:39] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:39] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:39] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:39] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:52:39] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:39] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:39] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:39] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:52:39] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:52:39] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:52:39] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:52:39] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:52:39] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:52:39] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:52:39] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:52:39] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:52:39] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:52:39] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:52:39] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:52:39] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:52:39] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:39] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:39] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:39] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:39] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:39] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:39] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:52:39] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:52:39] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:39] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:39] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:39] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:39] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:39] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:39] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:52:39] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:52:39] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:52:39] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:52:39] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:52:39] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:52:39] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:52:39] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:52:39] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:52:39] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:52:39] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:52:39] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:52:39] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:52:39] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:52:39] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@228f076a
[2022-11-29 14:52:39] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@184c407e
[2022-11-29 14:52:39] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73a8c6ce
[2022-11-29 14:52:39] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@76f97a28
[2022-11-29 14:52:39] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c1797ca
[2022-11-29 14:52:39] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56a26d86
[2022-11-29 14:52:39] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@63095f2a
[2022-11-29 14:52:39] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e9c5159
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:52:39] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:52:39] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:52:39] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:52:39] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:52:39] - HHH10001003: Autocommit mode: false
[2022-11-29 14:52:39] - Initializing Connection pool with 1 Connections
[2022-11-29 14:52:39] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:52:39] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:52:39] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:52:39] - JDBC version : 4.2
[2022-11-29 14:52:39] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:52:39] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:52:39] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:52:39] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:52:39] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f44c092] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d2af968]
[2022-11-29 14:52:39] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:52:39] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:39] - Import with entity name User
[2022-11-29 14:52:39] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:52:39] - building SimpleValue for user_id
[2022-11-29 14:52:39] - Building property user_id
[2022-11-29 14:52:39] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:52:39] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - Building property customer
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:52:39] - building SimpleValue for password
[2022-11-29 14:52:39] - Building property password
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:52:39] - building SimpleValue for username
[2022-11-29 14:52:39] - Building property username
[2022-11-29 14:52:39] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:52:39] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:39] - Import with entity name Customer
[2022-11-29 14:52:39] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:52:39] - building SimpleValue for id
[2022-11-29 14:52:39] - Building property id
[2022-11-29 14:52:39] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:52:39] - building SimpleValue for address
[2022-11-29 14:52:39] - Building property address
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:52:39] - building SimpleValue for email
[2022-11-29 14:52:39] - Building property email
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:52:39] - building SimpleValue for firstName
[2022-11-29 14:52:39] - Building property firstName
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:52:39] - building SimpleValue for job
[2022-11-29 14:52:39] - Building property job
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:52:39] - building SimpleValue for lastName
[2022-11-29 14:52:39] - Building property lastName
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:52:39] - building SimpleValue for location
[2022-11-29 14:52:39] - Building property location
[2022-11-29 14:52:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:39] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:52:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:52:39] - building SimpleValue for orders
[2022-11-29 14:52:39] - Building property orders
[2022-11-29 14:52:39] - Starting fillSimpleValue for user_id
[2022-11-29 14:52:39] - Starting fillSimpleValue for password
[2022-11-29 14:52:39] - Starting fillSimpleValue for username
[2022-11-29 14:52:39] - Starting fillSimpleValue for id
[2022-11-29 14:52:39] - Starting fillSimpleValue for address
[2022-11-29 14:52:39] - Starting fillSimpleValue for email
[2022-11-29 14:52:39] - Starting fillSimpleValue for firstName
[2022-11-29 14:52:39] - Starting fillSimpleValue for job
[2022-11-29 14:52:39] - Starting fillSimpleValue for lastName
[2022-11-29 14:52:39] - Starting fillSimpleValue for location
[2022-11-29 14:52:39] - Starting fillSimpleValue for orders
[2022-11-29 14:52:39] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:52:39] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:52:39] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:39] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:39] - Building session factory
[2022-11-29 14:52:39] - SessionFactory name : null
[2022-11-29 14:52:39] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:52:39] - Automatic session close at end of transaction: disabled
[2022-11-29 14:52:39] - Statistics: disabled
[2022-11-29 14:52:39] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:52:39] - Default entity-mode: pojo
[2022-11-29 14:52:39] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:52:39] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:52:39] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:52:39] - Default batch fetch size: -1
[2022-11-29 14:52:39] - Maximum outer join fetch depth: 2
[2022-11-29 14:52:39] - Default null ordering: NONE
[2022-11-29 14:52:39] - Order SQL updates by primary key: disabled
[2022-11-29 14:52:39] - Order SQL inserts for batching: disabled
[2022-11-29 14:52:39] - multi-tenancy strategy : NONE
[2022-11-29 14:52:39] - JTA Track by Thread: enabled
[2022-11-29 14:52:39] - Query language substitutions: {}
[2022-11-29 14:52:39] - Named query checking : enabled
[2022-11-29 14:52:39] - Second-level cache: disabled
[2022-11-29 14:52:39] - Second-level query cache: disabled
[2022-11-29 14:52:39] - Second-level query cache factory: null
[2022-11-29 14:52:39] - Second-level cache region prefix: null
[2022-11-29 14:52:39] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:52:39] - Structured second-level cache entries: disabled
[2022-11-29 14:52:39] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:52:39] - Automatic eviction of collection cache: disabled
[2022-11-29 14:52:39] - JDBC batch size: 15
[2022-11-29 14:52:39] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:52:39] - Scrollable result sets: enabled
[2022-11-29 14:52:39] - Wrap result sets: disabled
[2022-11-29 14:52:39] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:52:39] - JDBC result set fetch size: null
[2022-11-29 14:52:39] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:52:39] - Generate SQL with comments: disabled
[2022-11-29 14:52:39] - JPA compliance - query : disabled
[2022-11-29 14:52:39] - JPA compliance - closed-handling : disabled
[2022-11-29 14:52:39] - JPA compliance - lists : disabled
[2022-11-29 14:52:39] - JPA compliance - transactions : disabled
[2022-11-29 14:52:39] - Session factory constructed with filter configurations : {}
[2022-11-29 14:52:39] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5bd6184f, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:52:39] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:52:39] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:52:39] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:52:39] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:52:39] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:52:39] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:52:39] - Loaded expression factory via original TCCL
[2022-11-29 14:52:39] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:52:39] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:52:39] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:52:39] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:52:39] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:52:39] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:39] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:39] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:39] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:39] - Skipping JACC integration as it was not enabled
[2022-11-29 14:52:39] - Instantiated session factory
[2022-11-29 14:52:39] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f44c092] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@36108702]
[2022-11-29 14:52:39] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:39] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:39] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:39] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:39] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:39] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:39] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:39] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:39] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:52:39] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:52:39] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:52:39] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:52:39] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:52:39] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:52:39] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:52:39] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bde873f]
[2022-11-29 14:52:39] - Visiting attribute path : address
[2022-11-29 14:52:39] - Visiting attribute path : email
[2022-11-29 14:52:39] - Visiting attribute path : firstName
[2022-11-29 14:52:39] - Visiting attribute path : job
[2022-11-29 14:52:39] - Visiting attribute path : lastName
[2022-11-29 14:52:39] - Visiting attribute path : location
[2022-11-29 14:52:39] - Visiting attribute path : orders
[2022-11-29 14:52:39] - Building LoadPlan...
[2022-11-29 14:52:39] - processing queryspace <gen:0>
[2022-11-29 14:52:39] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:52:39] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:39] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad5c4d7]
[2022-11-29 14:52:39] - Visiting attribute path : address
[2022-11-29 14:52:39] - Visiting attribute path : email
[2022-11-29 14:52:39] - Visiting attribute path : firstName
[2022-11-29 14:52:39] - Visiting attribute path : job
[2022-11-29 14:52:39] - Visiting attribute path : lastName
[2022-11-29 14:52:39] - Visiting attribute path : location
[2022-11-29 14:52:39] - Visiting attribute path : orders
[2022-11-29 14:52:39] - Building LoadPlan...
[2022-11-29 14:52:39] - processing queryspace <gen:0>
[2022-11-29 14:52:39] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:52:39] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:39] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:39] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:39] - Static SQL for entity: com.app.code.User
[2022-11-29 14:52:39] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:52:39] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:52:39] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:52:39] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:52:39] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:52:39] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:52:39] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@572d3971]
[2022-11-29 14:52:39] - Visiting attribute path : customer
[2022-11-29 14:52:39] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@431b3ae9]
[2022-11-29 14:52:39] - Visiting attribute path : customer.address
[2022-11-29 14:52:39] - Visiting attribute path : customer.email
[2022-11-29 14:52:39] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:39] - Visiting attribute path : customer.job
[2022-11-29 14:52:39] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:39] - Visiting attribute path : customer.location
[2022-11-29 14:52:39] - Visiting attribute path : customer.orders
[2022-11-29 14:52:39] - Visiting attribute path : password
[2022-11-29 14:52:39] - Visiting attribute path : username
[2022-11-29 14:52:39] - Building LoadPlan...
[2022-11-29 14:52:39] - processing queryspace <gen:0>
[2022-11-29 14:52:39] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:52:39] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:39] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7852f5a0]
[2022-11-29 14:52:39] - Visiting attribute path : customer
[2022-11-29 14:52:39] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60072b21]
[2022-11-29 14:52:39] - Visiting attribute path : customer.address
[2022-11-29 14:52:39] - Visiting attribute path : customer.email
[2022-11-29 14:52:39] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:39] - Visiting attribute path : customer.job
[2022-11-29 14:52:39] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:39] - Visiting attribute path : customer.location
[2022-11-29 14:52:39] - Visiting attribute path : customer.orders
[2022-11-29 14:52:39] - Visiting attribute path : password
[2022-11-29 14:52:39] - Visiting attribute path : username
[2022-11-29 14:52:39] - Building LoadPlan...
[2022-11-29 14:52:39] - processing queryspace <gen:0>
[2022-11-29 14:52:39] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:52:39] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:39] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:39] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:39] - No actions specified; doing nothing
[2022-11-29 14:52:39] - Checking 0 named HQL queries
[2022-11-29 14:52:39] - Checking 0 named SQL queries
[2022-11-29 14:52:39] - Registering SessionFactory: 2d6dfaa7-10e0-4a50-b2f2-7ad799a62d67 (<unnamed>)
[2022-11-29 14:52:39] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:52:39] - A sessionFactory was successfully created.
[2022-11-29 14:52:39] - Statistics initialized [enabled=false]
[2022-11-29 14:52:39] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:52:39] - Session was successfully created.
[2022-11-29 14:52:39] - begin
[2022-11-29 14:52:39] - select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:39] - Done entity load : com.app.code.Customer#500
[2022-11-29 14:52:39] - committing
[2022-11-29 14:52:39] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:52:39] - Clearing local Synchronizations
[2022-11-29 14:52:39] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:52:39] - Session was successfully committed
[2022-11-29 14:52:39] - Transaction for session was successfully closed
[2022-11-29 14:52:39] - Can't find customer with id  500
[2022-11-29 14:52:39] - Can't find customer with id  500
[2022-11-29 14:52:51] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:52:54] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:52:54] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:52:54] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:52:54] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:52:54] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:52:54] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:52:54] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:52:54] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:52:54] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:52:54] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:52:54] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:52:54] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:54] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:54] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:52:54] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:52:54] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:52:54] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:52:54] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:54] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:54] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:52:54] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:54] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:54] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:52:54] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:54] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:54] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:52:54] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:54] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:54] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:52:54] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:54] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:54] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:52:54] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:54] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:54] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:52:54] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:54] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:54] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:52:54] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:52:54] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:52:54] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:52:54] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:52:54] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:54] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:54] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:52:54] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:52:54] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:52:54] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:52:54] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:52:54] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:52:54] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:52:54] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:52:54] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:52:54] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:52:54] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:52:54] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:52:54] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:52:54] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:52:54] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:52:54] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:52:54] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:52:54] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:52:54] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:52:54] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:52:54] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:52:54] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:52:54] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:52:54] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:52:54] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:54] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:54] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:52:54] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:52:54] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:54] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:54] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:52:54] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:52:54] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:52:54] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:52:54] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:52:54] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:52:54] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:52:54] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:52:54] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:52:54] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:52:54] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:52:54] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:52:54] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:52:54] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:52:54] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:54] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:54] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:52:54] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:54] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:54] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:52:54] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:52:54] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:52:54] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:54] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:54] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:52:54] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:54] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:54] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:52:54] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:52:54] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:52:54] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:52:54] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:52:54] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:52:54] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:52:54] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:52:54] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:52:54] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:52:54] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:52:54] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:52:54] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:52:54] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:52:54] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:52:54] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57df0d4c
[2022-11-29 14:52:54] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c3e85ca
[2022-11-29 14:52:54] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e3e9909
[2022-11-29 14:52:54] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5153fa8b
[2022-11-29 14:52:54] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ec92880
[2022-11-29 14:52:54] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5671e246
[2022-11-29 14:52:54] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5c8ddf50
[2022-11-29 14:52:54] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12c4e1e8
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:52:54] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:52:54] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:52:54] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:52:54] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:52:54] - HHH10001003: Autocommit mode: false
[2022-11-29 14:52:54] - Initializing Connection pool with 1 Connections
[2022-11-29 14:52:54] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:52:55] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:52:55] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:52:55] - JDBC version : 4.2
[2022-11-29 14:52:55] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:52:55] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:52:55] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:52:55] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:52:55] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@12648c83] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@372f7865]
[2022-11-29 14:52:55] - Binding entity from annotated class: com.app.code.User
[2022-11-29 14:52:55] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:55] - Import with entity name User
[2022-11-29 14:52:55] - Bind entity com.app.code.User on table user_detail
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property user_id with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:user_id]
[2022-11-29 14:52:55] - building SimpleValue for user_id
[2022-11-29 14:52:55] - Building property user_id
[2022-11-29 14:52:55] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), user_id, identity, , ...)
[2022-11-29 14:52:55] - Binding column: Ejb3JoinColumn{logicalColumnName='customer_id', referencedColumn='', mappedBy=''}
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - Building property customer
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property password with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:password]
[2022-11-29 14:52:55] - building SimpleValue for password
[2022-11-29 14:52:55] - Building property password
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_detail), mappingColumn=username, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property username with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.User:username]
[2022-11-29 14:52:55] - building SimpleValue for username
[2022-11-29 14:52:55] - Building property username
[2022-11-29 14:52:55] - Binding entity from annotated class: com.app.code.Customer
[2022-11-29 14:52:55] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:52:55] - Import with entity name Customer
[2022-11-29 14:52:55] - Bind entity com.app.code.Customer on table customer
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property id with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:id]
[2022-11-29 14:52:55] - building SimpleValue for id
[2022-11-29 14:52:55] - Building property id
[2022-11-29 14:52:55] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(customer_id)]), id, identity, , ...)
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property address with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:address]
[2022-11-29 14:52:55] - building SimpleValue for address
[2022-11-29 14:52:55] - Building property address
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property email with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:email]
[2022-11-29 14:52:55] - building SimpleValue for email
[2022-11-29 14:52:55] - Building property email
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property firstName with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:firstName]
[2022-11-29 14:52:55] - building SimpleValue for firstName
[2022-11-29 14:52:55] - Building property firstName
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=job, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property job with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:job]
[2022-11-29 14:52:55] - building SimpleValue for job
[2022-11-29 14:52:55] - Building property job
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property lastName with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:lastName]
[2022-11-29 14:52:55] - building SimpleValue for lastName
[2022-11-29 14:52:55] - Building property lastName
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=location, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property location with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:location]
[2022-11-29 14:52:55] - building SimpleValue for location
[2022-11-29 14:52:55] - Building property location
[2022-11-29 14:52:55] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[2022-11-29 14:52:55] - MetadataSourceProcessor property orders with lazy=false
[2022-11-29 14:52:55] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Customer:orders]
[2022-11-29 14:52:55] - building SimpleValue for orders
[2022-11-29 14:52:55] - Building property orders
[2022-11-29 14:52:55] - Starting fillSimpleValue for user_id
[2022-11-29 14:52:55] - Starting fillSimpleValue for password
[2022-11-29 14:52:55] - Starting fillSimpleValue for username
[2022-11-29 14:52:55] - Starting fillSimpleValue for id
[2022-11-29 14:52:55] - Starting fillSimpleValue for address
[2022-11-29 14:52:55] - Starting fillSimpleValue for email
[2022-11-29 14:52:55] - Starting fillSimpleValue for firstName
[2022-11-29 14:52:55] - Starting fillSimpleValue for job
[2022-11-29 14:52:55] - Starting fillSimpleValue for lastName
[2022-11-29 14:52:55] - Starting fillSimpleValue for location
[2022-11-29 14:52:55] - Starting fillSimpleValue for orders
[2022-11-29 14:52:55] - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_detail]
[2022-11-29 14:52:55] - Forcing column [customer_id] to be non-null as it is part of the primary key for table [customer]
[2022-11-29 14:52:55] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:55] - Resolving reference to class: com.app.code.Customer
[2022-11-29 14:52:55] - Building session factory
[2022-11-29 14:52:55] - SessionFactory name : null
[2022-11-29 14:52:55] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:52:55] - Automatic session close at end of transaction: disabled
[2022-11-29 14:52:55] - Statistics: disabled
[2022-11-29 14:52:55] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:52:55] - Default entity-mode: pojo
[2022-11-29 14:52:55] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:52:55] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:52:55] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:52:55] - Default batch fetch size: -1
[2022-11-29 14:52:55] - Maximum outer join fetch depth: 2
[2022-11-29 14:52:55] - Default null ordering: NONE
[2022-11-29 14:52:55] - Order SQL updates by primary key: disabled
[2022-11-29 14:52:55] - Order SQL inserts for batching: disabled
[2022-11-29 14:52:55] - multi-tenancy strategy : NONE
[2022-11-29 14:52:55] - JTA Track by Thread: enabled
[2022-11-29 14:52:55] - Query language substitutions: {}
[2022-11-29 14:52:55] - Named query checking : enabled
[2022-11-29 14:52:55] - Second-level cache: disabled
[2022-11-29 14:52:55] - Second-level query cache: disabled
[2022-11-29 14:52:55] - Second-level query cache factory: null
[2022-11-29 14:52:55] - Second-level cache region prefix: null
[2022-11-29 14:52:55] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:52:55] - Structured second-level cache entries: disabled
[2022-11-29 14:52:55] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:52:55] - Automatic eviction of collection cache: disabled
[2022-11-29 14:52:55] - JDBC batch size: 15
[2022-11-29 14:52:55] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:52:55] - Scrollable result sets: enabled
[2022-11-29 14:52:55] - Wrap result sets: disabled
[2022-11-29 14:52:55] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:52:55] - JDBC result set fetch size: null
[2022-11-29 14:52:55] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:52:55] - Generate SQL with comments: disabled
[2022-11-29 14:52:55] - JPA compliance - query : disabled
[2022-11-29 14:52:55] - JPA compliance - closed-handling : disabled
[2022-11-29 14:52:55] - JPA compliance - lists : disabled
[2022-11-29 14:52:55] - JPA compliance - transactions : disabled
[2022-11-29 14:52:55] - Session factory constructed with filter configurations : {}
[2022-11-29 14:52:55] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@16bf6745, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:52:55] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:52:55] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:52:55] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:52:55] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:52:55] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:52:55] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:52:55] - Loaded expression factory via original TCCL
[2022-11-29 14:52:55] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:52:55] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:52:55] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:52:55] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:52:55] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:52:55] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:55] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:55] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:55] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:55] - Skipping JACC integration as it was not enabled
[2022-11-29 14:52:55] - Instantiated session factory
[2022-11-29 14:52:55] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@12648c83] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5b8f797a]
[2022-11-29 14:52:55] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:55] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:55] - Not known whether passed class name [com.app.code.Customer] is safe
[2022-11-29 14:52:55] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Customer
[2022-11-29 14:52:55] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:55] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:55] - Not known whether passed class name [com.app.code.User] is safe
[2022-11-29 14:52:55] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.User
[2022-11-29 14:52:55] - Static SQL for entity: com.app.code.Customer
[2022-11-29 14:52:55] -  Version select: select customer_id from customer where customer_id =?
[2022-11-29 14:52:55] -  Snapshot select: select customer_.customer_id, customer_.address as address2_0_, customer_.email as email3_0_, customer_.first_name as first_na4_0_, customer_.job as job5_0_, customer_.last_name as last_nam6_0_, customer_.location as location7_0_, customer_.orders as orders8_0_ from customer customer_ where customer_.customer_id=?
[2022-11-29 14:52:55] -  Insert 0: insert into customer (address, email, first_name, job, last_name, location, orders, customer_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:52:55] -  Update 0: update customer set address=?, email=?, first_name=?, job=?, last_name=?, location=?, orders=? where customer_id=?
[2022-11-29 14:52:55] -  Delete 0: delete from customer where customer_id=?
[2022-11-29 14:52:55] -  Identity insert: insert into customer (address, email, first_name, job, last_name, location, orders) values (?, ?, ?, ?, ?, ?, ?)
[2022-11-29 14:52:55] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be93ad1]
[2022-11-29 14:52:55] - Visiting attribute path : address
[2022-11-29 14:52:55] - Visiting attribute path : email
[2022-11-29 14:52:55] - Visiting attribute path : firstName
[2022-11-29 14:52:55] - Visiting attribute path : job
[2022-11-29 14:52:55] - Visiting attribute path : lastName
[2022-11-29 14:52:55] - Visiting attribute path : location
[2022-11-29 14:52:55] - Visiting attribute path : orders
[2022-11-29 14:52:55] - Building LoadPlan...
[2022-11-29 14:52:55] - processing queryspace <gen:0>
[2022-11-29 14:52:55] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:52:55] - Static select for entity com.app.code.Customer [NONE]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:55] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e88dd93]
[2022-11-29 14:52:55] - Visiting attribute path : address
[2022-11-29 14:52:55] - Visiting attribute path : email
[2022-11-29 14:52:55] - Visiting attribute path : firstName
[2022-11-29 14:52:55] - Visiting attribute path : job
[2022-11-29 14:52:55] - Visiting attribute path : lastName
[2022-11-29 14:52:55] - Visiting attribute path : location
[2022-11-29 14:52:55] - Visiting attribute path : orders
[2022-11-29 14:52:55] - Building LoadPlan...
[2022-11-29 14:52:55] - processing queryspace <gen:0>
[2022-11-29 14:52:55] - LoadPlan(entity=com.app.code.Customer)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Customer, querySpaceUid=<gen:0>, path=com.app.code.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {customer1_0_0_}

[2022-11-29 14:52:55] - Static select for entity com.app.code.Customer [READ]: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:55] - Static select for action ACTION_MERGE on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:55] - Static select for action ACTION_REFRESH on entity com.app.code.Customer: select customer0_.customer_id as customer1_0_0_, customer0_.address as address2_0_0_, customer0_.email as email3_0_0_, customer0_.first_name as first_na4_0_0_, customer0_.job as job5_0_0_, customer0_.last_name as last_nam6_0_0_, customer0_.location as location7_0_0_, customer0_.orders as orders8_0_0_ from customer customer0_ where customer0_.customer_id=?
[2022-11-29 14:52:55] - Static SQL for entity: com.app.code.User
[2022-11-29 14:52:55] -  Version select: select user_id from user_detail where user_id =?
[2022-11-29 14:52:55] -  Snapshot select: select user_.user_id, user_.customer_id as customer4_1_, user_.password as password2_1_, user_.username as username3_1_ from user_detail user_ where user_.user_id=?
[2022-11-29 14:52:55] -  Insert 0: insert into user_detail (customer_id, password, username, user_id) values (?, ?, ?, ?)
[2022-11-29 14:52:55] -  Update 0: update user_detail set customer_id=?, password=?, username=? where user_id=?
[2022-11-29 14:52:55] -  Delete 0: delete from user_detail where user_id=?
[2022-11-29 14:52:55] -  Identity insert: insert into user_detail (customer_id, password, username) values (?, ?, ?)
[2022-11-29 14:52:55] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74e24a29]
[2022-11-29 14:52:55] - Visiting attribute path : customer
[2022-11-29 14:52:55] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ece133c]
[2022-11-29 14:52:55] - Visiting attribute path : customer.address
[2022-11-29 14:52:55] - Visiting attribute path : customer.email
[2022-11-29 14:52:55] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:55] - Visiting attribute path : customer.job
[2022-11-29 14:52:55] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:55] - Visiting attribute path : customer.location
[2022-11-29 14:52:55] - Visiting attribute path : customer.orders
[2022-11-29 14:52:55] - Visiting attribute path : password
[2022-11-29 14:52:55] - Visiting attribute path : username
[2022-11-29 14:52:55] - Building LoadPlan...
[2022-11-29 14:52:55] - processing queryspace <gen:0>
[2022-11-29 14:52:55] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:52:55] - Static select for entity com.app.code.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:55] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3030c172]
[2022-11-29 14:52:55] - Visiting attribute path : customer
[2022-11-29 14:52:55] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@494d763b]
[2022-11-29 14:52:55] - Visiting attribute path : customer.address
[2022-11-29 14:52:55] - Visiting attribute path : customer.email
[2022-11-29 14:52:55] - Visiting attribute path : customer.firstName
[2022-11-29 14:52:55] - Visiting attribute path : customer.job
[2022-11-29 14:52:55] - Visiting attribute path : customer.lastName
[2022-11-29 14:52:55] - Visiting attribute path : customer.location
[2022-11-29 14:52:55] - Visiting attribute path : customer.orders
[2022-11-29 14:52:55] - Visiting attribute path : password
[2022-11-29 14:52:55] - Visiting attribute path : username
[2022-11-29 14:52:55] - Building LoadPlan...
[2022-11-29 14:52:55] - processing queryspace <gen:0>
[2022-11-29 14:52:55] - LoadPlan(entity=com.app.code.User)
    - Returns
       - EntityReturnImpl(entity=com.app.code.User, querySpaceUid=<gen:0>, path=com.app.code.User)
          - EntityAttributeFetchImpl(entity=com.app.code.Customer, querySpaceUid=<gen:1>, path=com.app.code.User.customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(customer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.app.code.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {customer1_0_1_}

[2022-11-29 14:52:55] - Static select for entity com.app.code.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.customer_id as customer4_1_0_, user0_.password as password2_1_0_, user0_.username as username3_1_0_, customer1_.customer_id as customer1_0_1_, customer1_.address as address2_0_1_, customer1_.email as email3_0_1_, customer1_.first_name as first_na4_0_1_, customer1_.job as job5_0_1_, customer1_.last_name as last_nam6_0_1_, customer1_.location as location7_0_1_, customer1_.orders as orders8_0_1_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:55] - Static select for action ACTION_MERGE on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:55] - Static select for action ACTION_REFRESH on entity com.app.code.User: select user0_.user_id as user_id1_1_1_, user0_.customer_id as customer4_1_1_, user0_.password as password2_1_1_, user0_.username as username3_1_1_, customer1_.customer_id as customer1_0_0_, customer1_.address as address2_0_0_, customer1_.email as email3_0_0_, customer1_.first_name as first_na4_0_0_, customer1_.job as job5_0_0_, customer1_.last_name as last_nam6_0_0_, customer1_.location as location7_0_0_, customer1_.orders as orders8_0_0_ from user_detail user0_ left outer join customer customer1_ on user0_.customer_id=customer1_.customer_id where user0_.user_id=?
[2022-11-29 14:52:55] - No actions specified; doing nothing
[2022-11-29 14:52:55] - Checking 0 named HQL queries
[2022-11-29 14:52:55] - Checking 0 named SQL queries
[2022-11-29 14:52:55] - Registering SessionFactory: 8eee2c54-c3c7-4de0-af91-467f332fed4a (<unnamed>)
[2022-11-29 14:52:55] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:52:55] - A sessionFactory was successfully created.
[2022-11-29 14:52:55] - Statistics initialized [enabled=false]
[2022-11-29 14:52:55] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:52:55] - Session was successfully created.
[2022-11-29 14:52:55] - begin
[2022-11-29 14:52:55] - Transaction for session was successfully started
[2022-11-29 14:52:55] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ae1ce53
[2022-11-29 14:52:55] - parse() - HQL: FROM com.app.code.Customer WHERE firstName = ?0 AND lastName = ?1
[2022-11-29 14:52:55] - throwQueryException() : no errors
[2022-11-29 14:52:55] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'code'
    |           \-[IDENT] Node: 'Customer'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'firstName'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'lastName'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '1'

[2022-11-29 14:52:55] - select << begin [level=1, statement=select]
[2022-11-29 14:52:55] - FromClause{level=1} : com.app.code.Customer (<no alias>) -> customer0_
[2022-11-29 14:52:55] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:52:55] - getDataType() : firstName -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:55] - Resolved : {synthetic-alias}.firstName -> customer0_.first_name
[2022-11-29 14:52:55] - Resolved : {synthetic-alias} -> {synthetic-alias}
[2022-11-29 14:52:55] - getDataType() : lastName -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:52:55] - Resolved : {synthetic-alias}.lastName -> customer0_.last_name
[2022-11-29 14:52:55] - select : finishing up [level=1, statement=select]
[2022-11-29 14:52:55] - processQuery() :  ( SELECT ( FromClause{level=1} customer customer0_ ) ( WHERE ( AND ( = ( customer0_.first_name {synthetic-alias} firstName ) ? ) ( = ( customer0_.last_name {synthetic-alias} lastName ) ? ) ) ) )
[2022-11-29 14:52:55] - Derived SELECT clause created.
[2022-11-29 14:52:55] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Customer): [customer]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Customer)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.app.code.Customer)
          |  | path: {synthetic-alias}.firstName
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.app.code.Customer)
          |  |  | originalText: {synthetic-alias}
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: firstName
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.app.code.Customer)
             | path: {synthetic-alias}.lastName
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.app.code.Customer)
             |  | originalText: {synthetic-alias}
             |  \-IdentNode
             |    persister: null
             |    originalText: lastName
             \-ParameterNode

[2022-11-29 14:52:55] - Using FROM fragment [customer customer0_]
[2022-11-29 14:52:55] - select >> end [level=1, statement=select]
[2022-11-29 14:52:55] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_.customer_id as customer1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.app.code.Customer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customer0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  \-[PARAM] ParameterNode: '?' {label=0, expectedType=org.hibernate.type.StringType@5228ece5}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path={synthetic-alias}.lastName,tableAlias=customer0_,className=com.app.code.Customer,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@5228ece5}

[2022-11-29 14:52:55] - throwQueryException() : no errors
[2022-11-29 14:52:55] - HQL: FROM com.app.code.Customer WHERE firstName = ?0 AND lastName = ?1
[2022-11-29 14:52:55] - SQL: select customer0_.customer_id as customer1_0_, customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_ from customer customer0_ where customer0_.first_name=? and customer0_.last_name=?
[2022-11-29 14:52:55] - throwQueryException() : no errors
[2022-11-29 14:52:55] - select customer0_.customer_id as customer1_0_, customer0_.address as address2_0_, customer0_.email as email3_0_, customer0_.first_name as first_na4_0_, customer0_.job as job5_0_, customer0_.last_name as last_nam6_0_, customer0_.location as location7_0_, customer0_.orders as orders8_0_ from customer customer0_ where customer0_.first_name=? and customer0_.last_name=?
[2022-11-29 14:52:55] - Result set row: 0
[2022-11-29 14:52:55] - Result row: EntityKey[com.app.code.Customer#50]
[2022-11-29 14:52:55] - Resolving attributes for [com.app.code.Customer#50]
[2022-11-29 14:52:55] - Processing attribute `address` : value = Alecu Ruso 2A
[2022-11-29 14:52:55] - Attribute (`address`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:55] - Processing attribute `email` : value = edikutsu2002@mail.ru
[2022-11-29 14:52:55] - Attribute (`email`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:55] - Processing attribute `firstName` : value = mititiuc
[2022-11-29 14:52:55] - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:55] - Processing attribute `job` : value = Software Deeveloper
[2022-11-29 14:52:55] - Attribute (`job`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:55] - Processing attribute `lastName` : value = eduard
[2022-11-29 14:52:55] - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:55] - Processing attribute `location` : value = Chisinau
[2022-11-29 14:52:55] - Attribute (`location`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:55] - Processing attribute `orders` : value = 9
[2022-11-29 14:52:55] - Attribute (`orders`)  - enhanced for lazy-loading? - false
[2022-11-29 14:52:55] - Done materializing entity [com.app.code.Customer#50]
[2022-11-29 14:52:55] - committing
[2022-11-29 14:52:55] - Processing flush-time cascades
[2022-11-29 14:52:55] - Dirty checking collections
[2022-11-29 14:52:55] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2022-11-29 14:52:55] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:52:55] - Listing entities:
[2022-11-29 14:52:55] - com.app.code.Customer{firstName=mititiuc, lastName=eduard, address=Alecu Ruso 2A, location=Chisinau, orders=9, id=50, job=Software Deeveloper, email=edikutsu2002@mail.ru}
[2022-11-29 14:52:55] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:52:55] - Clearing local Synchronizations
[2022-11-29 14:52:55] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:52:55] - Session was successfully committed
[2022-11-29 14:52:55] - Transaction was successfully closed
[2022-11-29 14:53:00] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:53:06] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:53:09] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:53:25] - Connection pool now considered primed; min-size will be maintained
[2022-11-29 14:54:39] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2022-11-29 14:54:39] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2022-11-29 14:54:39] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2022-11-29 14:54:39] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2022-11-29 14:54:39] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[2022-11-29 14:54:39] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[2022-11-29 14:54:39] - Building session factory using internal StandardServiceRegistryBuilder
[2022-11-29 14:54:39] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2022-11-29 14:54:39] - Building session factory using provided StandardServiceRegistry
[2022-11-29 14:54:39] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2022-11-29 14:54:39] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2022-11-29 14:54:39] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:54:39] - Adding type registration boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:54:39] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a2987f
[2022-11-29 14:54:39] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e0d7f85
[2022-11-29 14:54:39] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a289c82
[2022-11-29 14:54:39] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1cb395
[2022-11-29 14:54:39] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:54:39] - Adding type registration byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:54:39] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594d6d11
[2022-11-29 14:54:39] - Adding type registration character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:54:39] - Adding type registration char -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:54:39] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5329aef4
[2022-11-29 14:54:39] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:54:39] - Adding type registration short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:54:39] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ee7cbbe
[2022-11-29 14:54:39] - Adding type registration integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:54:39] - Adding type registration int -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:54:39] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f14c9ef
[2022-11-29 14:54:39] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:54:39] - Adding type registration long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:54:39] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c6ca7e4
[2022-11-29 14:54:39] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:54:39] - Adding type registration float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:54:39] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@728dbdf7
[2022-11-29 14:54:39] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:54:39] - Adding type registration double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:54:39] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f866ccc
[2022-11-29 14:54:39] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:54:39] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61d173f5
[2022-11-29 14:54:39] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:54:39] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5614b776
[2022-11-29 14:54:39] - Adding type registration string -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:54:39] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5228ece5
[2022-11-29 14:54:39] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3465b63b
[2022-11-29 14:54:39] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6116e710
[2022-11-29 14:54:39] - Adding type registration url -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:54:39] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4942cce0
[2022-11-29 14:54:39] - Adding type registration Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:54:39] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cc16c0e
[2022-11-29 14:54:39] - Adding type registration Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:54:39] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fd04a
[2022-11-29 14:54:39] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:54:39] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@191e29d6
[2022-11-29 14:54:39] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:54:39] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@301e8fe0
[2022-11-29 14:54:39] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:54:39] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a8f0c3e
[2022-11-29 14:54:39] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:54:39] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ba63650
[2022-11-29 14:54:39] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:54:39] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21949b8c
[2022-11-29 14:54:39] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:54:39] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4382c536
[2022-11-29 14:54:39] - Adding type registration date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:54:39] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73fa159d
[2022-11-29 14:54:39] - Adding type registration time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:54:39] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13b12319
[2022-11-29 14:54:39] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:54:39] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:54:39] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55ad5f45
[2022-11-29 14:54:39] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ef7311
[2022-11-29 14:54:39] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:54:39] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:54:39] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab29aa1
[2022-11-29 14:54:39] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9c3868
[2022-11-29 14:54:39] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74b6a7e2
[2022-11-29 14:54:39] - Adding type registration locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:54:39] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@261eed51
[2022-11-29 14:54:39] - Adding type registration currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:54:39] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75eab41d
[2022-11-29 14:54:39] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:54:39] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0a9ebc
[2022-11-29 14:54:39] - Adding type registration class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:54:39] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609e45e7
[2022-11-29 14:54:39] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:54:39] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c444e0
[2022-11-29 14:54:39] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27a15332
[2022-11-29 14:54:39] - Adding type registration binary -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:54:39] - Adding type registration byte[] -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:54:39] - Adding type registration [B -> org.hibernate.type.BinaryType@730b6846
[2022-11-29 14:54:39] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:54:39] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:54:39] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@250740f7
[2022-11-29 14:54:39] - Adding type registration row_version -> org.hibernate.type.RowVersionType@350d4ab9
[2022-11-29 14:54:39] - Adding type registration image -> org.hibernate.type.ImageType@33cff4f5
[2022-11-29 14:54:39] - Adding type registration characters -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:54:39] - Adding type registration char[] -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:54:39] - Adding type registration [C -> org.hibernate.type.CharArrayType@79d48d0e
[2022-11-29 14:54:39] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:54:39] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:54:39] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ea1ea36
[2022-11-29 14:54:39] - Adding type registration text -> org.hibernate.type.TextType@96021a7
[2022-11-29 14:54:39] - Adding type registration ntext -> org.hibernate.type.NTextType@10dc2a22
[2022-11-29 14:54:39] - Adding type registration blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:54:39] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12e0f8ae
[2022-11-29 14:54:39] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@deab3ba
[2022-11-29 14:54:39] - Adding type registration clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:54:39] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d993d90
[2022-11-29 14:54:39] - Adding type registration nclob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:54:39] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50444e61
[2022-11-29 14:54:39] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dcd7d3a
[2022-11-29 14:54:39] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65b5a787
[2022-11-29 14:54:39] - Adding type registration serializable -> org.hibernate.type.SerializableType@75df672c
[2022-11-29 14:54:39] - Adding type registration object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:54:39] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d2de378
[2022-11-29 14:54:39] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c0e1eb4
[2022-11-29 14:54:39] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a658b38
[2022-11-29 14:54:39] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@60420d7f
[2022-11-29 14:54:39] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4af3976a
[2022-11-29 14:54:39] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@644cb3e
[2022-11-29 14:54:39] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@20deac85
[2022-11-29 14:54:39] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@50877414
[2022-11-29 14:54:39] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@699f1a9
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2022-11-29 14:54:39] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2022-11-29 14:54:39] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[2022-11-29 14:54:39] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/restaurant?useSSL=false]
[2022-11-29 14:54:39] - HHH10001001: Connection properties: {password=Frb2eshox!, user=testuser}
[2022-11-29 14:54:39] - HHH10001003: Autocommit mode: false
[2022-11-29 14:54:39] - Initializing Connection pool with 1 Connections
[2022-11-29 14:54:39] - HHH000115: Hibernate connection pool size: 20 (min=1)
[2022-11-29 14:54:39] - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[2022-11-29 14:54:39] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
[2022-11-29 14:54:39] - JDBC version : 4.2
[2022-11-29 14:54:39] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2022-11-29 14:54:39] - JDBC driver metadata reported database stores quoted identifiers in more than one case
[2022-11-29 14:54:39] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2022-11-29 14:54:39] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2022-11-29 14:54:39] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@659e5936] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d686e7]
[2022-11-29 14:54:39] - Binding entity from annotated class: com.app.code.Product
[2022-11-29 14:54:39] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2022-11-29 14:54:39] - Import with entity name Product
[2022-11-29 14:54:39] - Bind entity com.app.code.Product on table product
[2022-11-29 14:54:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
[2022-11-29 14:54:39] - MetadataSourceProcessor property productId with lazy=false
[2022-11-29 14:54:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:productId]
[2022-11-29 14:54:39] - building SimpleValue for productId
[2022-11-29 14:54:39] - Building property productId
[2022-11-29 14:54:39] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), productId, identity, , ...)
[2022-11-29 14:54:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[2022-11-29 14:54:39] - MetadataSourceProcessor property ingredients with lazy=false
[2022-11-29 14:54:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:ingredients]
[2022-11-29 14:54:39] - building SimpleValue for ingredients
[2022-11-29 14:54:39] - Building property ingredients
[2022-11-29 14:54:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[2022-11-29 14:54:39] - MetadataSourceProcessor property price with lazy=false
[2022-11-29 14:54:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:price]
[2022-11-29 14:54:39] - building SimpleValue for price
[2022-11-29 14:54:39] - Building property price
[2022-11-29 14:54:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2022-11-29 14:54:39] - MetadataSourceProcessor property title with lazy=false
[2022-11-29 14:54:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:title]
[2022-11-29 14:54:39] - building SimpleValue for title
[2022-11-29 14:54:39] - Building property title
[2022-11-29 14:54:39] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=weight, insertable=true, updatable=true, unique=false}
[2022-11-29 14:54:39] - MetadataSourceProcessor property weight with lazy=false
[2022-11-29 14:54:39] - Attempting to locate auto-apply AttributeConverter for property [com.app.code.Product:weight]
[2022-11-29 14:54:39] - building SimpleValue for weight
[2022-11-29 14:54:39] - Building property weight
[2022-11-29 14:54:39] - Starting fillSimpleValue for productId
[2022-11-29 14:54:39] - Starting fillSimpleValue for ingredients
[2022-11-29 14:54:39] - Starting fillSimpleValue for price
[2022-11-29 14:54:39] - Starting fillSimpleValue for title
[2022-11-29 14:54:39] - Starting fillSimpleValue for weight
[2022-11-29 14:54:39] - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[2022-11-29 14:54:39] - Building session factory
[2022-11-29 14:54:39] - SessionFactory name : null
[2022-11-29 14:54:39] - Automatic flush during beforeCompletion(): enabled
[2022-11-29 14:54:39] - Automatic session close at end of transaction: disabled
[2022-11-29 14:54:39] - Statistics: disabled
[2022-11-29 14:54:39] - Deleted entity synthetic identifier rollback: disabled
[2022-11-29 14:54:39] - Default entity-mode: pojo
[2022-11-29 14:54:39] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2022-11-29 14:54:39] - Allow initialization of lazy state outside session : disabled
[2022-11-29 14:54:39] - Using BatchFetchStyle : LEGACY
[2022-11-29 14:54:39] - Default batch fetch size: -1
[2022-11-29 14:54:39] - Maximum outer join fetch depth: 2
[2022-11-29 14:54:39] - Default null ordering: NONE
[2022-11-29 14:54:39] - Order SQL updates by primary key: disabled
[2022-11-29 14:54:39] - Order SQL inserts for batching: disabled
[2022-11-29 14:54:39] - multi-tenancy strategy : NONE
[2022-11-29 14:54:39] - JTA Track by Thread: enabled
[2022-11-29 14:54:39] - Query language substitutions: {}
[2022-11-29 14:54:39] - Named query checking : enabled
[2022-11-29 14:54:39] - Second-level cache: disabled
[2022-11-29 14:54:39] - Second-level query cache: disabled
[2022-11-29 14:54:39] - Second-level query cache factory: null
[2022-11-29 14:54:39] - Second-level cache region prefix: null
[2022-11-29 14:54:39] - Optimize second-level cache for minimal puts: disabled
[2022-11-29 14:54:39] - Structured second-level cache entries: disabled
[2022-11-29 14:54:39] - Second-level cache direct-reference entries: disabled
[2022-11-29 14:54:39] - Automatic eviction of collection cache: disabled
[2022-11-29 14:54:39] - JDBC batch size: 15
[2022-11-29 14:54:39] - JDBC batch updates for versioned data: enabled
[2022-11-29 14:54:39] - Scrollable result sets: enabled
[2022-11-29 14:54:39] - Wrap result sets: disabled
[2022-11-29 14:54:39] - JDBC3 getGeneratedKeys(): enabled
[2022-11-29 14:54:39] - JDBC result set fetch size: null
[2022-11-29 14:54:39] - Connection release mode: AFTER_TRANSACTION
[2022-11-29 14:54:39] - Generate SQL with comments: disabled
[2022-11-29 14:54:39] - JPA compliance - query : disabled
[2022-11-29 14:54:39] - JPA compliance - closed-handling : disabled
[2022-11-29 14:54:39] - JPA compliance - lists : disabled
[2022-11-29 14:54:39] - JPA compliance - transactions : disabled
[2022-11-29 14:54:39] - Session factory constructed with filter configurations : {}
[2022-11-29 14:54:39] - Instantiating session factory with properties: {dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=S:\Programe\bin\bootstrap.jar;S:\Programe\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=true, user.timezone=Europe/Chisinau, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=MD, sun.boot.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ro, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-10-18, java.home=C:\Users\user\.jdks\openjdk-19.0.1, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, com.sun.management.jmxremote.password.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Frb2eshox!, com.sun.management.jmxremote.access.file=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049\jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=user, stdout.encoding=Cp1251, path.separator=;, common.loader="S:/Programe/lib","S:/Programe/lib/*.jar","S:\Programe/lib","S:\Programe/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=S:\Programe\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=S:\Programe, java.version=19.0.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-ssi.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=S:\Programe\bin, os.arch=amd64, connection.username=testuser, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=C:\Users\user\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\a9b503a4-b0bc-4878-ac3b-5c6107663049, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@67002516, native.encoding=Cp1251, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Users\user\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\OpenJDK\jdk-11.0.15.10-hotspot\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Users\user\Desktop\Studii\Portofoliu\Agario\Version1\venv\Scripts;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;C:\Program Files\Java\jdk1.8.0_341\bin;C:\Program Files\Java\jre1.8.0_341\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;D:\Programs\Maven\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;S:\Programe\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\user\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\user\AppData\Local\Programs\Python\Python310\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\user\AppData\Local\GitHubDesktop\bin;C:\Users\user\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., stderr.encoding=Cp1251, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/restaurant?useSSL=false, java.class.version=63.0}
[2022-11-29 14:54:39] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2022-11-29 14:54:39] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2022-11-29 14:54:39] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2022-11-29 14:54:39] - Trying to load META-INF/validation.xml via TCCL
[2022-11-29 14:54:39] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2022-11-29 14:54:39] - No META-INF/validation.xml found. Using annotation based configuration only.
[2022-11-29 14:54:39] - Loaded expression factory via original TCCL
[2022-11-29 14:54:39] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2022-11-29 14:54:39] - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2022-11-29 14:54:39] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2022-11-29 14:54:39] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2022-11-29 14:54:39] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2022-11-29 14:54:39] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:54:39] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:54:39] - Skipping JACC integration as it was not enabled
[2022-11-29 14:54:39] - Instantiated session factory
[2022-11-29 14:54:39] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@659e5936] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6409b4df]
[2022-11-29 14:54:39] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:54:39] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:54:39] - Not known whether passed class name [com.app.code.Product] is safe
[2022-11-29 14:54:39] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.code.Product
[2022-11-29 14:54:39] - Static SQL for entity: com.app.code.Product
[2022-11-29 14:54:39] -  Version select: select product_id from product where product_id =?
[2022-11-29 14:54:39] -  Snapshot select: select product_.product_id, product_.ingredients as ingredie2_0_, product_.price as price3_0_, product_.title as title4_0_, product_.weight as weight5_0_ from product product_ where product_.product_id=?
[2022-11-29 14:54:39] -  Insert 0: insert into product (ingredients, price, title, weight, product_id) values (?, ?, ?, ?, ?)
[2022-11-29 14:54:39] -  Update 0: update product set ingredients=?, price=?, title=?, weight=? where product_id=?
[2022-11-29 14:54:39] -  Delete 0: delete from product where product_id=?
[2022-11-29 14:54:39] -  Identity insert: insert into product (ingredients, price, title, weight) values (?, ?, ?, ?)
[2022-11-29 14:54:39] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ee9134b]
[2022-11-29 14:54:39] - Visiting attribute path : ingredients
[2022-11-29 14:54:39] - Visiting attribute path : price
[2022-11-29 14:54:39] - Visiting attribute path : title
[2022-11-29 14:54:39] - Visiting attribute path : weight
[2022-11-29 14:54:39] - Building LoadPlan...
[2022-11-29 14:54:39] - processing queryspace <gen:0>
[2022-11-29 14:54:39] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:54:39] - Static select for entity com.app.code.Product [NONE]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:54:39] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3774dc80]
[2022-11-29 14:54:39] - Visiting attribute path : ingredients
[2022-11-29 14:54:39] - Visiting attribute path : price
[2022-11-29 14:54:39] - Visiting attribute path : title
[2022-11-29 14:54:39] - Visiting attribute path : weight
[2022-11-29 14:54:39] - Building LoadPlan...
[2022-11-29 14:54:39] - processing queryspace <gen:0>
[2022-11-29 14:54:39] - LoadPlan(entity=com.app.code.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.code.Product, querySpaceUid=<gen:0>, path=com.app.code.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.code.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_0_0_}

[2022-11-29 14:54:39] - Static select for entity com.app.code.Product [READ]: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:54:39] - Static select for action ACTION_MERGE on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:54:39] - Static select for action ACTION_REFRESH on entity com.app.code.Product: select product0_.product_id as product_1_0_0_, product0_.ingredients as ingredie2_0_0_, product0_.price as price3_0_0_, product0_.title as title4_0_0_, product0_.weight as weight5_0_0_ from product product0_ where product0_.product_id=?
[2022-11-29 14:54:39] - No actions specified; doing nothing
[2022-11-29 14:54:39] - Checking 0 named HQL queries
[2022-11-29 14:54:39] - Checking 0 named SQL queries
[2022-11-29 14:54:39] - Registering SessionFactory: a33eb9d0-1eea-4900-9b3a-a8bd80f33f56 (<unnamed>)
[2022-11-29 14:54:39] - Not binding SessionFactory to JNDI, no JNDI name configured
[2022-11-29 14:54:39] - A sessionFactory was successfully created.
[2022-11-29 14:54:39] - Statistics initialized [enabled=false]
[2022-11-29 14:54:39] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2022-11-29 14:54:39] - Session was successfully created.
[2022-11-29 14:54:39] - begin
[2022-11-29 14:54:39] - Transaction for session was successfully started
[2022-11-29 14:54:39] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ae1ce53
[2022-11-29 14:54:39] - parse() - HQL: FROM com.app.code.Product
[2022-11-29 14:54:39] - throwQueryException() : no errors
[2022-11-29 14:54:39] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'code'
                \-[IDENT] Node: 'Product'

[2022-11-29 14:54:39] - select << begin [level=1, statement=select]
[2022-11-29 14:54:39] - FromClause{level=1} : com.app.code.Product (<no alias>) -> product0_
[2022-11-29 14:54:39] - select : finishing up [level=1, statement=select]
[2022-11-29 14:54:39] - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
[2022-11-29 14:54:39] - Derived SELECT clause created.
[2022-11-29 14:54:39] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [product]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.app.code.Product)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2022-11-29 14:54:39] - Using FROM fragment [product product0_]
[2022-11-29 14:54:39] - select >> end [level=1, statement=select]
[2022-11-29 14:54:39] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.product_id as product_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.code.Product}}

[2022-11-29 14:54:39] - throwQueryException() : no errors
[2022-11-29 14:54:39] - HQL: FROM com.app.code.Product
[2022-11-29 14:54:39] - SQL: select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:54:39] - throwQueryException() : no errors
[2022-11-29 14:54:39] - select product0_.product_id as product_1_0_, product0_.ingredients as ingredie2_0_, product0_.price as price3_0_, product0_.title as title4_0_, product0_.weight as weight5_0_ from product product0_
[2022-11-29 14:54:39] - Result set row: 0
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#1]
[2022-11-29 14:54:39] - Result set row: 1
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#2]
[2022-11-29 14:54:39] - Result set row: 2
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#3]
[2022-11-29 14:54:39] - Result set row: 3
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#4]
[2022-11-29 14:54:39] - Result set row: 4
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#5]
[2022-11-29 14:54:39] - Result set row: 5
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#6]
[2022-11-29 14:54:39] - Result set row: 6
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#7]
[2022-11-29 14:54:39] - Result set row: 7
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#8]
[2022-11-29 14:54:39] - Result set row: 8
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#9]
[2022-11-29 14:54:39] - Result set row: 9
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#10]
[2022-11-29 14:54:39] - Result set row: 10
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#11]
[2022-11-29 14:54:39] - Result set row: 11
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#12]
[2022-11-29 14:54:39] - Result set row: 12
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#13]
[2022-11-29 14:54:39] - Result set row: 13
[2022-11-29 14:54:39] - Result row: EntityKey[com.app.code.Product#14]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#1]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 8
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Pizza Margarita
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 330
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#1]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#2]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = salt, sausages, mozzarela, tomatoes, ketchup, olive, oil
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 8
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Pizza Rancho
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 320
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#2]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#3]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = oil, salt, tomatoes, pepper, cabbage, gratin
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 5
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Cezar Salade
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 220
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#3]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#4]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = mushrooms, chicken, pasta, mozzarela, oil
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 8
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Lasagna
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 350
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#4]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#5]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = milk, banana, sugar, mango
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 5
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Banana Milkshake
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 350
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#5]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#6]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = apple Juice, water, sugar
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 4
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Apple Juice
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 320
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#6]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#7]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = pasta, spaghetti, salt, sauce, vegetables
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 6
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Spaghetti
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 260
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#7]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#8]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = chichken, water, rice, salt, sauce, tomatoes, pasta
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 6
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Chicken Soup
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 350
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#8]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#9]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = mango, orange, banana, kiwi, apple, ananas
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 7
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Fruit Salat
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 320
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#9]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#10]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = sugar, blat, eggs, flour, butter, strawberry, cream
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 6
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Cake
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 300
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#10]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#11]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = mentol, water, melisa
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 4
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Tea
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 300
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#11]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#12]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = brazilian coffe
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 4
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Coffee
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 200
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#12]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#13]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = crispy, sausage, cucumber, tomatoes, blat, cabbage
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 7
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Kebab
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 350
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#13]
[2022-11-29 14:54:39] - Resolving attributes for [com.app.code.Product#14]
[2022-11-29 14:54:39] - Processing attribute `ingredients` : value = eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat
[2022-11-29 14:54:39] - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `price` : value = 7
[2022-11-29 14:54:39] - Attribute (`price`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `title` : value = Taco
[2022-11-29 14:54:39] - Attribute (`title`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Processing attribute `weight` : value = 340
[2022-11-29 14:54:39] - Attribute (`weight`)  - enhanced for lazy-loading? - false
[2022-11-29 14:54:39] - Done materializing entity [com.app.code.Product#14]
[2022-11-29 14:54:39] - committing
[2022-11-29 14:54:39] - Processing flush-time cascades
[2022-11-29 14:54:39] - Dirty checking collections
[2022-11-29 14:54:39] - Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
[2022-11-29 14:54:39] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2022-11-29 14:54:39] - Listing entities:
[2022-11-29 14:54:39] - com.app.code.Product{productId=6, price=4, ingredients=apple Juice, water, sugar, weight=320, title=Apple Juice}
[2022-11-29 14:54:39] - com.app.code.Product{productId=5, price=5, ingredients=milk, banana, sugar, mango, weight=350, title=Banana Milkshake}
[2022-11-29 14:54:39] - com.app.code.Product{productId=4, price=8, ingredients=mushrooms, chicken, pasta, mozzarela, oil, weight=350, title=Lasagna}
[2022-11-29 14:54:39] - com.app.code.Product{productId=3, price=5, ingredients=oil, salt, tomatoes, pepper, cabbage, gratin, weight=220, title=Cezar Salade}
[2022-11-29 14:54:39] - com.app.code.Product{productId=2, price=8, ingredients=salt, sausages, mozzarela, tomatoes, ketchup, olive, oil, weight=320, title=Pizza Rancho}
[2022-11-29 14:54:39] - com.app.code.Product{productId=1, price=8, ingredients=salt, mozzarela, blat,  tomatoes, chicken, olive, oil, pepper, weight=330, title=Pizza Margarita}
[2022-11-29 14:54:39] - com.app.code.Product{productId=14, price=7, ingredients=eggs, oil, sausage, flour, salad, cucumber, cabbage, carrot, beans, chicken meat, weight=340, title=Taco}
[2022-11-29 14:54:39] - com.app.code.Product{productId=13, price=7, ingredients=crispy, sausage, cucumber, tomatoes, blat, cabbage, weight=350, title=Kebab}
[2022-11-29 14:54:39] - com.app.code.Product{productId=12, price=4, ingredients=brazilian coffe, weight=200, title=Coffee}
[2022-11-29 14:54:39] - com.app.code.Product{productId=11, price=4, ingredients=mentol, water, melisa, weight=300, title=Tea}
[2022-11-29 14:54:39] - com.app.code.Product{productId=10, price=6, ingredients=sugar, blat, eggs, flour, butter, strawberry, cream, weight=300, title=Cake}
[2022-11-29 14:54:39] - com.app.code.Product{productId=9, price=7, ingredients=mango, orange, banana, kiwi, apple, ananas, weight=320, title=Fruit Salat}
[2022-11-29 14:54:39] - com.app.code.Product{productId=8, price=6, ingredients=chichken, water, rice, salt, sauce, tomatoes, pasta, weight=350, title=Chicken Soup}
[2022-11-29 14:54:39] - com.app.code.Product{productId=7, price=6, ingredients=pasta, spaghetti, salt, sauce, vegetables, weight=260, title=Spaghetti}
[2022-11-29 14:54:39] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:54:39] - Clearing local Synchronizations
[2022-11-29 14:54:39] - Initiating JDBC connection release from afterTransaction
[2022-11-29 14:54:39] - Session with tenant id null was successfully committed
[2022-11-29 14:54:39] - Transaction for session was successfully closed
[2022-11-29 14:55:09] - Connection pool now considered primed; min-size will be maintained
